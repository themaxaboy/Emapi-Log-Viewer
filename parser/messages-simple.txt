1 General Messages

Message: ResponseMessage

Message ID: 230

Type: General Messages

Description: This class adds a TapStatus to a plain message making up a response header

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
Message: SimpleRsp

Message ID: 231

Type: General Messages

Description: Simple response, for instance an order or auction id

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	reply		String	Generic single string reply
6	messageReference		String	The message reference from the corresponding RequestMessage.
1.1 General Messages (Internal)

Message: RequestMessage

Message ID: 237

Type: General Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: This structure is the base for all request messages.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2 Session

2.1 Establishment Messages

Message: TaxPreLogonReq

Message ID: 66

Type: Establishment Messages

Description: Request from client to gateway to find out on which gateway the actual login request should be targeted.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member	required	String	User's member firm
3	user	required	String	Mandatory user id. The user must belong to the member.
4	majorVersion		int	EMAPI major version. If any of the version fields is non-zero, the gateway will validate against the current EMAPI version.
5	minorVersion		int	EMAPI minor version. If any of the version fields is non-zero, the gateway will validate against the current EMAPI version.
6	microVersion		int	EMAPI micro version. If any of the version fields is non-zero, the gateway will validate against the current EMAPI version.
This request will normally return a response of type TaxPreLogonRsp.

Message: TaxPreLogonRsp

Message ID: 67

Type: Establishment Messages

Description: Message from the gateway as a response to TaxPreLogonReq.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	reply		String	Generic single string reply
6	address		String	Hostname or IP address of the gateway where to log in
7	port		Integer	TCP port of the gateway where to log in
8	ticket		Long	Ticket to be sent along with the login request to the gateway
9	taxConnectors		TaxConnectorEntry[]	List of IP address and port pairs of servers that handle subscription groups.
10	messageReference		String	The message reference from the corresponding RequestMessage.
Message: TaxLogonReq

Message ID: 63

Type: Establishment Messages

Description: Request to the gateway to log in a member/user

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member	required	String	User's member firm
3	user	required	String	Mandatory user id. The user must belong to the member.
4	password	required	String	User's password
5	ticket		Long	Ticket received at pre-login
6	possDupSessId		Integer	Possible duplicate session id. If two sessions (that is, users) have the same possDupSessId it means that an unacknowledged request on one of the sessions can be resent on the other with the possDup flag set and the system will be able to resolve if it is a duplicate or not.
7	majorVersion		int	EMAPI major version. If any of the version fields is non-zero, the gateway will validate against the current EMAPI version.
8	minorVersion		int	EMAPI minor version. If any of the version fields is non-zero, the gateway will validate against the current EMAPI version.
9	microVersion		int	EMAPI micro version. If any of the version fields is non-zero, the gateway will validate against the current EMAPI version.
This request will normally return a response of type TaxLogonRsp.

Message: TaxLogonRsp

Message ID: 64

Type: Establishment Messages

Description: Sent from the gateway to the client as a response to TaxLogonReq.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	reply		String	Generic single string reply
6	logonAccepted		Boolean	Indicates whether the login was successful or not.
7	loginStatus		int	Login specific status code.
8	isTestSystem		Boolean	Indicates whether this system is a test system or not.
9	systemName		String	The name of the system.
10	partitionHbtInterval		Integer	The interval (in seconds) between partition heartbeats sent from the system. Partition heartbeats are sent out as Heartbeat events.
11	clientHbtInterval		Integer	The interval (in seconds) between which clients are expected to send in heartbeats. The client should use the TaxHeartbeatReq message to send in heartbeats.
12	maxLostHeartbeats		Integer	The maximum number of heartbeats to lose before the connection can be considered to be down.
13	publicMulticastContent		PublicMulticastContent[]	A list defining content and addresses of the public multicast data.
14	messageReference		String	The message reference from the corresponding RequestMessage.
2.1.1 Establishment Messages (Internal)

Message: TaxConnectorEntry

Message ID: 68

Type: Establishment Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: Defines one TAX entry responsible for a partition of the available instruments.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	ipPort		int	Port to use for login.
2	ipAddress		String	The IP address of the TAX entry to be used for connection.
3	loginTicket		Long	A ticket to be supplied with the login request to validate that the user actually has performed a pre-login sequence before logging in.
4	sessionTypes		int[]	The set of session types available for this connector entry.
Allowed values: see constant group TaxSessionTypes

5	subscriptionGroups		int[]	The set of subscription groups available for this connector entry.
2.2 Surveillance Messages

Message: TaxHeartbeatReq

Message ID: 75

Type: Surveillance Messages

Description: Heartbeat sent to gateway in order to verify a connection

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	userData		String	User supplied data. The data is returned in the response.
This request will normally return a response of type TaxHeartbeatRsp.

Message: TaxHeartbeatRsp

Message ID: 76

Type: Surveillance Messages

Description: Response returned from gateway

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	reply		String	Generic single string reply
6	timestamp		String	Current central system time. The format is "yyyy-MM-ddTHH:mm:ss.SSS". Example: 2009-07-16T19:20:30.045
7	userData		String	User-supplied data from the request
8	messageReference		String	The message reference from the corresponding RequestMessage.
Message: TaxSessionStatus

Message ID: 77

Type: Surveillance Messages

Description: Unsolicited message indicating session status.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	status		int	Session status
Allowed values: see constant group SessionStatus

2.3 Processing Messages

Message: ChangePasswordReq

Message ID: 126

Type: Processing Messages

Description: A request to change the current password. The user does not have to be logged in in order to change the password.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	memberId		String	The id of the user's member (firm). Required because usernames are only unique within a member firm.
13	userId		String	The identification of the user (username).
14	oldPassword		String	The user's old password, used for authentication.
15	newPassword		String	The new password to be set.
16	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
17	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

2.4 Termination Messages

Message: TaxLogoutReq

Message ID: 65

Type: Termination Messages

Description: Request from client to gateway in end a session. A simple response is sent as response.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
This request will normally return a response of type SimpleRsp.

3 Subscription

3.1 Establishment

Message: TaxSnapshotSubscribeReq

Message ID: 69

Type: Establishment

Description: Request to retrieve information and/or activate subscription of future updates of the information specified

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String	Optional attribute defining an alternate member applying the subscription to. Used for 'on behalf of' subscriptions. Note that the user requesting subscription for another member must be authorized to subscribe to another member's information. If this attribute is left empty, the logged-in user's member is used.
3	user		String	Optional attribute defining an alternate user applying the subsciption to. Used for 'on behalf of' subscriptions. Note that the user requesting subscription for another user must be authorized to subscribe to another user's information If this attribute is left empty, the logged-in user is used.
4	requestType		int	Type of subscription request
Allowed values: see constant group SubscriptionRequestType

5	flow		int	Data flow being requested
Allowed values: see constant group BroadcastFlows

6	key		int	Selection key, identifying the data being subscribed to. In many cases, this is the subscription group.
7	sequenceNumber		long	Only considered by the Server if the flow contains trade events (i.e. TradeEvent and/or TradeEventPrivate).
If this field is set to a negative number the last specified number (i.e. the absolute value of the field) of trade events in each order book (covered by the request) are added to the current value.
If this field is set to a non-negative number all trade events (in the order books covered by the request) with a sequence number that is equal to or higher than the value of this field are added to the current value.
N.B. No filtering of the trade events is done (e.g. the trade events may be of all trade types - so for example on private trading flows the trade events may be of the trade type TRADE_REPORT_HALF).
8	lastPollSequenceNumber		Long	The sequence number of the last poll operation. Results in an empty snapshot if no changes have been made since last poll for this key/subscription group. Note! This option should only be used if requestType is CURRENT_VALUE.
9	orderBookFilter		long[]	Inclusive filter for objects within a subscription. If set to null, the filter has no effect.
10	pmcLastSeenSequenceNumber		long	The last seen public multicast sequence number. When this sequence is specified in pure snapshot requests, that is, requestType is CURRENT_VALUE, the returned snapshot is guaranteed to include the sequence. This is used when synchronizing a snapshot response with the public multicast flow.
This request will normally return a response of type TaxSnapshotSubscribeRsp.

Message: TaxSnapshotSubscribeRsp

Message ID: 70

Type: Establishment

Description: Response to a subscription request (TaxSnapshotSubscribeReq).

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	reply		String	Generic single string reply
6	handle		int	Subscription handle identifying the subscription request. The handle is used when removing the subscription.
7	lastPublishedSeqNo		Long	The last published sequence number for the flow defined in the request Only applicable to flows that support replay.
8	messageReference		String	The message reference from the corresponding RequestMessage.
Message: TaxStartSnapshot

Message ID: 72

Type: Establishment

Description: Message preceding a snapshot response

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup		Integer	Group of instruments in current value response if applicable, otherwise zero.
2	flow		int	The broadcast flow for the start event
3	reverseInfo		FlowReverseInfo	Flow reverse info. Null if no reverse has been made.
Message: TaxEndSnapshot

Message ID: 73

Type: Establishment

Description: Message ending a snapshot response

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	flow		Integer	If this message is the result of a snapshot/subscribe operation on a flow then this field contains the flow id.
5	pollSequenceNumber		Long	If this snapshot is the result from a poll (requestType is CURRENT_VALUE), this value will be the sequence number for the poll mapped by key/subscription group. It may be used later to only poll changes since last poll.
6	subscriptionGroup		Integer	Identifying group of instruments in a current value response if applicable, otherwise zero
7	pmcSnapshotSequenceNumber		long	The highest public multicast sequence number included in this snapshot. Apply all public multicast messages with a higher sequence number on top of this snapshot.
Message: TaxQueryResultStart

Message ID: 446

Type: Establishment

Description: Framing message indicating the start of the delivery of a query result.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
Message: TaxQueryResultEnd

Message ID: 447

Type: Establishment

Description: Framing message indicating the end of the delivery of a query result.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
3	nextPageNumber		Integer	TRADExpress may not deliver the full query result at once. The maximum number of messages delivered to the querying application is either specified by in the field pageSize in the query or given by the TRADExpress installation configuration. I.e. the querying application may need to issue several queries to get all the messages of the query result. If this field isn't set, the last messages has been delivered. If set, the querying application needs to issue the same query once more where only the pageNumber field has been updated to the value set in this field.
4	code		int	The overall status
5	message		String	Complementary text for extra context-dependent info
6	subCode		int[]	Subcodes
Message: TaxReplayReq

Message ID: 232

Type: Establishment

Description: Request message sent to the trading system to recover a sequence of messages published earlier. The replay request will recover earlier published messages on a replayable flow. The response back is a simple response indicating whatever the request was successfully queued to the trading system. The actual replay data is delivered as unsolicited events, framed by TaxReplayStartEvent and TaxReplayEndEvent messages.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	flow		int	Specifies the logical stream of information of a certain type.
Allowed values: see constant group BroadcastFlows

3	subscriptionGroup		Integer	The subscription group to which the order books of interest belong.
4	sequenceNumber		long	The sequence number from which messages should be recovered for the specified subscription group and flow.
5	orderbookFilter		long[]	List of order books within the subscription group of interest.
6	member		String	Optional attribute defining the member for which the replay is to be applied for. Used for on-behalf-of replay. Note that the user requesting replay for another member must be authorized to do so. If this attribute is left empty, the logged in user's member is used.
7	endSequenceNumber		long	The sequence number up to which messages should be recovered for the specified subscription group and flow. The value for this attribute could be derived from the TaxSnapshotSubscribeRsp.
8	requestType		int	The type of replay request.
Allowed values: see constant group ReplayRequestType

501	segmentSize		Integer	User specific segment size.
This request will normally return a response of type TaxReplayRsp.

Message: TaxReplayRsp

Message ID: 233

Type: Establishment

Description: Response message sent back for a previously-submitted TaxReplayReq. The TaxReplayRsp response will not contain the actual data being requested. The response data is delivered to the application asynchronously.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	reply		String	Generic single string reply
6	handle		int	Subscription handle identifying the subscription request. The handle is used when removing the subscription.
7	messageReference		String	The message reference from the corresponding RequestMessage.
Message: TaxReplayStartEvent

Message ID: 234

Type: Establishment

Description: Framing message indicating the start sequence of requested replay data. When issuing a replay request, the replay data is delivered as unsolicited messages. The TaxReplayStartEvent indicates the start of a replay sequence.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup		int	The subscription group the data is for. The identifier is always set to zero for global flows.
2	flow		int	The broadcast flow for the start event.
3	reverseInfo		FlowReverseInfo	Flow reverse info. Null if no reverse has been made.
Message: TaxReplayEndEvent

Message ID: 235

Type: Establishment

Description: Framing message indicating the end of requested replay data. The TaxReplayEndEvent indicates the end of a replay sequence.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup		int	The subscription group the data is for. The identifier is always set to zero for global flows.
2	nextSequence		Long	When requesting a replay, the trading system may not deliver the full sequence in the first call. The application may need to issue multiple additional requests for retrieving all data. The field "nextSequence" indicates if all data has been retrieved. If so, the field is NULL. Otherwise, the field indicates the sequence number to be used when requesting the next/following batch of replay data.
3	statusCode		int	EMAPI status code telling if the replay was successful or not.
4	statusMessage		String	Status text associated with the EMAPI status code returned.
5	internalCode		int	Internal status code from the trading system.
6	flow		int	The flow the data is for.
7	pmcReplaySequenceNumber		long	The highest public multicast sequence number that is included in this replay. Apply all public multicast messages with a higher sequence number.
3.1.1 Establishment (Internal)

Message: FlowReverseInfo

Message ID: 293

Type: Establishment

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: Sub-structure defining sequence and timestamp for a system 'reverse'. Events with a sequence number higher than the 'reverted-to' sequence and a time-of-event less than the 'after-reverse' timestamp have been reverted by the system.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	revertedToSeqNo		long	Highest sequence for an event, created before the system 'reverse', that is still eligeble.
2	firstTimeOfEventAfterReverse		String	First event timestamp after the 'reverse'.
3.2 Surveillance Messages

Message: SystemStatusEvent

Message ID: 79

Type: Surveillance Messages

Description: System status of dissemination services. System status event flow reflects the state and status changes of dissemination services. When setting up a subscription for status events, available dissemination services are returned. Any future change to the configuration is reflected through a SystemStatusEvent being published.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	flowStatus		FlowStatus[]	An array of flow statuses.
Message: SubscriptionTerminationEvent

Message ID: 294

Type: Surveillance Messages

Description: Unsolicited event sent when a subscription has been forcibly terminated by the system.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	terminationStatus		TapStatus	Subscription termination status
2	flowStatus		FlowStatus	The terminated flow and its current status, including any 'system reverse' information.
3.2.1 Surveillance Messages (Internal)

Message: FlowStatus

Message ID: 78

Type: Surveillance Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: Sub-structure reflecting the status of a broadcast flows and subscription groups.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup		int	Subscription group for which the flow state is for.
2	flow		int	The broadcast flow for which status is reflected.
3	state		int	Flow state.
Allowed values: see constant group FlowStates

4	reverseInfo		FlowReverseInfo	Flow reverse info. Null if no reverse has been made.
3.3 Termination Messages

Message: TaxRemoveSubscriptionReq

Message ID: 71

Type: Termination Messages

Description: Removes an active subscription. A SimpleRsp is sent as response for this request.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	handle		int	Subscription handle identifying the subscription request to be removed
This request will normally return a response of type SimpleRsp.

4 Multicast Recovery Messages

Message: TaxPmcRetransmissionReq

Message ID: 114

Type: Multicast Recovery Messages

Description: Request message sent to the trading system to retransmit a sequence of public multicast messages published earlier. The response back is a simple response indicating if the request was successfully queued to the trading system. The actual replay data is delivered as unsolicited events.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	requestData		TaxPmcRequestData	Structure defining which public multicast data to retransmit.
This request will normally return a response of type TaxPmcRetransmissionRsp.

Message: TaxPmcRetransmissionRsp

Message ID: 115

Type: Multicast Recovery Messages

Description: Response message sent back for a previously-submitted TaxPmcRetransmissionReq. The TaxPmcRetransmissionRsp response will not contain the actual data being requested. The response data is delivered to the application asynchronously.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	reply		String	Generic single string reply
6	messageReference		String	The message reference from the corresponding RequestMessage.
Message: TaxPmcStartRetransmission

Message ID: 116

Type: Multicast Recovery Messages

Description: Unsolicited message preceding a public multicast retransmission response

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	requestData		TaxPmcRequestData	Structure defining which public multicast data to retransmit.
Message: TaxPmcEndRetransmission

Message ID: 117

Type: Multicast Recovery Messages

Description: Unsolicited message ending a public multicast retransmission response.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	nextRequestData		TaxPmcRequestData	Structure defining the requested flow. If from/to sequences are non zero this structure represents the next request that has to be sent in order to retrieve a segmented response.
4.1 Multicast Recovery Messages (Internal)

Message: PmcFlowKey

Message ID: 111

Type: Multicast Recovery Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: Structure defining a public multicast data flow.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	flow		Integer	The identifier of the originating broadcast flow.
2	subscriptionGroup		Integer	The subscription group for the public multicast data.
Message: PmcRequestSequenceData

Message ID: 112

Type: Multicast Recovery Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: Structure defining sequences of public multicast data to retransmit.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	sessionId	required	Integer	The session id of the requested public multicast data.
2	exclusiveFromSequence	required	Long	The exclusive from sequence number for the requested public multicast data.
3	inclusiveToSequence	required	Long	The inclusive to sequence number for the requested public multicast data.
4	segmentSize		Integer	The requested number of broadcasts per response segment.
Message: TaxPmcRequestData

Message ID: 113

Type: Multicast Recovery Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: Structure defining which public multicast data to retransmit.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	pmcAddress	required	String	The multicast address for which to retrieve data.
2	pmcPort	required	Integer	The multicast port for which to retrieve data.
3	flowKey	required	PmcFlowKey	Key identifying the public multicast data flow.
4	sequenceData	required	PmcRequestSequenceData	The session id and sequences of the requested public multicast data.
5 Trading

5.1 General Messages

Message: SwitchScheduleEvent

Message ID: 37

Type: General Messages

Description: An order book rule group changed schedule.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
5	orderBookRuleGroupId	required	String	The id of the order book rule group on which the switch is being performed.
6	switchScheduleEventType	required	Integer	Type of state freeze event.
Allowed values: see constant group SWITCH_SCHEDULE_EVENT_TYPE

Message: StateFreezeEvent

Message ID: 38

Type: General Messages

Description: A partition have had its freeze status changed

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
5	stateFreezeEventType	required	Integer	Type of state freeze event.
Allowed values: see constant group STATE_FREEZE_EVENT_TYPE

6	freezeType		Integer	Type of freeze.
Allowed values: see constant group STATE_FREEZE_TYPE

Message: OrderBookStateChangeEvent

Message ID: 51

Type: General Messages

Description: Indicates that a state change has taken place.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
5	typeOfStateEvent	required	Integer	The type of the event. Please see the description of STATE_EVENT for an explanation of how state changes on order book and order book rule group level are correlated.
Allowed values: see constant group STATE_EVENT

6	newState		String	The name of the new state (i.e. the displayName of the state transition). This field is only filled in if typeOfStateEvent is set to STATE_CHANGE_OB, STATE_CHANGE_OB_RULEGROUP or UNX. For all other values of typeOfStateEvent, this field should be ignored.
7	orderBook		Long[]	The order books that are affected by this state change. This field is filled in for all type of state events except for STATE_CHANGE_OB_RULEGROUP.
8	orderBookRuleGroup		String	The order book rule group that is affected by this state change. This field is always filled in even though its primary use is for STATE_CHANGE_OB_RULEGROUP.
9	tradeHaltEventType		Integer	This field is only filled in for the type of state event HALT_EVENT in which it indicates the type of trade halt event.
Allowed values: see constant group TRADE_HALT_EVENT_TYPE

10	tradeHaltReason		Integer	This field is only filled in for the type of state event HALT_EVENT in which case it indicates the halt reason.
Allowed values: see constant group TRADE_HALT_REASON

11	tradeHaltInfo		String	This field is only filled in for the type of state event HALT_EVENT in which case it provide additional information about the trade halt event.
12	tradeHaltType		Integer	This field is only filled in for the type of state event HALT_EVENT in which case it indicates the type of trade halt.
Allowed values: see constant group TRADE_HALT_TYPE

13	isAutomatch		Boolean	Indicates whether the order book is in auto match state. Note that if the type is STATE_CHANGE_OB_RULEGROUP an individual order book in the order book rule group may be in different auto match state, e.g. due to trade halt or delayed opening/closing.
14	isAuction		Boolean	Indicates whether the order book is in auction state. Note that if the type is STATE_CHANGE_OB_RULEGROUP an individual order book in the order book rule group may be in different auction state, e.g. due to trade halt or delayed opening/closing.
15	tradeHaltId		String	This field is only filled in for the type of state event HALT_EVENT in which case it provides an identifier for this particular trade halt. The format is yyyy-MM-ddTHH:mm:ss.SSS
16	resumeAt		String	This field is only filled in for the type of state event HALT_EVENT in which case it specifies the time at which the trade halt will be lifted. The format is HH:mm:ss.SSS.
17	uncrossPrice		Long	This field is only filled in for the type of state event is UNX in which case it indicates the equilibrium price in the uncross.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

18	uncrossQty		Long	This field is only filled in for the type of state event is UNX in which case it indicates the traded quantity during uncross.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

Message: WaitForSSNEvent

Message ID: 55

Type: General Messages

Description: This message indicates that the client needs to process reference data events (PUBLIC_GLOBAL_REFERENS_DATA_FLOW) up to the specified state sequence number (SSN) in order to be able to process any further messages from this subscription.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
5	sSN	required	Long	The state sequence number.
Message: AuctionEvent

Message ID: 62

Type: General Messages

Description: Indicative auction price information disseminated during an auction phase.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
5	orderBook	required	Long	The order book.
6	imbalance		Long	Calculated imbalance quantity.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

7	calculatedAuctionPrice		Long	Calculated auction price. A null value in this field means that there is no auction price available.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

8	resumeTime		String	The planned time for the auction uncross. The supplied time is the earliest possible time for the execution. The actual uncross may happen at a randomized time later than the specified time. If the orderbook is halted, this is the resume time for the uncross after the halt is lifted. The time is specified in HH:MM:SS.
9	matchedQuantity		Long	Calculated matched quantity.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

501	isFinal		boolean	Is set to true for auction event created in an uncross.
502	correspondingPrice		Long	The corresponding price of the auction price.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

Message: PriceBandEvent

Message ID: 611

Type: General Messages

Description: Event containing one or more price bands. Only the bands that have changed are included.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
5	orderBookId	required	long	The order book the priceband is bound for.
6	priceBand	required	PriceBand[]	The request.
Message: AbstractMeEvent

Message ID: 238

Type: General Messages

Description: Abstract object extending all Me object being returned to client as broadcast or response

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
Message: TradeStatisticsEvent

Message ID: 1609

Type: General Messages

Description: A public trade statistics event.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
5	orderBook	required	Long	The order book traded in.
6	lastAuctionPrice		Long	Reflects the price of the last auction.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

7	highPrice		Long	Highest trade price for the current day.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

8	lowPrice		Long	Lowest trade price for the current day.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

9	totalVolumeTraded		Long	Total volume traded today in this orderbook
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

10	totalTurnover		Long	Total turnover traded today in this orderbook (Quantity * price)
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

11	lastTradePrice		Long	Reflects the price of the last trade.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

12	lastReferencePrice		Long	Reflects the last reference price. The reference price is used mainly for doing price sanity checks of orders. Normally the reference price follows the last paid price, but might temporarily deviate. Details depends on the configured market rules.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

13	averagePrice		Long	Volume-weighted average price (VWAP) so far during the current day.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

14	openingPrice		Long	The opening price is set to the price of the first trade.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

15	totalVolumeTradeReport		Long	Includes all trade report volume, all types. This field represents a decimal value. The value of the field is the decimal value multiplied by the constant DIVISOR.PRICE. Example: The value "12.50" is represented as 12500000 in this field.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

16	totalTurnoverTradeReport		Long	Turnover (quantity * price) for all trade report trades. This field represents a decimal value. The value of the field is the decimal value multiplied by the constant DIVISOR.PRICE. Example: The value "12.50" is represented as 12500000 in this field.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

17	percentageChange		Long	Will be calculated last trade price compared to closing price (in %).
Values representing percentage are stored as integers with the following interpretation: 
- 12.5% is stored as 0.125 in all TRADExpress' fields that represent a percentage. 
- Since TRADEpress uses a long where the value is always multiplied by the literal DIVISOR.INTEREST, the internal representation of 12.5% is 125000 as a long (64-bit) integer value.

18	totalNumberOfTrades		Long	Total number of trades for this order book. Applies to both derivatives and equity.
Message: AddAdvertisementReq

Message ID: 1517

Type: General Messages

Description: Request to add an order advertisement. Note this will not be kept in the order book. The advertisement can only be canceled.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	clearingMember		String (64)	Only applicable for Order and Trade related messages. The Member responsible for clearing the order or trade.
8	traderId		String (64)	Only applicable for Order and Trade related messages. The TraderID for the order/trade.
9	orderBook	required	Long	The order book the advertisement is bound for.
10	isBid	required	Boolean	True if the advertisement is a bid advertisement, false if it is an offer.
11	qty		Long	The quantity specified for the advertisement.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

12	price		Long	The price of the advertisement.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

13	contactInfo	required	String	Contact info for the advertisement.
This request will normally return a response of type AddAdvertisementRsp.

Message: AddAdvertisementRsp

Message ID: 1518

Type: General Messages

Description: Response to a AddAdvertisementReq

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
6	advertisementId		String	The id of the advertisement.
Message: CancelAdvertisementReq

Message ID: 1519

Type: General Messages

Description: Request to add an order advertisement. Note this will not be kept in the order book. The advertisement can only be canceled.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	clearingMember		String (64)	Only applicable for Order and Trade related messages. The Member responsible for clearing the order or trade.
8	traderId		String (64)	Only applicable for Order and Trade related messages. The TraderID for the order/trade.
9	orderBook	required	Long	The order book the advertisement belongs to.
10	advertisementId		String	The advertisement id that was set by the ME at advertisement insertion.
This request will normally return a response of type CancelAdvertisementRsp.

Message: CancelAdvertisementRsp

Message ID: 1520

Type: General Messages

Description: Response to a AddAdvertisementReq

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
Message: AdvertisementEvent

Message ID: 1521

Type: General Messages

Description: An advertisement event.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
8	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
9	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
10	eventType	required	Integer	Type of event.
Allowed values: see constant group ORDER_EVENT

11	orderBook	required	Long	The order book the advertisement is bound for.
12	isBid	required	Boolean	True if the advertisement is a bid advertisement, false if it is an offer.
13	qty		Long	The quantity specified for the advertisement.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

14	price		Long	The price of the advertisement.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

15	contactInfo	required	String	Contact info for the advertisement.
16	advertisementId	required	String	The id of the advertisement, unique within the system and over time.
17	timeOfEntry	required	String	Time of entry, set by the system when the advertisement is inserted. The format is yyyy-MM-ddTHH:mm:ss.SSS
18	member	required	String	The member of the advertisement
20	correspondingPrice		Long	The corresponding price of the advertisement price
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

21	tradingBoard		Integer	The trading board where the advertisement was entered
Allowed values: see constant group TRADING_BOARD_TYPE

Message: TradeStatisticsEventPrivate

Message ID: 1604

Type: General Messages

Description: An trade statistics event (used only internally).

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
5	orderBook		Long	The order book for the statistics.
6	lastBestBid		Long	Best bid after closing.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

7	lastBestOffer		Long	Best offer after closing.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

8	priorClosingPrice		Long	Yesterday closingPrice.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

9	priorClosingDate		String	The date for priorClosingPrice.
10	priceChange		Long	A positive or negative value when comparing closingPrice with priorClosingPrice.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

11	numberOfTrades		Long	Number of trades from automatch.
12	numberOfTradeReports		Long	Number of put-through trades.
13	shortSellVolume		Long	The sum of the short sell trades quantity.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

14	shortSellValue		Long	The sum of price*quantity for short sell trades.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

15	avgShortSellPrice		Long	Price/Volume for short sell trades.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

16	isHalted		Boolean	True if the order book is halted.
17	haltReason		Integer	Contains a reason if the orderbook is halted.
Message: MarketStatisticsEvent

Message ID: 1571

Type: General Messages

Description: A market statistics event.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
5	marketId	required	String	market the event applies to. For example SET, mai, BEX. If there is an oddlot market, it should be included.
6	totalTrades		BigInteger	Total number of trades from the main market and the odd lot markets. The statistics contains trades from both auto-match and trade reports.
8	totalVolume		BigInteger	Total quantity traded across the main and the odd lot markets.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

10	totalValue		BigInteger	Price * quantity for all trades in the main and odd lot market.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

12	upVolume		BigInteger	Total volume of securities traded that current price change is positive, compared to TI/closing price. (Only AOM (round lot and odd lot) for All Segments fir the markets, exclude foreign stock (round+oddlot)/Foreign preferred stock (round+oddlot)).
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

13	downVolume		BigInteger	Total volume of securities traded that current price change is negative, compared to TI/closing price. (Only AOM (round lot odd lot) for All Segments fir the markets, exclude foreign stock (round+oddlot)/Foreign preferred stock (round+oddlot)).
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

14	noChangeVolume		BigInteger	Total volume of securities traded that current price change is zero, compared to TI/closing price. (Only AOM (round lot and odd lot) for All Segments fir the markets, exclude foreign stock (round+oddlot)/Foreign preferred stock (round+oddlot)).
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

15	upShare		Long	Number of tradable instruments that volume traded is > 0 and current price change is positive compared to TI/closing price. (Only AOM (only round lot) + All Segments, exclude foreign stock/foreign preferred stock).
16	downShares		Long	Number of tradable instruments that volume traded is > 0 and current price change is negative compared to TI/closing price. (Only AOM (only round lot)+ All Segments, exclude foreign stock/foreign preferred stock).
17	noChangeShares		Long	Number of tradable instruments that volume traded is > 0 and current price change is zero compared to TI/closing price. (Only AOM (only round lot)+ All Segments, exclude foreign stock/foreign preferred stock)).
18	sourceTime		String	The time this message is sent from the Bond system BEX. The format is yyyy-MM-ddTHH:mm:ss.SSS.
Message: IndexClosingPrice

Message ID: 1611

Type: General Messages

Description: An index closing price.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
5	orderBookId	required	Long	The orderbook of the index.
6	closingPrice		Long	The closingPrice of the index.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

8	baseMarketValue		BigInteger	The average market price for the securities that are included in this index at a specific time.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

11	currentMarketValue		BigInteger	The current market price for the securities that are included in this index at a specific time.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

12	currentMarketValueToday		BigInteger	The current market price today for the securities that are included in this index at a specific time.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

Message: AbstractMpgEvent

Message ID: 1525

Type: General Messages

Description: Abstract object extending all object being returned to client as broadcast or response

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timestamps		int[]	Contains timestamps that are offset against below timestampOffset. The timestamps have been created using the FwTimestamper component and the unit of time is given by this component.
4	timestampOffset		long	Every above timestamp is an offset from this value.
5	timestampOffsetMillis		long	This timestamp is taken at the same time as above timestampOffset. It is number of milliseconds, between the current time and midnight, January 1, 1970 UTC.
6	addedTimestamps		long[]	Contains timestamps that have been added to the message but are created with another mechanism than provided by the FwTimestamper component. The type of time (i.e. if absolute or duration) and the unit of time is implicitly given by the array position.
8	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
Message: AfetEvent

Message ID: 1541

Type: General Messages

Description: AFET message.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timestamps		int[]	Contains timestamps that are offset against below timestampOffset. The timestamps have been created using the FwTimestamper component and the unit of time is given by this component.
4	timestampOffset		long	Every above timestamp is an offset from this value.
5	timestampOffsetMillis		long	This timestamp is taken at the same time as above timestampOffset. It is number of milliseconds, between the current time and midnight, January 1, 1970 UTC.
6	addedTimestamps		long[]	Contains timestamps that have been added to the message but are created with another mechanism than provided by the FwTimestamper component. The type of time (i.e. if absolute or duration) and the unit of time is implicitly given by the array position.
8	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
Message: AfetMarketDataEvent

Message ID: 1527

Type: General Messages

Description: AFET market data message.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timestamps		int[]	Contains timestamps that are offset against below timestampOffset. The timestamps have been created using the FwTimestamper component and the unit of time is given by this component.
4	timestampOffset		long	Every above timestamp is an offset from this value.
5	timestampOffsetMillis		long	This timestamp is taken at the same time as above timestampOffset. It is number of milliseconds, between the current time and midnight, January 1, 1970 UTC.
6	addedTimestamps		long[]	Contains timestamps that have been added to the message but are created with another mechanism than provided by the FwTimestamper component. The type of time (i.e. if absolute or duration) and the unit of time is implicitly given by the array position.
8	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
10	marketDataTime	required	String	Date and time of the actual event that the message represents. Format (dd/mm/yyyy hh:mm:ss
11	symbolId	required	String	Human understandable id of the security.
12	symbolAlias	required	String	Alias of the security.
13	exchange	required	String	The exchange where the event took place.
14	contract	required	String	The product for the event.
15	contractDate	required	String	The date when the shipment will take place.
16	bid	required	Long[]	Bid price(s). Best price at first element.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

17	bidQty	required	Long[]	Quantity for price levels.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

18	offer	required	Long[]	Offer price(s). Best price at first element.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

19	offerQty	required	Long[]	Quantity for price levels.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

20	lastPrice	required	Long	Last price paid.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

21	lastQty	required	Long	Quantity for last trade.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

22	change	required	Long	Price change since last trade. (Last price - Previous settlement.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

23	totalQty	required	Long	Total traded quantity today.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

24	totalEfpQty	required	Long	Total EFP quantity today.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

25	openInterest	required	Long	The open interest.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

26	highPrice	required	Long	Highest paid today.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

27	lowPrice	required	Long	Lowest paid today.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

28	openPrice	required	Long	First paid today.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

29	closePrice	required	Long	First paid today.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

30	settlementPrice	required	Long	Settlement price.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

31	prevSettlementPrice	required	Long	Previous settlement price.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

32	value	required	Long	Value of last traded.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

33	totalValue	required	Long	Total traded value including EFP for today.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

34	totalValueEfp	required	Long	Total EFP value for today.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

35	floorPrice	required	Long	Floor market price.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

36	ceilingPrice	required	Long	Ceiling market price.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

38	orderBookId	required	Long	The id of the order book for the tradable instrument.
Message: ReferencePriceEvent

Message ID: 1578

Type: General Messages

Description: Reference price data message.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
7	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
8	orderBook	required	Long	The order book the message relates to.
9	value		Long	Current reference price
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

10	change		Long	Today's change
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

11	bid		Long	The bid reference price
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

12	ask		Long	The ask reference price
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

13	highBid		Long	Highest bid today
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

14	lowAsk		Long	Lowest bid today
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

17	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
18	flow		Integer	The flow the data is published on
19	sourceTimeOfEvent		String	Time stamp from Thomson Reuters expressed in the local time. The format is YYYY-MM-DDThh:mm:ss.sss.
Message: MpgWaitForSSNEvent

Message ID: 1542

Type: General Messages

Description: This message indicates that the client needs to process reference data events (PUBLIC_GLOBAL_REFERENS_DATA_FLOW) up to the specified state sequence number (SSN) in order to be able to process any further messages from this subscription.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timestamps		int[]	Contains timestamps that are offset against below timestampOffset. The timestamps have been created using the FwTimestamper component and the unit of time is given by this component.
4	timestampOffset		long	Every above timestamp is an offset from this value.
5	timestampOffsetMillis		long	This timestamp is taken at the same time as above timestampOffset. It is number of milliseconds, between the current time and midnight, January 1, 1970 UTC.
6	addedTimestamps		long[]	Contains timestamps that have been added to the message but are created with another mechanism than provided by the FwTimestamper component. The type of time (i.e. if absolute or duration) and the unit of time is implicitly given by the array position.
8	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
10	sSN	required	Long	The state sequence number.
5.1.1 General Messages (Internal)

Message: PriceBand

Message ID: 612

Type: General Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: Contain information for one price band.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	int	The priceband type.
Allowed values: see constant group PRICEBAND_TYPE

2	lowerPrice	required	long	The lower priceband price.
3	upperPrice	required	long	The upper the priceband price.
5.2 Order and Quote Messages

5.2.1 General Messages

Message: MassUpdateReq

Message ID: 27

Type: General Messages

Description: Mass update request.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
5	clearingMember		String (64)	Only applicable for Order and Trade related messages. The Member responsible for clearing the order or trade.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
7	account		String (64)	Only applicable for Order and Trade related messages. A free text field passed through for internal member use.
8	massUpdateEventType	required	Integer	Type of mass update request.
Allowed values: see constant group MASS_UPDATE_EVENT_TYPE

9	memberFilter		String	Part of filter. If present then only orders/quotes belonging to this member is affected.
10	userFilter		String	Part of filter. If present then only orders/quotes belonging to this user is affected.
11	orderBookFilter		Long[]	Part of filter. If present then only orders/quotes with these order book id:s are affected.
12	privateOrderIdFilter		String[]	Part of filter. If present then only orders/quotes with these private order/quote id:s are affected.
13	messageRef		String	Used at the discretion of the client application. The recommended usage of this field is that the client application assigns some sort of id that is used to identify the message on the private flow. This data is purely pass through from an ME point of view. When set in the MassUpdate request it overwrites messageRef on all orders directly affected.
14	orderRef		String	Used at the discretion of the client application. The recommended usage for this field to include end user data. This data is purely pass through from an ME point of view. When set in the MassUpdate request it overwrites orderRef on all orders directly affected.
15	unsolicitedMessage		String	Used at the discretion of the client application. The recommended usage for this attribute is that it shall be used by the MOPS user to enter a reason for why the orders (for example) were canceled. This message will be saved in OrderDataOutPrivate.unsolicitedMessage.
16	subscriptionGroupFilter		Integer	Part of filter. If present, only orders/quotes belonging to this subscription group are affected.
17	includeOrders		Boolean	Part of filter. If set to true, orders are affected.
18	includeQuotes		Boolean	Part of filter. If set to true, quotes are affected. N.B. Not all massUpdateEventType:s are applicable for quotes.
19	quoteReplaceIdFilter		String[]	Part of filter. If present, only quotes with the specified quoteReplaceId:s for the member 'owning' the request are affected.
20	subscriptionGroup	required	Integer	The subscription group of this Mass Update.
501	traderId		String (64)	Only applicable for Order and Trade related messages. The TraderID for the order/trade.
This request will normally return a response of type MassUpdateRsp.

Message: MassUpdateRsp

Message ID: 28

Type: General Messages

Description: Response to a mass update

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
6	selectedOrders		Integer	Number of orders that are selected by the request, i.e. it may differ from the actual number of orders that are activated/suspended/canceled as a result of the request.
Message: MassUpdateEventPrivate

Message ID: 56

Type: General Messages

Description: Event containing private information for a mass update.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
5	massUpdateEventType	required	Integer	Type of mass update request.
Allowed values: see constant group MASS_UPDATE_EVENT_TYPE

6	memberFilter		String	Part of filter. If present then only orders/quotes belonging to this member is affected.
7	userFilter		String	Part of filter. If present then only orders/quotes belonging to this user is affected.
8	orderBookFilter		Long[]	Part of filter. If present then only orders/quotes with these order book id:s are affected.
9	privateOrderIdFilter		String[]	Part of filter. If present then only orders/quotes with these private order/quote id:s are affected.
10	messageRef		String	Used at the discretion of the client application. The recommended usage of this field is that the client application assigns some sort of id that is used to identify the message on the private flow. This data is purely pass through from an ME point of view. When set in the MassUpdate request it overwrites messageRef on all orders directly affected.
11	orderRef		String	Used at the discretion of the client application. The recommended usage for this field to include end user data. This data is purely pass through from an ME point of view. When set in the MassUpdate request it overwrites orderRef on all orders directly affected.
12	unsolicitedMessage		String	Used at the discretion of the client application. The recommended usage for this attribute is that it shall be used by the MOPS user to enter a reason for why the orders (for example) were canceled. This message will be saved in OrderDataOutPrivate.unsolicitedMessage.
13	subscriptionGroupFilter		Integer	Part of filter. If present, only orders/quotes belonging to this subscription group are affected.
14	includeOrders		Boolean	Part of filter. If set to true, orders are affected.
15	includeQuotes		Boolean	Part of filter. If set to true, quotes are affected. N.B. Not all massUpdateEventType:s are applicable for quotes.
16	quoteReplaceIdFilter		String[]	Part of filter. If present, only quotes with the specified quoteReplaceId:s for the member 'owning' the request are affected.
17	selectedOrders		Integer	Number of orders that are selected by the request, i.e. it may differ from the actual number of orders that are activated/suspended/canceled as a result of the request.
Message: MarketByLevelEvent

Message ID: 140

Type: General Messages

Description: Market by Level data.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
5	orderBook	required	Long	Order book which the message concerns.
6	isBid	required	Boolean	Indicates bid/ask side.
7	price	required	Long	Price.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

8	volume	required	Long	Volume.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

9	eventType	required	Integer	Type of event.
Allowed values: see constant group MBL_EVENT

10	levels		Integer	Number of MBL levels that are sent out from ME.
11	numberOfOrders		Integer	Number of orders that this event represents.
501	correspondingPrice		Long	The corresponding price of the order price.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

5.2.2 Order Messages

Message: OrderInsertReq

Message ID: 1

Type: Order Messages

Description: Request to enter an order.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
5	clearingMember		String (64)	Only applicable for Order and Trade related messages. The Member responsible for clearing the order or trade.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
7	account	required	String (64)	Only applicable for Order and Trade related messages. A free text field passed through for internal member use.
8	isOrderRouterOrder		Boolean	This flag indicates whether the order could be sent to the order router (TTM) or not. The default value is false.
9	orderBook	required	Long	The order book the order is bound for.
10	isBid	required	Boolean	True if the order is a bid order, false if it is an offer.
11	price		Long	The price of the order.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

12	acceptOrderId		String (128)	When matching directly against a specific order in the market, possibly bypassing normal priority rules, this is the public order id of the order to match against. Accept matching is only supported for orders which have its validTill field set to FoK or FaK.
13	priceCondition		Integer	Determines how the order is priced. The default value, if this parameter is not set, is LIMIT.
Allowed values: see constant group PRICE_CONDITION

14	ownerType		Integer	Owner type.
Allowed values: see constant group OWNER_TYPE

16	qtyOpen		Long	The open order quantity i.e. the chunk size, a null value is interpreted as that the entire quantity is open.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

17	isSuspended	required	Boolean	If true, the order is suspended.
18	externalProtocolData		String (255)	Data used by external protocol conversion gateways to maintain state. This data is purely pass through from an ME point of view. Other client applications should NOT use this field.
19	messageRef		String (128)	Used at the discretion of the client application. The recommended usage of this field is that the client application assigns some sort of id that is used to identify the message on the private flow. This data is purely pass through from an ME point of view. Note: as this field is set by the client application, this field may be null or an empty string.
20	orderRef		String (128)	Used at the discretion of the client application. The recommended usage for this field to include end user data. This data is purely pass through from an ME point of view.
21	infoText		String (128)	Used at the discretion of the client application. There is no recommended usage for this field; it can be used for any purpose. This data is purely pass through from an ME point of view.
22	triggerPrice		Long	If this order is a stop-loss or other trigger order then this is the trigger price of the order.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

23	validFrom	required	Integer	Valid From.
Allowed values: see constant group VALID_FROM

24	validFromData		String (64)	Parameter which value is determined by the type of ValidFrom condition.
25	triggerCondition		Integer	If present then this order is a trigger order.
Allowed values: see constant group TRIGGER_CONDITION

26	validDuring	required	Integer	Valid During.
Allowed values: see constant group VALID_DURING_CONDITION

27	validTill	required	Integer	Valid Till.
Allowed values: see constant group VALID_TILL

28	validTillData		String (32)	Parameter which value depends on type of ValidTill condition.
29	pegMarketPlace		String (64)	The marketplace to peg to. If null or empty, peg to own market.
Allowed values: see constant group PEG_MARKETPLACE

30	pegOffset		Integer	The actual current price of a peg order is calculated as the price represented by the priceCondition with an offset added or subtracted. Example: if the order is pegged to the best offer and the pegOffset is -1, then the order is priced one tick less than the current best offer.
31	pegCapPrice		Long	This price is the absolute hard limit price of a peg order.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

32	discretionaryCondition		Integer	The discretionary condition defines if, and how, this order offers discretionary pricing. If no condition is set, the default value is NONE.
Allowed values: see constant group DISCRETIONARY_CONDITION

33	discretionaryMarketPlace		String (64)	This defines, if the discretionary condition defines pegging for the discretionary price, the marketplace to peg to. The default value, if this parameter is null or empty, is to peg to the own marketplace.
Allowed values: see constant group PEG_MARKETPLACE

34	discretionaryPegOffset		Integer	This defines the offset to the base price, fixed or peg, to calculate the discretionary price.
35	discretionaryCapPrice		Long	This price is the absolute hard limit price of a discretionary order.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

36	visibility		Integer	Determines the visibility of the order. If this value is not provided on the order, it will be set to TRANSPARENT if the orderBookVisibility on the OrderBookRuleGroup that the orderbook belongs to is MIXED or TRANSPARENT_ONLY, and will be set to DARK, if the orderBookVisibility on the OrderBookRuleGroup that the orderbook belongs to is DARK.
Allowed values: see constant group VISIBILITY

37	minimumVolumeCondition		Integer	Determines if there is a minimum volume condition, and how it should be applied. If no condition is set, the default value is NONE.
Allowed values: see constant group MINIMUM_VOLUME_CONDITION

38	minimumQty		Long	The minimum quantity that this order may match. Setting this field to be the same as the total volume is the same as an AON order. If the minimumVolumeCondition is NONE, then this field must contain 0. If the minimumVolumeCondition is not NONE, then this field must contain a value that is larger than the round lot.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

39	ownMatch		Boolean	Priority is given to other orders from the same trading member if this attribute is set to true. If set to false, then this order is not seeking an improvement with orders from the same trading member. The default value is false.
40	cancelOnLogout		Boolean	Set to true to have the order canceled when the last session of the user, which acted last on the order, is removed.
41	clOrderId		String (255)	Normally an order is identified by using the privateOrderId when performing a cancel or update. As an alternative a client can use FIX semantics when refering or identifying an order in which case this field is used. See the description for origClOrderId for details.
42	clOrderIdPrefix		String (255)	This field is concateneted with the clOrderId field to product a client order id in the ME. It is typically used by a FIX server to add some connection id to guarantee that the combination of clOrderId (which is set by a trader client) and clOrderIdPrefix is unique.
43	qtyInput	required	Long	The quantity specified for the order by the member in order requests. NOTE! When updating the order the quantity is relative.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

501	traderId		String (64)	Only applicable for Order and Trade related messages. The TraderID for the order/trade.
502	isNvdrFlag		Boolean	NVDR flag.
503	isShortSell		Boolean	Short sell flag.
504	isTtfFlag		Boolean	TTF flag.
505	isStabilization		Boolean	Stabilization flag.
506	openClose		Integer	Open close flag, is only set for derivatives tradable instruments.
Allowed values: see constant group OPEN_CLOSE_TYPE

507	triggerOrderBook		Long	If set, the triggering price will be defined by this order book, the triggerOrderBook must be in the same partition as the order book of the order.
This request will normally return a response of type OrderInsertRsp.

Message: OrderInsertRsp

Message ID: 2

Type: Order Messages

Description: Response to an enter order request.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	privateOrderId		String	The order id.
6	remainingQty		Long	The remainingQty after insertion of the order. If the order trades fully or partially upon entry, then the quantity remaining after the trade is returned.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

7	messageReference		String	The message reference from the corresponding RequestMessage.
Message: OrderUpdateReq

Message ID: 8

Type: Order Messages

Description: Request to update an order. The order book id and private order id in this structure is used to look up the existing order. If it is found, its attributes are replaced with the attributes in this structure.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
5	clearingMember		String (64)	Only applicable for Order and Trade related messages. The Member responsible for clearing the order or trade.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
7	account		String (64)	Only applicable for Order and Trade related messages. A free text field passed through for internal member use.
8	isOrderRouterOrder		Boolean	This flag indicates whether the order could be sent to the order router (TTM) or not. The default value is false.
9	privateOrderId		String	The order id set by the matching engine at order insertion. An order can be referred to either by this field or the origClOrderId field. If both fields are defined, they must both refer to the same order.
10	orderBook	required	Long	The order book the order is bound for.
11	isBid	required	Boolean	True if the order is a bid order, false if it is an offer.
12	price		Long	The price of the order.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

13	acceptOrderId		String (128)	When matching directly against a specific order in the market, possibly bypassing normal priority rules, this is the public order id of the order to match against. Accept matching is only supported for orders which have its validTill field set to FoK or FaK.
14	priceCondition		Integer	Determines how the order is priced. The default value, if this parameter is not set, is LIMIT.
Allowed values: see constant group PRICE_CONDITION

15	ownerType		Integer	Owner type.
Allowed values: see constant group OWNER_TYPE

17	qtyOpen		Long	The open order quantity i.e. the chunk size, a null value is interpreted as that the entire quantity is open.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

18	isSuspended	required	Boolean	If true, the order is suspended.
19	externalProtocolData		String (255)	Data used by external protocol conversion gateways to maintain state. This data is purely pass through from an ME point of view. Other client applications should NOT use this field.
20	messageRef		String (128)	Used at the discretion of the client application. The recommended usage of this field is that the client application assigns some sort of id that is used to identify the message on the private flow. This data is purely pass through from an ME point of view. Note: as this field is set by the client application, this field may be null or an empty string.
21	orderRef		String (128)	Used at the discretion of the client application. The recommended usage for this field to include end user data. This data is purely pass through from an ME point of view.
22	infoText		String (128)	Used at the discretion of the client application. There is no recommended usage for this field; it can be used for any purpose. This data is purely pass through from an ME point of view.
23	triggerPrice		Long	If this order is a stop-loss or other trigger order then this is the trigger price of the order.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

24	validFrom	required	Integer	Valid From.
Allowed values: see constant group VALID_FROM

25	validFromData		String (64)	Parameter which value is determined by the type of ValidFrom condition.
26	triggerCondition		Integer	If present then this order is a trigger order.
Allowed values: see constant group TRIGGER_CONDITION

27	validDuring	required	Integer	Valid During.
Allowed values: see constant group VALID_DURING_CONDITION

28	validTill	required	Integer	Valid Till.
Allowed values: see constant group VALID_TILL

29	validTillData		String (32)	Parameter which value depends on type of ValidTill condition.
30	pegMarketPlace		String (64)	The marketplace to peg to. If null or empty, peg to own market.
Allowed values: see constant group PEG_MARKETPLACE

31	pegOffset		Integer	The actual current price of a peg order is calculated as the price represented by the priceCondition with an offset added or subtracted. Example: if the order is pegged to the best offer and the pegOffset is -1, then the order is priced one tick less than the current best offer.
32	pegCapPrice		Long	This price is the absolute hard limit price of a peg order.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

33	discretionaryCondition		Integer	The discretionary condition defines if, and how, this order offers discretionary pricing. If no condition is set, the default value is NONE.
Allowed values: see constant group DISCRETIONARY_CONDITION

34	discretionaryMarketPlace		String (64)	This defines, if the discretionary condition defines pegging for the discretionary price, the marketplace to peg to. The default value, if this parameter is null or empty, is to peg to the own marketplace.
Allowed values: see constant group PEG_MARKETPLACE

35	discretionaryPegOffset		Integer	This defines the offset to the base price, fixed or peg, to calculate the discretionary price.
36	discretionaryCapPrice		Long	This price is the absolute hard limit price of a discretionary order.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

37	visibility		Integer	Determines the visibility of the order. If this value is not provided on the order, it will be set to TRANSPARENT if the orderBookVisibility on the OrderBookRuleGroup that the orderbook belongs to is MIXED or TRANSPARENT_ONLY, and will be set to DARK, if the orderBookVisibility on the OrderBookRuleGroup that the orderbook belongs to is DARK.
Allowed values: see constant group VISIBILITY

38	minimumVolumeCondition		Integer	Determines if there is a minimum volume condition, and how it should be applied. If no condition is set, the default value is NONE.
Allowed values: see constant group MINIMUM_VOLUME_CONDITION

39	minimumQty		Long	The minimum quantity that this order may match. Setting this field to be the same as the total volume is the same as an AON order. If the minimumVolumeCondition is NONE, then this field must contain 0. If the minimumVolumeCondition is not NONE, then this field must contain a value that is larger than the round lot.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

40	ownMatch		Boolean	Priority is given to other orders from the same trading member if this attribute is set to true. If set to false, then this order is not seeking an improvement with orders from the same trading member. The default value is false.
41	cancelOnLogout		Boolean	Set to true to have the order canceled when the last session of the user, which acted last on the order, is removed.
42	clOrderId		String (255)	Normally an order is identified by using the privateOrderId when performing a cancel or update. As an alternative a client can use FIX semantics when refering or identifying an order in which case this field is used. See the description for origClOrderId for details.
43	clOrderIdPrefix		String (255)	This field is concateneted with the clOrderId field to product a client order id in the ME. It is typically used by a FIX server to add some connection id to guarantee that the combination of clOrderId (which is set by a trader client) and clOrderIdPrefix is unique.
44	origClOrderId		String	The order id set by the trading client at order insertion. An order can be referred to either by this field or the privateOrderId field. If both fields are defined, they must both refer to the same order.
45	origClOrderIdPrefix		String	This field is concateneted with the origClOrderId field to product a client order id in the ME. It is typically used by a FIX server to add some connection id to guarantee that the combination of origClOrderId and origClOrderIdPrefix is unique.
46	qtyInput	required	Long	The quantity specified for the order by the member in order requests. NOTE! When updating the order the quantity is relative.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

501	traderId		String (64)	Only applicable for Order and Trade related messages. The TraderID for the order/trade.
502	isNvdrFlag		Boolean	NVDR flag.
503	isShortSell		Boolean	Short sell flag.
504	isTtfFlag		Boolean	TTF flag.
505	isStabilization		Boolean	Stabilization flag.
506	openClose		Integer	Open close flag, is only set for derivatives tradable instruments.
Allowed values: see constant group OPEN_CLOSE_TYPE

507	triggerOrderBook		Long	If set, the triggering price will be defined by this order book, the triggerOrderBook must be in the same partition as the order book of the order.
This request will normally return a response of type OrderUpdateRsp.

Message: OrderUpdateRsp

Message ID: 9

Type: Order Messages

Description: Response to an update order request.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	remainingQty		Long	The remainingQty after update of the order. If the order trades fully or partially upon update, then the quantity remaining after the trade is returned.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

6	messageReference		String	The message reference from the corresponding RequestMessage.
Message: OrderCancelReq

Message ID: 6

Type: Order Messages

Description: Request to cancel an order.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
5	clearingMember		String (64)	Only applicable for Order and Trade related messages. The Member responsible for clearing the order or trade.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
7	account		String (64)	Only applicable for Order and Trade related messages. A free text field passed through for internal member use.
8	isOrderRouterOrder		Boolean	This flag indicates whether the order could be sent to the order router (TTM) or not. The default value is false.
9	orderBook	required	Long	The order book the order belongs to.
10	privateOrderId		String	The order id that was set by the ME at order insertion. The order to cancel must be identified either through this field or through the origClOrderId field. If both fields are set they must both refer to the same order.
11	messageRef		String	Used at the discretion of the client application. The recommended usage of this field is that the client application assigns some sort of id that is used to identify the message on the private flow. This data is purely pass through from an ME point of view. Any messageRef set at Order insert or update will be replaced in the OrderEventPrivate.
12	orderRef		String	Used at the discretion of the client application. The recommended usage for this field to include end user data. This data is purely pass through from an ME point of view. Any orderRef set at Order insert or update will be replaced in the OrderEventPrivate.
13	unsolicitedMessage		String	Used at the discretion of the client application. The recommended usage for this attribute is that it shall be used by the MOPS user to enter a reason for why the orders (for example) was canceled. This message will be saved in OrderDataOutPrivate.unsolicitedMessage.
14	origClOrderId		String	The order id that was set by the client at order insertion. The order to cancel must be identified either through this field or through the privateOrderId field. If both fields are set they must both refer to the same order.
15	origClOrderIdPrefix		String	This field is concateneted with the origClOrderId field to product a client order id in the ME. It is typically used by a FIX server to add some connection id to guarantee that the combination of origClOrderId and origClOrderIdPrefix is unique.
16	clOrderId		String	Normally an order is identified by using the privateOrderId when performing a cancel or update. As an alternative a client can use FIX semantics when refering or identifying an order in which case this field is used. See the description for origClOrderId for details.
17	clOrderIdPrefix		String	This field is concateneted with the clOrderId field to product a client order id in the ME. It is typically used by a FIX server to add some connection id to guarantee that the combination of clOrderId (which is set by a trader client) and clOrderIdPrefix is unique.
18	externalProtocolData		String	Data used by external protocol conversion gateways to maintain state. This data is purely pass through from an ME point of view. Other client applications should NOT use this field.
501	traderId		String (64)	Only applicable for Order and Trade related messages. The TraderID for the order/trade.
This request will normally return a response of type OrderCancelRsp.

Message: OrderCancelRsp

Message ID: 7

Type: Order Messages

Description: Response to an cancel order request.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	cancelledQty		Long	The remaining quantity of the order before applying the cancel.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

6	messageReference		String	The message reference from the corresponding RequestMessage.
Message: OrderEventPrivate

Message ID: 39

Type: Order Messages

Description: An order event including private information

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
5	eventType	required	Integer	Type of event.
Allowed values: see constant group ORDER_EVENT

6	orderBook	required	Long	The order book the order is bound for.
7	isBid	required	Boolean	True if the order is a bid order, false if it is an offer.
8	price		Long	The price of the order.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

9	acceptOrderId		String (128)	When matching directly against a specific order in the market, possibly bypassing normal priority rules, this is the public order id of the order to match against. Accept matching is only supported for orders which have its validTill field set to FoK or FaK.
10	priceCondition		Integer	Determines how the order is priced. The default value, if this parameter is not set, is LIMIT.
Allowed values: see constant group PRICE_CONDITION

11	ownerType		Integer	Owner type.
Allowed values: see constant group OWNER_TYPE

12	publicOrderId	required	String (64)	The id of the order on the public flow, unique within the system and over time.
13	priority	required	Long	An order's priority amongst other orders/quotes in the order book side depends on price, priorityGroup and priority. A lower priority beats a higher one. The priority number is not a timestamp but works similar to one.
14	publicMember		String (64)	The order member info showed to the public. Note that this field is only filled out if the current market transparency allows for it.
15	publicQty		Long	The part of the order quantity that is shown to other market participants.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

16	timeOfEntry	required	String (32)	Time of entry, set by the system when the order is inserted. Note that the field is changed if the order is canceled and then re-inserted inserted on the public flow, for example when the open volume is refilled. The format is yyyy-MM-ddTHH:mm:ss.SSS
17	correspondingPrice		Long	The corresponding price of the order. This field is calculated by the system in the case that there exist an alternative way to express a price of a traded instrument. An example is a bond traded on price in which case the corresponding price will be the yield.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

18	actualPrice		Long	The actual price of the order. This field is set by the Matching Engine to be the price used in matching. The actual price differs from the price for the various PEG_ type orders. Note that this field will be filled out for normal LIMIT order, although it will in this case be identical to the normal price field. An application should never attempt to interpret this field for the various MARKET_ order types.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

19	priorityGroup	required	Long	An order's priority amongst other orders/quotes in the order book side depends on price, priorityGroup and priority. A lower priorityGroup beats a higher one.
20	eventSubType	required	Integer	Type of sub event.
Allowed values: see constant group ORDER_EVENT_SUBTYPE

21	additionalSubEventTypeInfo		String (255)	Optionally this field contains additional information about the type of event in human readable format.
22	longOrderDate		String (32)	Long order date, set by the system (CD) when the order is stored as a "long order". Note that the field is changed every time an order is stored in the "long order" database. The format is yyyy-MM-ddTHH:mm:ss.SSS
24	qtyOpen		Long	The open order quantity i.e. the chunk size, a null value is interpreted as that the entire quantity is open.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

25	isSuspended	required	Boolean	If true, the order is suspended.
26	externalProtocolData		String (255)	Data used by external protocol conversion gateways to maintain state. This data is purely pass through from an ME point of view. Other client applications should NOT use this field.
27	messageRef		String (128)	Used at the discretion of the client application. The recommended usage of this field is that the client application assigns some sort of id that is used to identify the message on the private flow. This data is purely pass through from an ME point of view. Note: as this field is set by the client application, this field may be null or an empty string.
28	orderRef		String (128)	Used at the discretion of the client application. The recommended usage for this field to include end user data. This data is purely pass through from an ME point of view.
29	infoText		String (128)	Used at the discretion of the client application. There is no recommended usage for this field; it can be used for any purpose. This data is purely pass through from an ME point of view.
30	triggerPrice		Long	If this order is a stop-loss or other trigger order then this is the trigger price of the order.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

31	validFrom	required	Integer	Valid From.
Allowed values: see constant group VALID_FROM

32	validFromData		String (64)	Parameter which value is determined by the type of ValidFrom condition.
33	triggerCondition		Integer	If present then this order is a trigger order.
Allowed values: see constant group TRIGGER_CONDITION

34	validDuring	required	Integer	Valid During.
Allowed values: see constant group VALID_DURING_CONDITION

35	validTill	required	Integer	Valid Till.
Allowed values: see constant group VALID_TILL

36	validTillData		String (32)	Parameter which value depends on type of ValidTill condition.
37	pegMarketPlace		String (64)	The marketplace to peg to. If null or empty, peg to own market.
Allowed values: see constant group PEG_MARKETPLACE

38	pegOffset		Integer	The actual current price of a peg order is calculated as the price represented by the priceCondition with an offset added or subtracted. Example: if the order is pegged to the best offer and the pegOffset is -1, then the order is priced one tick less than the current best offer.
39	pegCapPrice		Long	This price is the absolute hard limit price of a peg order.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

40	discretionaryCondition		Integer	The discretionary condition defines if, and how, this order offers discretionary pricing. If no condition is set, the default value is NONE.
Allowed values: see constant group DISCRETIONARY_CONDITION

41	discretionaryMarketPlace		String (64)	This defines, if the discretionary condition defines pegging for the discretionary price, the marketplace to peg to. The default value, if this parameter is null or empty, is to peg to the own marketplace.
Allowed values: see constant group PEG_MARKETPLACE

42	discretionaryPegOffset		Integer	This defines the offset to the base price, fixed or peg, to calculate the discretionary price.
43	discretionaryCapPrice		Long	This price is the absolute hard limit price of a discretionary order.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

44	visibility		Integer	Determines the visibility of the order. If this value is not provided on the order, it will be set to TRANSPARENT if the orderBookVisibility on the OrderBookRuleGroup that the orderbook belongs to is MIXED or TRANSPARENT_ONLY, and will be set to DARK, if the orderBookVisibility on the OrderBookRuleGroup that the orderbook belongs to is DARK.
Allowed values: see constant group VISIBILITY

45	minimumVolumeCondition		Integer	Determines if there is a minimum volume condition, and how it should be applied. If no condition is set, the default value is NONE.
Allowed values: see constant group MINIMUM_VOLUME_CONDITION

46	minimumQty		Long	The minimum quantity that this order may match. Setting this field to be the same as the total volume is the same as an AON order. If the minimumVolumeCondition is NONE, then this field must contain 0. If the minimumVolumeCondition is not NONE, then this field must contain a value that is larger than the round lot.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

47	ownMatch		Boolean	Priority is given to other orders from the same trading member if this attribute is set to true. If set to false, then this order is not seeking an improvement with orders from the same trading member. The default value is false.
48	cancelOnLogout		Boolean	Set to true to have the order canceled when the last session of the user, which acted last on the order, is removed.
49	clOrderId		String (255)	Normally an order is identified by using the privateOrderId when performing a cancel or update. As an alternative a client can use FIX semantics when refering or identifying an order in which case this field is used. See the description for origClOrderId for details.
50	clOrderIdPrefix		String (255)	This field is concateneted with the clOrderId field to product a client order id in the ME. It is typically used by a FIX server to add some connection id to guarantee that the combination of clOrderId (which is set by a trader client) and clOrderIdPrefix is unique.
51	member		String (64)	The member of the user.
52	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
53	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
54	clearingMember		String (64)	Only applicable for Order and Trade related messages. The Member responsible for clearing the order or trade.
55	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
56	account		String (64)	Only applicable for Order and Trade related messages. A free text field passed through for internal member use.
57	privateOrderId	required	String (64)	Generated automatically by the system, unique within the system and over time.
58	sourceOfEvent	required	Integer	The source of the event.
Allowed values: see constant group SOURCE_OF_EVENT

59	sourceOfEventUser	required	String (64)	A string representing the user who performed the change. If the sourceOfEvent field is set to USER/OPERATOR this field contains the name of the real user who performed the action this event is originating from. Otherwise this field contains the string "SYSTEM".
60	orgQty		Long	The original quantity of the order, this field is only changed if the member explicitly updates the order.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

61	tradeId		String (64)	If the order event was caused by a trade, then this field contains the id of the trade. This field is only filled out if eventSubType=FILLED, PARTIALLYFILLED.
62	isValidForTrading	required	Boolean	If false, the order is not currently valid for trading. There are a number of reasons why an order might not be valid for trading at a particular moment in time. It might have been explicitly suspended by a user or have some sort of validity condition attached to it. This field is always filled out.
63	actualDiscretionaryCapPrice		Long	Calculated discretionary cap price. Only used for discretionary orders.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

64	unsolicitedMessage		String (128)	When sending massRequests from MOPS, this attribute shall be used by the MOPS user to enter a reason for why, for example, the orders were canceled. This attribute can be used for all mass requests, update and cancel.
65	origClOrderId		String (128)	Normally an order is identified by using the privateOrderId when performing a cancel or update. As an alternative a client can use FIX semantics when refering or identifying an order as described below. The client order id the order had before this event. A client may set a new client order id when doing an update of an order; in that case, this field contains the old client order id and the clOrderId field in the order contains the new.
66	origClOrderIdPrefix		String (64)	This field is concateneted with the origClOrderId field to product a client order id in the ME. It is typically used by a FIX server to add some connection id to guarantee that the combination of origClOrderId and origClOrderIdPrefix is unique.
67	qtyInput	required	Long	The quantity specified for the order by the member in order requests. NOTE! When updating the order the quantity is relative.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

68	qty		Long	The quantity of the order.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

501	tradingBoard		Integer	The trading board where the order was entered.
Allowed values: see constant group TRADING_BOARD_TYPE

502	isNvdrFlag		Boolean	NVDR flag.
503	isShortSell		Boolean	Short sell flag.
504	isTtfFlag		Boolean	TTF flag.
505	isStabilization		Boolean	Stabilization flag.
506	traderId		String (64)	Only applicable for Order and Trade related messages. The TraderID for the order/trade.
507	lastTradePrice		Long	Last trade price.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

508	timeOfInsert		String	Time of entry, set by the system when the order is inserted. The format is yyyy-MM-ddTHH:mm:ss.SSS.
509	publicOrderIdExternal		String (32)	The order id from the external marketplace.
510	openClose		Integer	Open close flag, is only set for derivatives tradable instruments.
Allowed values: see constant group OPEN_CLOSE_TYPE

511	matchedQty		Long	The matched quantity if the order is matched (filled in only when tradeId is added on order event).
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

512	businessDate	required	String (32)	The business date of the order, could differ from the date of the time stamp at the end of the night-session.
513	triggerOrderBook		Long	If set, the triggering price will be defined by this order book, the triggerOrderBook must be in the same partition as the order book of the order.
Message: ArrayOrderEventPrivate

Message ID: 40

Type: Order Messages

Description: An array of order events

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
5	data		OrderEventPrivate[]	Pay load data. NOTE! Sequence number and subscription group information should be taken from the messages contained in the array rather that the root message.
Message: OrderEvent

Message ID: 41

Type: Order Messages

Description: A public order event.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
5	eventType	required	Integer	Type of event.
Allowed values: see constant group ORDER_EVENT

6	orderBook	required	Long	The order book the order is bound for.
7	isBid	required	Boolean	True if the order is a bid order, false if it is an offer.
11	ownerType		Integer	Owner type.
Allowed values: see constant group OWNER_TYPE

12	publicOrderId	required	String (64)	The id of the order on the public flow, unique within the system and over time.
13	priority	required	Long	An order's priority amongst other orders/quotes in the order book side depends on price, priorityGroup and priority. A lower priority beats a higher one. The priority number is not a timestamp but works similar to one.
14	publicMember		String (64)	The order member info showed to the public. Note that this field is only filled out if the current market transparency allows for it.
15	publicQty		Long	The part of the order quantity that is shown to other market participants.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

16	timeOfEntry	required	String (32)	Time of entry, set by the system when the order is inserted. Note that the field is changed if the order is canceled and then re-inserted inserted on the public flow, for example when the open volume is refilled. The format is yyyy-MM-ddTHH:mm:ss.SSS
17	correspondingPrice		Long	The corresponding price of the order. This field is calculated by the system in the case that there exist an alternative way to express a price of a traded instrument. An example is a bond traded on price in which case the corresponding price will be the yield.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

18	actualPrice		Long	The actual price of the order. This field is set by the Matching Engine to be the price used in matching. The actual price differs from the price for the various PEG_ type orders. Note that this field will be filled out for normal LIMIT order, although it will in this case be identical to the normal price field. An application should never attempt to interpret this field for the various MARKET_ order types.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

19	priorityGroup	required	Long	An order's priority amongst other orders/quotes in the order book side depends on price, priorityGroup and priority. A lower priorityGroup beats a higher one.
501	tradingBoard		Integer	The trading board where the order was entered.
Allowed values: see constant group TRADING_BOARD_TYPE

502	publicOrderIdExternal		String (32)	The order id from the external marketplace.
Message: ArrayOrderEvent

Message ID: 42

Type: Order Messages

Description: An array of order events

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
5	data		OrderEvent[]	Payload data. NOTE! The main message will have the lowest sequence number and the contained messages will have their own sequence numbers increasing in the order they are found in the array.
5.2.3 Quote Messages

Message: QuoteInsertReq

Message ID: 3

Type: Quote Messages

Description: Request to enter an order.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
5	clearingMember		String (64)	Only applicable for Order and Trade related messages. The Member responsible for clearing the order or trade.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
7	account		String (64)	Only applicable for Order and Trade related messages. A free text field passed through for internal member use.
8	quoteReplaceId		String	Replace all quotes with the same quoteReplaceId for member.
9	aggregatedQuoteDataIn	required	AggregatedQuoteDataIn[]	Incoming quote data. Note that all legs must belong to the same order book rule group and same subscription group.
10	isRelativeQty		boolean	If true, the quantity specified for each quote is treated as a relative (delta) quantity change.
501	traderId		String (64)	Only applicable for Order and Trade related messages. The TraderID for the order/trade.
502	ownerType	required	Integer	Owner type.
Allowed values: see constant group OWNER_TYPE

This request will normally return a response of type QuoteInsertRsp.

Message: QuoteInsertRsp

Message ID: 4

Type: Quote Messages

Description: Response to an enter order request. Note that if the quote insert is a relative qty update, the qty is negative and the old quote was not found, the status code TapStatusCode.MeQuoteNotFound is returned as a sub code (TapStatus.subCode[i]) for the specific quote. The main status code (TapStatus.code) still returns TapStatusCode.Ok.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
Message: QuoteEvent

Message ID: 43

Type: Quote Messages

Description: Event containing public information for one or more quotes.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
5	aggregatedQuoteDataOut	required	AggregatedQuoteDataOut[]	Quote data.
6	publicMember		String	The quote member info showed to the public. Note that this field is only filled out if the current market transparency allows for it.
Message: QuoteEventPrivate

Message ID: 45

Type: Quote Messages

Description: Event containing public and private information for one or more quotes.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
5	member		String (64)	The member of the user.
6	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
7	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
8	clearingMember		String (64)	Only applicable for Order and Trade related messages. The Member responsible for clearing the order or trade.
9	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
10	account		String (64)	Only applicable for Order and Trade related messages. A free text field passed through for internal member use.
11	aggregatedQuoteDataOutPrivate	required	AggregatedQuoteDataOutPrivate[]	Quote data.
501	traderId		String (64)	Only applicable for Order and Trade related messages. The TraderID for the order/trade.
5.2.3.1 Quote Messages (Internal)

Message: AggregatedQuoteDataIn

Message ID: 5

Type: Quote Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: Aggregated quote data in.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	orderBook	required	Long	The order book the quote is bound for.
3	price	required	Long	The price of the quote. The field represents a decimal value.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

4	isBid	required	Boolean	True if the quote is a bid order, false if it is an offer.
5	clientDefinedQuoteId	required	String	Id assigned by client. It is used for two purposes: 1) Map a private trade event to a quote leg. That is, any private trade event involving a quote will reference this quote id. 2) If using relative quantity update mode (isRelativeQty=true) then this id is used to identify the individual quote that is being updated. Note that it is the members responsibility to make sure that the quote id is unique within an order book if used for the purpose of identifying quote when doing a relative quantity update.
6	qtyInput	required	Long	Quote quantity. If relative quantity update mode is used (isRelativeQty=true) this field represents a delta value and as such might be negative. If on the other absolute quantity update mode is used (isRelativeQty=false) then this field represents an absolute quantity.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

501	isNvdrFlag		Boolean	NVDR flag.
502	openClose		Integer	Open close flag, is only set for derivatives tradable instruments.
Allowed values: see constant group OPEN_CLOSE_TYPE

Message: AggregatedQuoteDataOut

Message ID: 44

Type: Quote Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: Contains public information for one quote.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	orderBook	required	Long	The order book the quote is bound for.
3	price	required	Long	The price of the quote. The field represents a decimal value.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

4	isBid	required	Boolean	True if the quote is a bid order, false if it is an offer.
5	eventType	required	Integer	Event that is signaled for the quote, e.g. insert.
Allowed values: see constant group QUOTE_EVENT

6	priority	required	Long	A quote's priority amongst other orders/quotes in the order book side depends on price, priorityGroup and priority. A lower priority beats a higher one. The priority number is not a timestamp but works similar to one.
7	quoteId	required	String	Quote id, unique within the order book.
8	priorityGroup	required	Long	A quote's priority amongst other orders/quotes in the order book side depends on price, priorityGroup and priority. A lower priorityGroup beats a higher one.
9	qty	required	Long	Quote quantity.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

Message: AggregatedQuoteDataOutPrivate

Message ID: 46

Type: Quote Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: Contains public and private information for one quote.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	orderBook	required	Long	The order book the quote is bound for.
3	price	required	Long	The price of the quote. The field represents a decimal value.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

4	isBid	required	Boolean	True if the quote is a bid order, false if it is an offer.
5	eventType	required	Integer	Event that is signaled for the quote, e.g. insert.
Allowed values: see constant group QUOTE_EVENT

6	priority	required	Long	A quote's priority amongst other orders/quotes in the order book side depends on price, priorityGroup and priority. A lower priority beats a higher one. The priority number is not a timestamp but works similar to one.
7	quoteId	required	String	Quote id, unique within the order book.
8	priorityGroup	required	Long	A quote's priority amongst other orders/quotes in the order book side depends on price, priorityGroup and priority. A lower priorityGroup beats a higher one.
9	clientDefinedQuoteId	required	String	Id assigned by client. It is used for two purposes: 1) Map a private trade event to a quote leg. That is, any private trade event involving a quote will reference this quote id. 2) If using relative quantity update mode (isRelativeQty=true) then this id is used to identify the individual quote that is being updated. Note that it is the members responsibility to make sure that the quote id is unique within an order book if used for the purpose of identifying quote when doing a relative quantity update.
10	quoteReplaceId		String	Used when replacing the quote.
11	privateQuoteId	required	String	Generated automatically by the system, unique within the system and over time.
12	tradeId		String	If the quote event was caused by a trade, then this field contains the id of the trade.
13	qty	required	Long	Quote quantity.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

14	qtyInput	required	Long	Quote quantity. If relative quantity update mode is used (isRelativeQty=true) this field represents a delta value and as such might be negative. If on the other absolute quantity update mode is used (isRelativeQty=false) then this field represents an absolute quantity.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

501	isNvdrFlag		Boolean	NVDR flag.
503	ownerType		Integer	Owner type.
Allowed values: see constant group OWNER_TYPE

504	openClose		Integer	Open close flag, is only set for derivatives tradable instruments.
Allowed values: see constant group OPEN_CLOSE_TYPE

505	matchedQty		Long	The matched quantity if the quote is matched (filled in only when tradeId is added on quote event).
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

506	businessDate	required	String	The business date of the quote, could differ from the date of the time stamp at the end of the night-session.
5.3 Trade Messages

Message: TradeEventPrivate

Message ID: 47

Type: Trade Messages

Description: A trade.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
5	orderBook	required	Long	The order book the order is bound for.
6	typeOfTrade	required	Integer	Type of trade.
Allowed values: see constant group TYPE_OF_TRADE

7	subTypeOfTrade	required	Integer	Type of trade.
Allowed values: see constant group SUB_TYPE_OF_TRADE

8	updateLastPaid		Boolean	If the trade updated lastTradePrice then this field is set to true, otherwise it is set to false. This field is always set when TypeOfTrade is not TRADE_REPORT_HALF. This field can be set when TypeOfTrade is TRADE_REPORT_HALF.
9	timeOfTrade		String (32)	Time of trade. The format is yyyy-MM-ddTHH:mm:ss.SSS
10	orderQty	required	Long	Trade volume.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

11	price	required	Long	The price of the trade.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

12	correspondingPrice		Long	The corresponding price of the trade. This field is calculated by the system in the case that there exist an alternative way to express a price of a traded instrument. An example is a bond traded on price in which case the corresponding price will be the yield.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

13	tradeId	required	String (64)	An id is assigned to each individual trade. This id is guaranteed to be unique within the system and over time. NOTE! If the current trade transparency is Market-By-Trade (isTBL=false) then this id is by definition the same as the one found in the TradeEvent. If on the other hand the transparency level is Trade-By-Level (isTBL=true) then the trade id is not the same as the one found in the TradeEventPrivate.
14	dealId	required	String (64)	An id is assigned to each deal. A deal is defined as all trades generated by a single event. An event is for example an incoming order or an uncross. Thus all trades resulting from the same event will have the same deal number. This id is guaranteed to be unique with the system and over time.
15	bidMember		String (64)	The bid member. Note that this field is only filled out if the current market transparency allows for it.
16	askMember		String (64)	The bid member. Note that this field is only filled out if the current market transparency allows for it.
18	lastAuctionPrice		Long	Reflects the price of the last auction.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

19	highPrice		Long	Highest trade price for the current day.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

20	lowPrice		Long	Lowest trade price for the current day.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

21	totalVolumeTraded		Long	Total volume traded today in this orderbook
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

22	totalTurnover		Long	Total turnover traded today in this orderbook (Quantity * price)
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

23	lastTradePrice		Long	Reflects the price of the last trade.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

24	referenceTradeId		String (64)	The reference trade id is used to tie two trades together. It can be used to tie related trades together, and to connect a busted trade with its replacement trade.
25	updateHighLow		Boolean	If set to true, then the trade updated the highPrice/lowPrice statistics. If set to false, they are not updated. This field is always set when TypeOfTrade is not TRADE_REPORT_HALF. This field can be set when TypeOfTrade is TRADE_REPORT_HALF.
26	updateVolumeTurnover		Boolean	If set to true, then the trade updated the totalVolumeTraded /totalTurnover statistics This field is always set when TypeOfTrade is not TRADE_REPORT_HALF. This field can be set when TypeOfTrade is TRADE_REPORT_HALF.
27	lastReferencePrice		Long	Reflects the last reference price. The reference price is used mainly for doing price sanity checks of orders. Normally the reference price follows the last paid price, but might temporarily deviate. Details depends on the configured market rules.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

28	averagePrice		Long	Volume-weighted average price (VWAP) so far during the current day.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

29	updateAveragePrice		Boolean	If set to true, then the trade updated the averagePrice statistics This field is always set when TypeOfTrade is not TRADE_REPORT_HALF. This field can be set when TypeOfTrade is TRADE_REPORT_HALF.
30	updateLastPaidQualified		Boolean	If set to true, then the trade is qualified to update lastTradePrice This field is always set when TypeOfTrade is not TRADE_REPORT_HALF. This field can be set when TypeOfTrade is TRADE_REPORT_HALF.
31	expiryTime		String (32)	The format is yyyy-MM-ddTHH:mm:ss.SSS. Will only be set for trade events with distributionType TRADE_REPORT_HALF and only if the corresponding trade report had its validity time set.
32	isBid	required	Boolean	True if the trade is a bid one, i.e. the OwnMember is owner of the bid side order, false otherwise. Note that if a member is trading with himself i.e. an internal trade then two trades will be received. One with isBid field set to true and one where isBid is set to false.
33	receivingMember		String (64)	When this field is set, it is an indication that the specified member has received a copy of the trade/trade report (N.B. Only this field differs between the original event and the copied event).
When the typeOfTrade field is set to TRADE_REPORT_HALF, the copied event is sent to the specified member due to that it is the counterparty member in the trade report event.
For all other values of the typeOfTrade field, the copied event is sent to the specified member due to that it is the clearing member for the own member in the trade event.
34	ownMember	required	String (64)	The own member
35	ownUser	required	String (64)	The own user.
36	counterpartyMember		String (64)	The counter party member. Note that this field is only filled out if the current market transparency allows for it.
37	counterPartyUser		String (64)	The counterparty user. Note that this field is only filled out if the current market transparency allows for it.
38	bidSideId		String (64)	The bid side id, the id can either be the "privateOrderId", "privateQuoteId" "tradeId" (of a trade report half) or null. The id is null if the traded quote/order did not belong to the member/user.
39	askSideId		String (64)	The ask side id, the id can either be the "privateOrderId", "privateQuoteId" "tradeId" (of a trade report half) or null. The id is null if the traded quote/order did not belong to the member/user.
40	messageRefAskSide		String (128)	This field either contains the message ref field from the ask order taking part in the trade (note that this field is only filled in for the ask side trade event) or the client trade report id from a trade report half. Note: if the messageRef field in the ask order is null or an empty string this field will have the corresponding value.
41	infoTextAskSide		String (128)	The info text field from the order. Only filled out if the ask order belonged to the member/user participant.
42	messageRefBidSide		String (128)	This field either contains the message ref field from the bid order taking part in the trade (note that this field is only filled in for the bid side trade event) or the client trade report id from a trade report half. Note: if the messageRef field in the bid order is null or an empty string this field will have the corresponding value.
43	infoTextBidSide		String (128)	The info text field from the order. Only filled out if the ask order belonged to the member/user participant.
44	combTradeId		String (64)	If this trade was a part of a combination trade, then this field contains the trade id of the combination trade that was the source of this trade.
45	externalProtocolDataAskSide		String (255)	Data used by external protocol conversion gateways to maintain state. This data is purely pass through from an ME point of view. Other client applications should NOT use this field.
46	externalProtocolDataBidSide		String (255)	Data used by external protocol conversion gateways to maintain state. This data is purely pass through from an ME point of view. Other client applications should NOT use this field.
47	isDark		boolean	True if the order behind the trade is dark. Note that this flag is only applicable for the order belonging to the trade owner i.e. ownMember. No information is disclosed about the counter party order.
48	isImprovedPrice		boolean	True if the trade happened at an (undisclosed) improved price. Note that this flag is only applicable for the order belonging to the trade owner i.e. ownMember. No information is disclosed about the counter party order.
49	isOwnMatch		boolean	True if the order behind the trade jumped the time queue because of Own Participant Priority Match. Note that this flag is only applicable for the order belonging to the trade owner i.e. ownMember. No information is disclosed about the counter party order.
50	crossedSpread		boolean	True if the order behind the trade was an incoming order with a price (including improvement) that crossed the best public price. Note that this flag is only applicable for the order belonging to the trade owner i.e. ownMember. No information is disclosed about the counter party order.
51	accountAskSide		String (64)	Copied from incoming OwnerData.
52	accountBidSide		String (64)	Copied from incoming OwnerData.
53	isBidSideAggressor		Boolean	Is true when the this side was the active one i.e. the incoming order. Note that it is quite possible that neither the ask or bid side is the aggressor, this is for example the case when the system executes a call auction.
54	isAskSideAggressor		Boolean	Is true when the this side was the active one i.e. the incoming order. Note that it is quite possible that neither the ask or bid side is the aggressor, this is for example the case when the system executes a call auction.
55	ownTradingMember	required	String (64)	The Own Participant's sponsoring Member (if DA S-DMA or Member Unit Access) else equals Participant.
56	ownClearingMember		String (64)	The Own Member responsible for clearing the order.
57	counterpartyTradingMember		String (64)	The Counterparty Participant's sponsoring Member (if DA S-DMA or Member Unit Access) else equals Participant. Note that this field is only filled out if the current market transparency allows for it.
58	counterpartyClearingMember		String (64)	The Counterparty Member responsible for clearing the order. Note that this field is only filled out if the current market transparency allows for it.
59	ownOwnerType	required	Integer	Own side Owner type.
Allowed values: see constant group OWNER_TYPE

60	counterpartyOwnerType		Integer	Counterparty side Owner type. Note that this field is only filled out if the current market transparency allows for it.
Allowed values: see constant group OWNER_TYPE

61	bustReason		String (128)	When busting a trade from MOPS, the bustReason attribute may be used by the MOPS user to enter the reason for why the trade was busted.
62	bidSideClientId		String (255)	The bid side client defined id. "clOrderId" in case the bid side is an order or "clientDefinedQuoteId" in case the bid side is a quote. Will never be filled in if bid side did not belong to the member/user.
63	bidSideClientIdPrefix		String (255)	The bid side client defined id prefix. "clOrderIdPrefix" in case the bid side is an order. Will never be filled in if bid side did not belong to the member/user.
64	askSideClientId		String (255)	The ask side client defined id. "clOrderId" in case the ask side is an order or "clientDefinedQuoteId" in case the ask side is a quote. Will never be filled in if ask side did not belong to the member/user.
65	askSideClientIdPrefix		String (255)	The ask side client defined id prefix. "clOrderIdPrefix" in case the ask side is an order. Will never be filled in if ask side did not belong to the member/user.
66	ownActingUser	required	String (64)	When the trade type is a trade report half the user that inserted own trade report. Otherwise the user that was the acting user of own matchable item (which created this trade) at the moment when this trade is created in the system.
67	counterpartyActingUser		String (64)	The user that was the acting user of counterparty's matchable item (which created this trade) at the moment when this trade is created in the system. Note that this field is not applicable when the trade type is a trade report half and is only filled in if the current market transparency allows for it.
68	tradingProtectionLimit		Integer (64)	Information about if the member has exceeded its trading protections limits.
Allowed values: see constant group TRADING_PROTECTION_LIMIT

501	openingPrice		Long	The opening price is set to the price of the first trade.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

502	tradingBoard		Integer	The trading board where the trade was executed.
Allowed values: see constant group TRADING_BOARD_TYPE

503	isNvdrFlag		Boolean	The own NVDR flag.
504	isShortSell		Boolean	Short sell flag.
505	ownTraderId		String	The own TraderId.
506	counterPartyTraderId		String	The counterparty TraderId.
507	isTtfFlag		Boolean	The own TTF flag.
508	isStabilization		Boolean	Stabilization flag.
509	askTimeEntered		String	The time when the ask order is entered.
510	bidTimeEntered		String	The time when the bid order is entered.
511	totalVolumeTradeReport		Long	Includes all trade report volume, all types.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

512	totalTurnoverTradeReport		Long	Turnover (quantity * price) for all trade report trades.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

513	tradeReportType		String (32)	Only used for trades of type TRADE. The type of trade report is specified in TradeReportTypes table.
514	numberSettlementDays		Integer	Only used for trades of type TRADE. The number of settlement days.
516	marketId		String (64)	The market id to use for market statistics.
517	upVolume		Long	Total AOM volume that current price change is positive.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

518	downVolume		Long	Total AOM volume that current price change is negative.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

519	noChangeVolume		Long	Total AOM volume that current price change is zero.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

520	calculateMarketStatistics		Boolean	Set to true if this event should be a part of market statistics.
521	correspondingLowPrice		Long	The corresponding price of the lowest traded price (yield at lowest price).
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

522	correspondingHighPrice		Long	The corresponding price of the highest traded price (yield at highest price).
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

523	totalNumberOfTrades		Long	Total number of trades for this orderbook.
524	percentageChange		Long	Will be calculated last trade price compared to closing price (in %). This rule applies to the last traded price compared to the closing price, being another percentage, too.
Values representing percentage are stored as integers with the following interpretation: 
- 12.5% is stored as 0.125 in all TRADExpress' fields that represent a percentage. 
- Since TRADEpress uses a long where the value is always multiplied by the literal DIVISOR.INTEREST, the internal representation of 12.5% is 125000 as a long (64-bit) integer value.

526	publicTradeIdExternal		String (32)	The trade id from the external marketplace.
527	counterpartyIsNvdrFlag		Boolean	The counterparty NVDR flag.
528	counterpartyIsTtfFlag		Boolean	The counterparty TTF flag.
532	specialMatchType		Integer	Needed to identify special match types for trades.
Allowed values: see constant group SPECIAL_MATCH_TYPE

533	openClose		Integer	Open close flag, is only set for derivatives tradable instruments.
Allowed values: see constant group OPEN_CLOSE_TYPE

534	businessDate	required	String (32)	The business date of the trade, could differ from the date of the timestamp at the end of the night-session.
Message: ArrayTradeEventPrivate

Message ID: 48

Type: Trade Messages

Description: An array of trade event private.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
5	data		TradeEventPrivate[]	Pay load data. NOTE! Sequence number and subscription group information should be taken from the messages contained in the array rather that the root message.
Message: TradeEvent

Message ID: 49

Type: Trade Messages

Description: A trade.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
5	orderBook	required	Long	The order book the order is bound for.
6	typeOfTrade	required	Integer	Type of trade.
Allowed values: see constant group TYPE_OF_TRADE

7	subTypeOfTrade	required	Integer	Type of trade.
Allowed values: see constant group SUB_TYPE_OF_TRADE

8	updateLastPaid		Boolean	If the trade updated lastTradePrice then this field is set to true, otherwise it is set to false. This field is always set when TypeOfTrade is not TRADE_REPORT_HALF. This field can be set when TypeOfTrade is TRADE_REPORT_HALF.
9	timeOfTrade		String (32)	Time of trade. The format is yyyy-MM-ddTHH:mm:ss.SSS
10	orderQty	required	Long	Trade volume.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

11	price	required	Long	The price of the trade.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

12	correspondingPrice		Long	The corresponding price of the trade. This field is calculated by the system in the case that there exist an alternative way to express a price of a traded instrument. An example is a bond traded on price in which case the corresponding price will be the yield.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

13	tradeId	required	String (64)	An id is assigned to each individual trade. This id is guaranteed to be unique within the system and over time. NOTE! If the current trade transparency is Market-By-Trade (isTBL=false) then this id is by definition the same as the one found in the TradeEvent. If on the other hand the transparency level is Trade-By-Level (isTBL=true) then the trade id is not the same as the one found in the TradeEventPrivate.
14	dealId	required	String (64)	An id is assigned to each deal. A deal is defined as all trades generated by a single event. An event is for example an incoming order or an uncross. Thus all trades resulting from the same event will have the same deal number. This id is guaranteed to be unique with the system and over time.
15	isTBL		Boolean	If true then this trade is really an aggregation of several trades on the same price level. This field will only be set to true on public trades.
16	bidMember		String (64)	The bid member. Note that this field is only filled out if the current market transparency allows for it.
17	askMember		String (64)	The bid member. Note that this field is only filled out if the current market transparency allows for it.
19	lastAuctionPrice		Long	Reflects the price of the last auction.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

20	highPrice		Long	Highest trade price for the current day.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

21	lowPrice		Long	Lowest trade price for the current day.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

22	totalVolumeTraded		Long	Total volume traded today in this orderbook
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

23	totalTurnover		Long	Total turnover traded today in this orderbook (Quantity * price)
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

24	lastTradePrice		Long	Reflects the price of the last trade.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

25	referenceTradeId		String (64)	The reference trade id is used to tie two trades together. It can be used to tie related trades together, and to connect a busted trade with its replacement trade.
26	updateHighLow		Boolean	If set to true, then the trade updated the highPrice/lowPrice statistics. If set to false, they are not updated. This field is always set when TypeOfTrade is not TRADE_REPORT_HALF. This field can be set when TypeOfTrade is TRADE_REPORT_HALF.
27	updateVolumeTurnover		Boolean	If set to true, then the trade updated the totalVolumeTraded /totalTurnover statistics This field is always set when TypeOfTrade is not TRADE_REPORT_HALF. This field can be set when TypeOfTrade is TRADE_REPORT_HALF.
28	lastReferencePrice		Long	Reflects the last reference price. The reference price is used mainly for doing price sanity checks of orders. Normally the reference price follows the last paid price, but might temporarily deviate. Details depends on the configured market rules.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

29	averagePrice		Long	Volume-weighted average price (VWAP) so far during the current day.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

30	updateAveragePrice		Boolean	If set to true, then the trade updated the averagePrice statistics This field is always set when TypeOfTrade is not TRADE_REPORT_HALF. This field can be set when TypeOfTrade is TRADE_REPORT_HALF.
31	updateLastPaidQualified		Boolean	If set to true, then the trade is qualified to update lastTradePrice This field is always set when TypeOfTrade is not TRADE_REPORT_HALF. This field can be set when TypeOfTrade is TRADE_REPORT_HALF.
501	bidSideIsAggressor		Boolean	Set if BID side of the trade is aggressor. Will only be set for public trade events.
502	askSideIsAggressor		Boolean	Set if ASK side of the trade is aggressor. Will only be set for public trade events.
503	openingPrice		Long	The opening price is set to the price of the first trade.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

504	tradingBoard		Integer	The trading board where the trade was executed.
Allowed values: see constant group TRADING_BOARD_TYPE

505	totalVolumeTradeReport		Long	Includes all trade report volume, all types.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

506	totalTurnoverTradeReport		Long	Turnover (quantity * price) for all trade report trades.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

508	marketId		String (64)	The market id to use for market statistics.
509	upVolume		Long	Total AOM volume that current price change is positive.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

510	downVolume		Long	Total AOM volume that current price change is negative.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

511	noChangeVolume		Long	Total AOM volume that current price change is zero.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

512	calculateMarketStatistics		Boolean	Set to true if this event should be a part of market statistics.
513	correspondingLowPrice		Long	The corresponding price of the lowest traded price (yield at lowest price).
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

514	correspondingHighPrice		Long	The corresponding price of the highest traded price (yield at highest price).
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

515	totalNumberOfTrades		Long	Total number of trades for this orderbook.
516	tradeReportType		String (32)	Only used for trades of type TRADE. The type of trade report is specified in TradeReportTypes table.
517	percentageChange		Long	Will be calculated last trade price compared to closing price (in %). This rule applies to the last traded price compared to the closing price, being another percentage, too.
Values representing percentage are stored as integers with the following interpretation: 
- 12.5% is stored as 0.125 in all TRADExpress' fields that represent a percentage. 
- Since TRADEpress uses a long where the value is always multiplied by the literal DIVISOR.INTEREST, the internal representation of 12.5% is 125000 as a long (64-bit) integer value.

519	publicTradeIdExternal		String (32)	The trade id from the external marketplace.
520	specialMatchType		Integer	Needed to identify special match types for trades.
Allowed values: see constant group SPECIAL_MATCH_TYPE

Message: ArrayTradeEvent

Message ID: 50

Type: Trade Messages

Description: An array of trade events

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
5	data		TradeEvent[]	Pay load data. NOTE! The main message will have the lowest sequence number and the contained messages will have their own sequence numbers increasing in the order they are found in the array.
5.3.1 Trade Update/Cancel Messages

Message: TradeCancelReq

Message ID: 12

Type: Trade Update/Cancel Messages

Description: Request to cancel several trades. A successful trade cancel will result in TradeEvent and a TradeEventPrivate with the type of trade set to BUSTED. Facilitates batched cancellation of trades. All of the trade cancels or none are accepted i.e. if one trade cancel fails validation then none is accepted. Sub error codes (TradeCancelRsp.subCode[]) are then given for each leg. The main error code (TradeCancelRsp.code) contains the first encountered error.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
5	clearingMember		String (64)	Only applicable for Order and Trade related messages. The Member responsible for clearing the order or trade.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
7	account		String (64)	Only applicable for Order and Trade related messages. A free text field passed through for internal member use.
8	bustReason		String	When busting a trade from MOPS, the bustReason attribute may be used by the MOPS user to enter the reason for why the trade was busted.
9	tradeCancelDataInPrivate	required	TradeCancelDataInPrivate[]	Data for the trades to be canceled.
501	traderId		String (64)	Only applicable for Order and Trade related messages. The TraderID for the order/trade.
This request will normally return a response of type TradeCancelRsp.

Message: TradeCancelRsp

Message ID: 14

Type: Trade Update/Cancel Messages

Description: Response to a TradeCancelReq

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
Message: TradeUpdateReq

Message ID: 32

Type: Trade Update/Cancel Messages

Description: Trade update request.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
5	clearingMember		String (64)	Only applicable for Order and Trade related messages. The Member responsible for clearing the order or trade.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
7	account		String (64)	Only applicable for Order and Trade related messages. A free text field passed through for internal member use.
8	tradeUpdateDataInPrivate	required	TradeUpdateDataInPrivate[]	The request.
501	traderId		String (64)	Only applicable for Order and Trade related messages. The TraderID for the order/trade.
This request will normally return a response of type TradeUpdateRsp.

Message: TradeUpdateRsp

Message ID: 33

Type: Trade Update/Cancel Messages

Description: Response to a trade update

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
Message: BustTradeReq

Message ID: 1515

Type: Trade Update/Cancel Messages

Description: Request to bust several trades for a specific member. A successful trade bust will result in TradeEvent and a TradeEventPrivate with the type of trade set to BUSTREQ_PENDING. If the other side confirm the type of trade will be set to BUSTREQ_CONFIRMED and the MOPS will receive an alert. Note the trade is not canceled until the MOPS perform the TradeCancelReq. Facilitates batched cancellation of trades. All of the trade cancels or none are accepted i.e. if one trade cancel fails validation then none is accepted. Sub error codes (BustTradeRsp.subCode[]) are then given for each leg. The main error code (BustTradeRsp.code) contains the first encountered error.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	clearingMember		String (64)	Only applicable for Order and Trade related messages. The Member responsible for clearing the order or trade.
7	account		String (64)	Only applicable for Order and Trade related messages. A free text field passed through for internal member use.
8	traderId		String (64)	Only applicable for Order and Trade related messages. The TraderID for the order/trade.
9	tradeCancelDataInPrivate	required	TradeCancelDataInPrivate[]	Data for the trades to be busted.
This request will normally return a response of type BustTradeRsp.

Message: BustTradeRsp

Message ID: 1516

Type: Trade Update/Cancel Messages

Description: Response to a BustTradeReq

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
Message: RejectBustTradeReq

Message ID: 1656

Type: Trade Update/Cancel Messages

Description: Reject an existing trade bust request.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	clearingMember		String (64)	Only applicable for Order and Trade related messages. The Member responsible for clearing the order or trade.
7	account		String (64)	Only applicable for Order and Trade related messages. A free text field passed through for internal member use.
8	traderId		String (64)	Only applicable for Order and Trade related messages. The TraderID for the order/trade.
9	tradeCancelDataInPrivate	required	TradeCancelDataInPrivate[]	Data for the trades to be busted.
This request will normally return a response of type RejectBustTradeRsp.

Message: RejectBustTradeRsp

Message ID: 1657

Type: Trade Update/Cancel Messages

Description: Response to a RejectBustTradeReq

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
5.3.1.1 Trade Update/Cancel Messages (Internal)

Message: TradeCancelDataInPrivate

Message ID: 13

Type: Trade Update/Cancel Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: Data for a trade to be canceled.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	tradeId	required	String	Id of trade to cancel.
2	orderBook	required	Long	The order book the trade was done in.
Message: TradeUpdateDataInPrivate

Message ID: 34

Type: Trade Update/Cancel Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: Trade update.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	tradeId	required	String (64)	Id of trade to update
2	isBid	required	Boolean	Side of trade to update.
3	messageRefAskSide		String (128)	The message ref field from the order. Can only be modified if that trade half belonged to the member.
4	infoTextAskSide		String (128)	The info text field from the order. Can only be modified if that trade half belonged to the member.
5	messageRefBidSide		String (128)	The message ref field from the order. Can only be modified if that trade half belonged to the member.
6	infoTextBidSide		String (128)	The info text field from the order. Can only be modified if that trade half belonged to the member.
7	orderBook	required	Long	The order book the trade was done in.
501	ownerType		Integer (64)	Owner type.
Allowed values: see constant group OWNER_TYPE

502	isNvdr		Boolean	NVDR flag.
5.3.2 Trade Report Messages

Message: TradeReportReq

Message ID: 29

Type: Trade Report Messages

Description: Trade report request. This request allows reporting of batched trades. All of the trades or none are accepted i.e. if one trade fails validation then none is accepted. Sub error codes (TradeReportRsp.subCode[]) are then given for each leg. The main error code (TradeReportRsp.code) contains the first encountered error.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
5	clearingMember		String (64)	Only applicable for Order and Trade related messages. The Member responsible for clearing the order or trade.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
7	account		String (64)	Only applicable for Order and Trade related messages. A free text field passed through for internal member use.
8	tradeReportDataInPrivate	required	TradeReportDataInPrivate[]	The request.
501	traderId		String (64)	Only applicable for Order and Trade related messages. The TraderID for the order/trade.
This request will normally return a response of type TradeReportRsp.

Message: TradeReportRsp

Message ID: 30

Type: Trade Report Messages

Description: Response to a trade report

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	dealId		String	Public trade id.
6	tradeId		String[]	Private trade ids.
7	messageReference		String	The message reference from the corresponding RequestMessage.
5.3.2.1 Trade Report Messages (Internal)

Message: TradeReportDataInPrivate

Message ID: 31

Type: Trade Report Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: Trade report data.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	validityTime		Integer	Measured in number of seconds. If not present then the trade report is assumed to be valid until canceled or matched. Note that a typical system configuration will discard unmatched trade halves at end of day regardless of validity time. If a validity time is set then the expiry time will be set in the corresponding TradeEventPrivate.
2	waitForOtherSide	required	Boolean	Indicates if the system should wait for the other trade-half prior to publishing a TradeEvent. Trade-halves are matched together based a defined set of trade half attributes: Note that in many system configurations the value of this field will either be defaulted or validated to be true.
3	clientTradeReportId		String (255)	A trade report assigned by the client.
4	combTradeId		String (64)	If this trade was a part of a combination trade, then this field contains the trade id of the combination trade that was the source of this trade. The only validation done in the base configuration of the system is that such a trade id exists.
5	orderBook	required	Long	The order book for which the trade is relevant.
6	orderQty	required	Long	Quantity of the trade. The field represents a decimal value.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

7	price	required	Long	The price of the trade.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

8	isBid	required	Boolean	True if the trade is a bid one, i.e. the OwnMember is owner of the bid side order, false otherwise. Note that if a member is trading with himself i.e. an internal trade then two trades will be received. One with isBid field set to true and one where isBid is set to false.
9	ownMember	required	String (64)	The own member
10	ownUser		String (64)	The own user.
11	counterpartyMember	required	String (64)	The counter party member
12	counterPartyUser		String (64)	The counterparty user
13	publicRFQId		String (64)	If this trade report is a response to a request for quote then this field contains the request for quote id. The purpose of the field is to make it possible for the counter party to distinguish between normal trade reports and responses to request for quotes.
15	ownClearingMember		String (64)	The own clearing member
17	counterpartyClearingMember		String (64)	The counterparty clearing member
18	ownOwnerType		Integer	Own side Owner type.
Allowed values: see constant group OWNER_TYPE

19	counterpartyOwnerType		Integer	Counterparty side Owner type.
Allowed values: see constant group OWNER_TYPE

20	ownInfoText		String (128)	Free text field for Own side. Used at the discretion of the client application. There is no recommended usage for this field, it can be used for any purpose. This data is purely pass through from an ME point of view.
21	counterpartyInfoText		String (128)	Free text field for counterparty side. Used at the discretion of the client application. There is no recommended usage for this field; it can be used for any purpose. This data is purely pass through from an ME point of view.
22	ownMessageRef		String (128)	Free text field for Own side. Used at the discretion of the client application. The recommended usage of this field is that the client application assigns some sort of id that is used to identify the message on the private flow. This data is purely pass through from an ME point of view.
23	counterpartyMessageRef		String (128)	Free text field for Counterparty side. Used at the discretion of the client application. The recommended usage of this field is that the client application assigns some sort of id that is used to identify the message on the private flow. This data is purely pass through from an ME point of view.
24	ownAccount		String (64)	Own side account data.
25	counterpartyAccount		String (64)	Counterparty side account data.
26	ownIsAggressor		Boolean	Is true if the own side is aggressor in trade.
27	counterpartyIsAggressor		Boolean	Is true if the counterparty side is aggressor in trade.
28	updateLastTradePrice		Boolean	If set to true, then the trade will update the Last Trade Price. If set to false, the Last Trade Price is not updated.
29	updateHighLow		Boolean	If set to true, then the trade updated the highPrice/lowPrice statistics. If set to false, they are not updated.
30	updateVolumeTurnover		Boolean	If set to true, then the trade updated the totalVolumeTraded /totalTurnover statistics
31	timeOfTrade		String (32)	The format is YYYY-MM-DDThh:mm:ss.sss. If this optional value is not provided, the value will default to current system time.
32	referenceTradeId		String (64)	The reference trade id is used to tie two trades together. It can be used to tie related trades together, and to connect a busted trade with its replacement trade.
33	externalProtocolData		String (255)	Data used by external protocol conversion gateways to maintain state. This data is purely pass through from an ME point of view. Other client applications should NOT use this field.
501	ownTraderId		String (64)	Own side Trader ID data.
502	counterpartyTraderId		String (64)	Counterparty side Trader ID data.
503	isNvdr		Boolean	Own side NVDR flag.
504	isTtf		Boolean	Own side TTF flag.
505	tradeReportType	required	String (32)	The type of trade report. The trade report type is defined in the TradeReportTypes table. The specified tradeReportType must match the attribute name of any element in the TradeReportTypes table.
506	numberSettlementDays		Integer	Standard value of 3 is used, for any other value enter requested value.
507	counterpartyIsNvdr		Boolean	Counterparty side NVDR flag.
508	counterpartyIsTtf		Boolean	Counterparty side TTF flag.
510	ownOpenClose		Integer	Own Open close flag, is only set for derivatives tradable instruments.
Allowed values: see constant group OPEN_CLOSE_TYPE

511	counterpartyOpenClose		Integer	Counter party Open close flag, is only set for derivatives tradable instruments.
Allowed values: see constant group OPEN_CLOSE_TYPE

5.4 Request for Quote Messages

Message: RequestForQuoteReq

Message ID: 23

Type: Request for Quote Messages

Description: Request for quote. There are two basic flavours of request for quotes: public and private. Public request for quotes are sent to all members having access to the specified order book. Private requests on the other hand are only sent to a specified member.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
5	clearingMember		String (64)	Only applicable for Order and Trade related messages. The Member responsible for clearing the order or trade.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
7	account		String (64)	Only applicable for Order and Trade related messages. A free text field passed through for internal member use.
8	distributionType	required	Integer	Type of request for quote event type, NOTE Only PUBLIC is allowed
Allowed values: see constant group RFQ_DISTRIBUTION_TYPE

9	orderBook	required	Long	The order book for which quotes are requested.
10	requestAskQuote		Boolean	True if the requester wants an ask quote. Note that is allowed, indeed this is the more common case, to request both an ask and bid quote.
11	requestBidQuote		Boolean	True if the requester wants a bid quote. Note that is allowed, indeed this is the more common case, to request both an ask and bid quote.
12	quoteProviderMember		String (64)	The member that is asked to provide a quote. This field only required set when the distributionType is PRIVATE.
13	rFQRef		String (128)	Used at the discretion of the client application. The recommended usage of this field is that the client application assigns some sort of id that is used to identify the request for quote on the private flow. This data is purely pass through from an ME point of view.
14	qty		Long	The quantity that requester wants to be quoted.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

501	traderId		String (64)	Only applicable for Order and Trade related messages. The TraderID for the order/trade.
This request will normally return a response of type RequestForQuoteRsp.

Message: RequestForQuoteRsp

Message ID: 24

Type: Request for Quote Messages

Description: Response to a request for quote

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	publicRFQId		String	The RFQ id.
6	messageReference		String	The message reference from the corresponding RequestMessage.
Message: RequestForQuoteCancelReq

Message ID: 25

Type: Request for Quote Messages

Description: Request for quote cancel request

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
5	clearingMember		String (64)	Only applicable for Order and Trade related messages. The Member responsible for clearing the order or trade.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
7	account		String (64)	Only applicable for Order and Trade related messages. A free text field passed through for internal member use.
8	orderBook	required	Long	The order book the order belongs to.
9	publicRFQId		String	The RFQ id.
501	traderId		String (64)	Only applicable for Order and Trade related messages. The TraderID for the order/trade.
This request will normally return a response of type RequestForQuoteCancelRsp.

Message: RequestForQuoteCancelRsp

Message ID: 26

Type: Request for Quote Messages

Description: Response to cancel a request for quote.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
Message: RequestForQuoteEventPrivate

Message ID: 53

Type: Request for Quote Messages

Description: A request for quote event

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
5	eventType	required	Integer	Type of event.
Allowed values: see constant group RFQ_EVENT

6	distributionType	required	Integer	Type of request for quote event type.
Allowed values: see constant group RFQ_DISTRIBUTION_TYPE

7	orderBook	required	Long	The order book for which quotes are requested.
8	requestAskQuote		Boolean	True if the requester wants an ask quote. Note that is allowed, indeed this is the more common case, to request both an ask and bid quote.
9	requestBidQuote		Boolean	True if the requester wants a bid quote. Note that is allowed, indeed this is the more common case, to request both an ask and bid quote.
10	quoteProviderMember		String (64)	The member that is asked to provide a quote. This field only required set when the distributionType is PRIVATE.
11	publicRFQId	required	String (64)	The id of the RFQ on the public flow, unique within the system and over time.
12	publicMember		String (64)	The order member info showed to the public. Note that this field is only filled out if the current market transparency allows for it.
13	publicUser		String (64)	The user member info showed to the public. Note that this field is only filled out if the current market transparency allows for it.
14	timeOfEntry	required	String (64)	Time of entry, set by the system when the request for quote is inserted. The format is yyyy-MM-ddTHH:mm:ss.SSS
15	receivingMember		String (64)	When a request for quote message with distribution type PRIVATE is sent in both the requesting member and the member asked to provide a quote receives a copy of the event. The receivingMember field will only be set for the copy sent to the member asked to provide a quote in which case it will be set to the member asked to provide a quote id.
16	member		String (64)	The member of the user.
17	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
18	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
19	clearingMember		String (64)	Only applicable for Order and Trade related messages. The Member responsible for clearing the order or trade.
20	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
21	account		String (64)	Only applicable for Order and Trade related messages. A free text field passed through for internal member use.
22	rFQRef		String (128)	Used at the discretion of the client application. The recommended usage of this field is that the client application assigns some sort of id that is used to identify the request for quote on the private flow. This data is purely pass through from an ME point of view.
23	qty		Long	The quantity that requester wants to be quoted.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

501	traderId		String (64)	Only applicable for Order and Trade related messages. The TraderID for the order/trade.
Message: RequestForQuoteEvent

Message ID: 54

Type: Request for Quote Messages

Description: A request for quote event

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
5	eventType	required	Integer	Type of event.
Allowed values: see constant group RFQ_EVENT

6	distributionType	required	Integer	Type of request for quote event type.
Allowed values: see constant group RFQ_DISTRIBUTION_TYPE

7	orderBook	required	Long	The order book for which quotes are requested.
8	requestAskQuote		Boolean	True if the requester wants an ask quote. Note that is allowed, indeed this is the more common case, to request both an ask and bid quote.
9	requestBidQuote		Boolean	True if the requester wants a bid quote. Note that is allowed, indeed this is the more common case, to request both an ask and bid quote.
10	quoteProviderMember		String (64)	The member that is asked to provide a quote. This field only required set when the distributionType is PRIVATE.
11	publicRFQId	required	String (64)	The id of the RFQ on the public flow, unique within the system and over time.
12	publicMember		String (64)	The order member info showed to the public. Note that this field is only filled out if the current market transparency allows for it.
13	publicUser		String (64)	The user member info showed to the public. Note that this field is only filled out if the current market transparency allows for it.
14	timeOfEntry	required	String (64)	Time of entry, set by the system when the request for quote is inserted. The format is yyyy-MM-ddTHH:mm:ss.SSS
15	qty		Long	The quantity that requester wants to be quoted.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

5.4.1 Chat Messages

Message: ChatMessageReq

Message ID: 35

Type: Chat Messages

Description: Chat message request.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
5	clearingMember		String (64)	Only applicable for Order and Trade related messages. The Member responsible for clearing the order or trade.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
7	account		String (64)	Only applicable for Order and Trade related messages. A free text field passed through for internal member use.
8	isPublic	required	Boolean	The Message is a public message, i.e. is sent out on the public flow
9	message	required	String	The Message that is sent, can have a max length of MeMaxFieldLengthsIf.MAX_LONG_REF_FIELD_LENGTH
10	subscriptionGroup	required	Integer	Define a project specific subscriptionGroup in reference data to use for messaging.
11	messageRef		String	Used at the discretion of the client application. The recommended usage of this field is that the client application assigns some sort of id that is used to identify the message conference. This data is purely pass through from an ME point of view.
12	publicOrderId		String	The entering member of the order is added to the receiver list, note that the orderBookId also has to be entered.
13	orderBookId		Long	The order book of the order corresponding to publicOrderId.
14	to		ToOwnerData[]	Members to send message to.
15	bcc		BccOwnerData[]	Members to send copy to without revealing other participants.
501	traderId		String (64)	Only applicable for Order and Trade related messages. The TraderID for the order/trade.
This request will normally return a response of type ChatMessageRsp.

Message: ChatMessageRsp

Message ID: 36

Type: Chat Messages

Description: Response to a chat message request.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
Message: ChatMessageEventPrivate

Message ID: 57

Type: Chat Messages

Description: Chat message data.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
5	fromMember		String	From whom is the message sent.
6	fromUser		String	From whom is the message sent.
7	message		String	Chat message
8	messageRef		String	Copied from ChatMessageDataIn.messageRef, i.e. this data is purely pass through from an ME point of view.
9	publicOrderId		String	The public order id.
10	to		ToOwnerData[]	Members that the message was sent to.
11	receiverMember		String	The receiver.
12	receiverUser		String	The receiver.
Message: ChatMessageEvent

Message ID: 58

Type: Chat Messages

Description: Chat message data.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
5	fromMember		String	From whom is the message sent.
6	fromUser		String	From whom is the message sent.
7	message		String	Chat message
8	messageRef		String	Copied from ChatMessageDataIn.messageRef, i.e. this data is purely pass through from an ME point of view.
5.4.1.1 Chat Messages (Internal)

Message: OwnerData

Message ID: 59

Type: Chat Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: Owner data.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	member		String (64)	The member of the user.
2	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
3	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
5	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
Message: ToOwnerData

Message ID: 60

Type: Chat Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: Owner data.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	member		String (64)	The member of the user.
2	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
3	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
5	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
Message: BccOwnerData

Message ID: 61

Type: Chat Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: Owner data.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	member		String (64)	The member of the user.
2	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
3	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
5	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
5.5 Index Messages

Message: IndexEvent

Message ID: 496

Type: Index Messages

Description: Publishes index calculation results for one or more indexes. It is configurable if the publishing is in real time or paced - the default is real time.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
5	indexEventDataCommons	required	IndexEventDataCommon[]	
5.5.1 Index Messages (Internal)

Message: IndexEventDataCommon

Message ID: 497

Type: Index Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: Contains data that is common for the enclosed IndexEventData:s

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	timeOfCalculation		String	The time when the index calculation was performed. Specified if (and only if) the calculation time differs from the time of the event (i.e. if the publishing of the concerned index calculation is paced). The format is YYYY-MM-DDThh:mm:ss.sss.
2	indexEventDatas	required	IndexEventData[]	
Message: IndexEventData

Message ID: 487

Type: Index Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: Contains index calculation results for one index and possibly related statistics.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	orderBookId	required	long	Identifies the index. It is the order book id that the IndexComposition points to.
2	value	required	long	The last calculated index value.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

3	statistics		IndexEventDataStatistics	Index calculation statistics. It is configurable if this field is always included or at an interval - the default is to always include it.
4	projectedValue		Long	The last calculated projected index value. A projected value is calculated if (and only if) any of the order books, which builds up the index, is in an auction state and has an equilibrium price. For the order books, which is in an auction state, an equilibrium price of the auction has precedence over the ordinary price used in index value calculations when calculating the projected value.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

502	openingValue		Long	The opening index value.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

503	currentMarketValueToday		BigInteger	The opening index value.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

504	cmvFirstTimeAdjusted		Boolean	cmv first time adjusted, set by plugin.
505	sourceTimeOfEvent		String	Time stamp from Thomson Reuters expressed in the local time. The format is YYYY-MM-DDThh:mm:ss.sss.
506	elementOrderBookId		Long	Orderbook id that cmvFirstTimeAdjusted refers to.
507	projectedValueAfternoon		Long	Is based upon calculatedAuctionPrice and matchedQuantity from AuctionEvent and from TradeEvents from the afternoon session.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

508	projectedClose		Long	Projected close, Maintained by the Intraday Index plugin.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

Message: IndexEventDataStatistics

Message ID: 498

Type: Index Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: Contains index calculation statistics for one index.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	highValue	required	long	Current day's highest calculated index value.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

2	lowValue	required	long	Current day's lowest calculated index value.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

3	totalTurnover		BigInteger	Current day's total turnover for the trades that were used to calculate index values.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

501	totalSharesTraded		Long	The total volume, number of shares traded.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

502	change		Long	Today's change
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

503	changePercentage		Long	Today's index change as percentage
Values representing percentage are stored as integers with the following interpretation: 
- 12.5% is stored as 0.125 in all TRADExpress' fields that represent a percentage. 
- Since TRADEpress uses a long where the value is always multiplied by the literal DIVISOR.INTEREST, the internal representation of 12.5% is 125000 as a long (64-bit) integer value.

504	priorIndex		Long	Last business day's closing index value
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

505	closingPrice		Long	Today business day's closing index value
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

506	projectedChange		Long	Absolute Change where projected value is compared to previous day's close Index.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

507	projectedChangePercentage		Long	% Change of projected value compared to previous day's close Index
Values representing percentage are stored as integers with the following interpretation: 
- 12.5% is stored as 0.125 in all TRADExpress' fields that represent a percentage. 
- Since TRADEpress uses a long where the value is always multiplied by the literal DIVISOR.INTEREST, the internal representation of 12.5% is 125000 as a long (64-bit) integer value.

5.6 iNav

Message: UpdateIndicativePriceReq

Message ID: 1528

Type: iNav

Description: Contains an array of incoming iNav information (see indicativeUpdates).

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	indicativeUpdates	required	InavData[]	Indicatives price updates.
2	possDup		boolean	The possible duplicate flag
3	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
4	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
5	member		String (64)	The member of the user.
6	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
7	clearingMember		String (64)	Only applicable for Order and Trade related messages. The Member responsible for clearing the order or trade.
8	account		String (64)	Only applicable for Order and Trade related messages. A free text field passed through for internal member use.
9	traderId		String (64)	Only applicable for Order and Trade related messages. The TraderID for the order/trade.
This request will normally return a response of type UpdateIndicativePriceRsp.

Message: UpdateIndicativePriceRsp

Message ID: 1529

Type: iNav

Description: Response to UpdateIndicativePriceReq.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
Message: UpdatedIndicativePriceEvent

Message ID: 1572

Type: iNav

Description: Contains iNav information.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
6	orderBook	required	Long	The order book the data is bound for.
7	inav	required	Long	The new indicative price. The field represents a decimal value.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

8	change	required	Long	The change in ticks.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

9	percentChange	required	Long	The change in percentage.
Values representing percentage are stored as integers with the following interpretation: 
- 12.5% is stored as 0.125 in all TRADExpress' fields that represent a percentage. 
- Since TRADEpress uses a long where the value is always multiplied by the literal DIVISOR.INTEREST, the internal representation of 12.5% is 125000 as a long (64-bit) integer value.

10	timestamp	required	String	Time for setting the price. The milliseconds since January 1, 1970, 00:00:00 GMT. The format is YYYY-MM-DDThh:mm:ss.sss.
Message: InavData

Message ID: 1530

Type: iNav

Description: Contains the incoming iNav information.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	orderBook	required	Long	The order book the data is bound for.
2	inav	required	Long	The new indicative price. The field represents a decimal value.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

3	change	required	Long	The change in ticks.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

4	percentChange	required	Long	The change in percentage.
Values representing percentage are stored as integers with the following interpretation: 
- 12.5% is stored as 0.125 in all TRADExpress' fields that represent a percentage. 
- Since TRADEpress uses a long where the value is always multiplied by the literal DIVISOR.INTEREST, the internal representation of 12.5% is 125000 as a long (64-bit) integer value.

5	timestamp	required	Long	Time for setting the price. The milliseconds since January 1, 1970, 00:00:00 GMT
6 Reference Data

6.1 General Messages

Message: GlobalPasswordProperties

Message ID: 105

Type: General Messages

Description: This is the Global System Wide password properties object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	globalPasswordPropertiesId	required	String (64)	The business id of the PasswordProperties
8	passwordLifeTime		Integer	The number of days a password is valid
9	logonAttemptsLimit		Integer	The maximum number of logon attempts that is allowed before the system locks you out
10	minPasswordLength		Integer	The minimum length of a password
11	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
12	passwordHistoryLength		Integer	The number of old/historical passwords that is kept per user. (and cannot be reused). The maximum allowed
Message: ScheduledUpdateContainer

Message ID: 476

Type: General Messages

Description: This class holds a scheduled add, update or delete request as a BiMessageData object. The complete received request is stored as a blob (byte array) in the database and retrieved and applied when the scheduled time occurs.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
8	updateId		Long	The generated id for this specific update.
9	updateApplied		Boolean	If set to true, the update has been applied. Old updates are kept in the database for a configurable number of days) before being permanently removed.
10	appliedWhen		String (24)	Time when an update has/will be applied. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
11	appliedWhenLong		Long	Just a reference on when an update has been applied in long format.
12	userDefinedString		String (255)	Arbitrary user-defined data, passed back and forth by the scheduled event handler.
13	scheduledTime		String (24)	The time when the message is to be applied. The format is yyyy-MM-dd'T'HH:mm:ss.
14	scheduledTimeLong		Long	The scheduled time as a long, being convenient for sorting and searching.
15	updateMessageClass		String (255)	Part of the message as a searchable db field.
16	messageIdentity		String (255)	A name/identifier from the message to be applied (user id for example).
17	messageStatus		String (255)	The status of the scheduled update.
18	resultingTapStatusCode		Integer	The tap status code for from the transaction when this update has been applied.
19	resultingTapStatusMessage		String (1024)	TThe tap status message for from the transaction when this update has been applied.
22	issuedBy		String (255)	This is the ownerData field of the incoming transaction. Saved to keep track of who did what.
23	scheduledUpdateType		Integer	The type of scheduled operation. One of ADD, UPDATE or REMOVE.
Allowed values: see constant group ScheduledUpdateType

24	objectId		String (255)	The internal object identity of the reference data object to be applied. For internal use only.
25	objectClass		String (512)	The internal object class (without package name) of the reference data object to be applied. For internal use only.
26	scheduleType		Integer	The type of schedule. One of REFDATA or SERIES_GENERATION.
Allowed values: see constant group ScheduleType

27	repeatInterval		Integer	The repeat interval for this schedule. The time unit is hours.
28	isSuspended		Boolean	If this attribute is set to true, the schedule has been suspended and will not execute until it is un-suspended.
Message: ScheduledUpdateSelectionParameters

Message ID: 477

Type: General Messages

Description: Base class that holds common selection parameters. Parameters that is to be ignored during search shall have the value null.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	updateId		Long	The updateId for the scheduled update. This is also the cache-key for the ScheduledUpdateContainer object, so there will only be one object that matches the search condition if this is not null.
2	updateApplied		Boolean	Set to true if search only will apply to applied scheduled updates.
3	appliedWhen		String	Arbitrary user defined data string. May be used as selection criteria. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
4	appliedWhenLong		Long	The appliedWhen attribute in long format.
5	userDefinedString		String	Arbitrary user defined data string. May be used as selection criteria.
6	scheduledTime		String	The time when the update is to be applied. Format yyyy-MM-dd'T'HH:mm:ss.
7	scheduledTimeLong		Long	The scheduledTime in long format.
8	updateMessageClass		String	The name of the scheduled request, AddUserReq for example.
9	messageIdentity		String	Key attributes from the update request. Typically "memberid/userid".
10	messageStatus		String	The staus of the scheduled update. May be one of PENDING, OK or FAILED.
11	resultingTapStatusCode		Integer	The resulting tap status code for the applied transaction.
12	isRemoved		Boolean	Set to true if only removed schedules should be retrieved.
13	issuedBy		String	The member/user who issued this scheduled request. Format is "memberId/userId yyyy-MM-dd'T'HH:mm:ss.SSS". All or part of full issuedBy string may be specified (for example only "memberId/userId" need to be specified).
Message: ServerPartition

Message ID: 106

Type: General Messages

Description: The ServerPartition is a child object to ServerPartitionTable and hold information on a specific partition.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	cachePartitionTableId	required	Integer	The cache id of the Partition table, just pass through. Must be unique.
8	partitionId	required	Integer	The partition for this ServerPartition. Must not be unique.
9	partitionTableType	required	String (64)	Identifies the type of Partition table. Note that the same partition may occur int several ServerPartition objects of different types.
10	isDefault		Boolean	Set to true if this partition is the default partition for all partitions of this type. There should only be one default table per partition table type.
13	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: ServerPartitionTable

Message ID: 107

Type: General Messages

Description: The system normally contains a number of partitions. The ServerPartitionTable is used to be able to group the available partitions into partition types. When creating partition dependent data, the ServerPartitionTable may be used by the system to select a suitable partition.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	partitionTableType		String (64)	Identifies the type of Server Partition table.
10	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
11	serverPartitions		ServerPartition[]	This Set contains elements that defines the available partitions for this ServerPartitionTable. The object type in the set is ServerPartition. Note that this set may be null or empty, since child objects may be distributed in separate broadcasts.
Message: PublicMulticastContent

Message ID: 108

Type: General Messages

Description: The PublicMulticastContent defines the type and instrument content of a public multicast flow.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	pmcContentId	required	String	The system identity of this content
8	flowIdList	required	String (255)	Comma-separated list of data flows contained in the multicast content.
9	subscriptionGroupList		String (255)	Semicolon-separated list of comma-separated lists of subscription groups. The semicolon separation indicates to which source/data partition the subscription groups belong. The semicolon separation corresponds to the order of sources in the sourceIdList.
10	publicMulticastPartitions		PublicMulticastPartition[]	Specifies a set of children PublicMulticastPartition. Note that this set may be null or empty, since child objects may be distributed in separate broadcasts.
11	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: PublicMulticastPartition

Message ID: 109

Type: General Messages

Description: Defines a public multicast partition by associating content with a protocol and a set of addresses.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	pmcPartitionId	required	String (128)	Identity of the public multicast partition.
8	payloadContentType	required	String	Content type of the payload protocol, See EmapiHeader.CONTENT_TYPE_*
10	timeToLive		Integer	The TTL (Time to live) for UDP datagrams
11	bundleSize		Integer	The maximum allowed number of bytes in a bundled UDP datagram
12	heartbeatInterval	required	Integer	The frequency (in seconds) with which a heartbeat is generated if no other activity has been seen
13	pmcContentId		String	This field is required for lookups of PublicMulticastContent objects and is required to construct the cache and to make consistency checks of the cache
14	publicMulticastAddresses		PublicMulticastAddress[]	Specifies a set of children PublicMulticastAddress. Note that this set may be null or empty, since child objects may be distributed in separate broadcasts.
15	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: PublicMulticastAddress

Message ID: 110

Type: General Messages

Description: Defines a public multicast address and its publishing server.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	pmcAddress	required	String	The public multicast address.
8	pmcPort	required	Integer	The public multicast port.
9	pmcSourceAddress		String	Multicast source address. NIC on which the server is publishing.
10	pmcPartitionId		String	This field is required for lookups of PublicMulticastPartition objects and is required to construct the cache and to make consistency checks of the cache
11	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: LatestStateSequenceNumber

Message ID: 453

Type: General Messages

Description: This class is used to distribute the state sequence number to all clients. An update of the LatestStateSequenceNumber object is sent after any other change to reference data objects and is always distributed to all reference data clients. Reference data objects are filtered based on Subscription Access Profile specified for a member/user. The WaitForSSNEvent is not filtered. Reference data objects of this type will never be filtered and guarantees thereby that a user always will receive the latest State Sequence Number.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
8	stateSequenceId	required	Integer	Cache identification of this LatestStateSequenceNumber. There is normally only one instance of this object.
Message: PublicMemberData

Message ID: 129

Type: General Messages

Description: This object contains the public part of member information such as full name, mail address and contact information.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	memberId		String	The assigned member id.
2	fullName		String	The full name of the member.
3	address		String	Company Office Address.
4	phone		String	Company Phone number.
5	fax		String	Company Fax number.
6	complianceContact		String	Name of the compliance contact person.
7	complianceContactPhone		String	Phone number to the compliance contact person.
8	complianceContactMail		String	E-mail address to the compliance contact person.
9	memberType		Integer	The type of member (trading, clearing etc). This field can be set to null.
Allowed values: see constant group MemberType

10	parentMember		String	If the memberType attribute is one of MEMBER_UNIT or DIRECT_S_DMA, this attribute holds the memberId of the sponsoring member. This field can be set to null.
11	associatedMembers		String	This members associations. They can be either Member Units or SDMAs.
Message: PropertiesCategory

Message ID: 135

Type: General Messages

Description: Holds a collection of properties that all belong to the same category.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	categoryId	required	String (64)	The type of category. The category type is defined and interpreted by the using application.
8	propertiesData		PropertyData[]	The properties in this category. Note that this set may be null or empty, since child objects may be distributed in separate broadcasts.
9	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: PropertyData

Message ID: 136

Type: General Messages

Description: A property. A property is defined/interepreted by the storing entity and consists of name/value pairs.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	propertyId	required	String (64)	The property id, defined by the storing entity. .
8	propertyValue		String (128)	The property values, defined by the storing entity.
9	propertiesCategoryId		String (64)	This field is required for lookups of PropertiesCategory objects and is required to construct the cache and to make consistency checks of the cache
10	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: DateCollection

Message ID: 138

Type: General Messages

Description: A root placeholder class that holds a collection of dates. The "type of date" in this collection is determined by the dateType field. The "dateType" field is validated against the DATE_TYPE constant group.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	dateType	required	Integer	The meaning of the dates in this collection. Validated against DATE_TYPE constant group.
Allowed values: see constant group DATE_TYPE

8	dates		CalendarDate[]	This is the actual collection of dates belonging to "this" dateType. The object type in this Set is CalendarDate. Note that this set may be null or empty, since child objects may be distributed in separate broadcasts.
9	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: CalendarDate

Message ID: 139

Type: General Messages

Description: A calendar date that represents something. The 'something' is determined by the type of the DateCollection (the parent) the date belongs to.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	date	required	String (32)	A calendar date in standard format: YYYY-MM-DD.
8	dateType		Integer	This field is required for lookups of DateCollection objects and is required to construct the cache and to make consistency checks of the cache
Allowed values: see constant group DATE_TYPE

9	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
10	calendarId		String (128)	The "identity" of this date. This field may be used for specifying a calendar date that is specific for an exchange/country etc. The id here is (may be) referenced from the orderbook parameters block.
11	dateKey		String (64)	The internal key for this CalendarDate. Generated when adding the date. It is not allowed for a date+calendarId combination to appear for more than one DATE type, i.e. one combination of date+calendarId may only occur once among all calendar dates.
12	displayName		String (255)	The display name for this date, Midsummer for example.
Message: UpdateScheduledUpdateReq

Message ID: 480

Type: General Messages

Description:

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	scheduledUpdateContainer		ScheduledUpdateContainer	
12	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type UpdateScheduledUpdateRsp.

Message: UpdateScheduledUpdateRsp

Message ID: 481

Type: General Messages

Description: The response to an UpdateScheduledUpdate.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
6	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
7	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
8	scheduledUpdateContainer		ScheduledUpdateContainer	The newly created Scheduled update object.
Message: RemoveScheduledUpdateReq

Message ID: 482

Type: General Messages

Description: Removes a ScheduledUpdate object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	scheduledUpdateContainer		ScheduledUpdateContainer	
12	removeType	required	Integer	The type of remove operation to be conducted. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
13	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: CdQueryScheduledUpdatesReq

Message ID: 483

Type: General Messages

Description: A request to retrieve pending scheduled cache updates.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	selectionData		ScheduledUpdateSelectionParameters	Pending update selection parameters.
12	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdQueryScheduledUpdatesRsp.

Message: CdQueryScheduledUpdatesRsp

Message ID: 484

Type: General Messages

Description: A response to an QueryScheduledUpdatesReq request.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
6	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
7	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
8	pendingUpdates		ScheduledUpdateContainer[]	All pending update reqests that match the request's selection criteria.
Message: QueryScheduledUpdatesDataReq

Message ID: 485

Type: General Messages

Description: Query for scheduled update data (i.e.) the actual transaction data that is scheduled

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	selectionData		ScheduledUpdateSelectionParameters	Pending update selection parameters.
12	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type SimpleRsp.

Message: ServerProperties

Message ID: 161

Type: General Messages

Description: A table containing information about system name, heartbeats, time outs etc that are commonly used by many servers.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	dummyId	required	String (32)	A dummy id for this object. There should only be one instance of ServerProperties.
8	isTestSystem		Boolean	If true then this system is a test system.
9	systemName		String (128)	The name of the system i.e. for example TEST1.
10	serverPartitionHeartbeatInterval		Integer	The frequency in seconds that the servers will publish partition heartbeats (from servers i.e. MEs to clients)
11	maxLostHeartbeats		Integer	The maximum number of allowed missed heartbeats before a TAX consider a client connection being lost
12	heartbeatInterval		Integer	The frequency (in seconds) with which the TAX server will expect clients to send in heartbeats
13	heartbeatSurveillance		Boolean	Flag indicating whatever the TAX should supervise heartbeats from clients
14	weekendIsAlwaysClosed		Boolean	If true then weekends (Saturday and Sundays) are always assumed to be closed by the schedule. The idea is to reduce the manual work of registering all weekends as closed days in a CalendarDate set.
15	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: CombinationOrderBookData

Message ID: 164

Type: General Messages

Description: The definition of one leg or atom in a combination orderbook. Combination books are defined by their ?atom?. For every leg, the atom describes: 1) The leg orderbook, 2) leg bid/ask flag 3) the leg volume The atom describes the smallest volume of the combination order that can be traded. A bid order with volume 1 in the combination book implies an instruction to perform the atom. An ask order with volume 1 implies the same thing, except that the bid/ask flags are reversed.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	orderBookId		long	The orderbook id for this combination leg.
2	legVolume		int	A trade in a combination orderbook is resolved by the system into individual trades in each leg of the combination. If N units are traded in the combination orderbook, then the individual trade for this leg will have the volume N x legVolume. Hence, this parameter expresses the relationship between the traded volume in the combination orderbook and the volume in the corresponding leg trade. Generated orders or baits (also known as implied orders), in the leg orderbooks follow the same volume adjustment rule.
3	legIsBid		boolean	A bid order in the combination orderbook represents an order in the individual leg on the side specified by this variable. For an ask order in the combination orderbook, the opposite is true.
Message: MeGlobalParameters

Message ID: 245

Type: General Messages

Description: The MeGlobalParameters block hold configuration common to all ME servers in the system.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	elementId		String (128)	The id the of the MeGlobalParameters element.
8	parentElementId	required	String (128)	Specifies a parent GlobalParameters id (for EMAPI).
9	gtcOrderLifetime		Long	Specifies the number of days a Good Til Cancel (GTC) order vill be kept as active
10	alertInterval		Long	The minimum number of milliseconds to wait before sending the same type of alert again. Not applicable to all types of alerts.
11	alertPegRecalculationsPerSecond		Long	If the number of peg recalculation calls per second goes above this number, an alert will be sent.
12	alertActiveOrders		Long	If the number of active orders for an orderbook goes above this number, an alert will be sent.
13	alertStateScanInterval		Long	Interval in milliseconds between scanning orderbooks to check if they are in the expected trading state.
14	alertStateAllowedDelay		Long	Alert if a trading state change has not occurred in this number of milliseconds after the expected time.
15	pegRecalculationThreshold		Long	BBO entries below this volume will have no effect on pegged orders.
16	maxNrOrdersPerSubscrGroup		Integer	If the number of live orders in a subscription group reaches this limit, later orders will be rejected. A value of 0 means no limit.
17	maxNrOrdersPerOrderBook		Integer	If the number of live orders in an order book reaches this limit, later orders will be rejected. A value of 0 means no limit.
20	useCombinationPriceBands		Boolean	If true, the matching engine will calculate price bands in combination books from the price bands in the leg books and validate orders against the band.
21	createSingleBaits		Boolean	If true, the matching engine will create single baits from combination books to the leg books.
22	publishSingleBaits		Boolean	If true, the matching engine will publish baits in single books.
23	publishCombinationBaits		Boolean	If true, the matching engine will publish baits in combination books.
24	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
25	tradingProtectionLimitsId		String (64)	A reference to a TradingProtectionLimits block that applies globally.
501	disableTraderIdValidation		Boolean	If this flag is True, there should be no validation for trader id.
502	showNumberOfOrdersInMBL		Boolean	If set to true, the number of orders should be set on MarketByLevelEvents.
Message: IeGlobalParameters

Message ID: 502

Type: General Messages

Description: The IeGlobalParameters block hold configuration common to all Index Engine servers in the system.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
8	elementId		String (128)	The id the of the IeGlobalParameters element.
9	parentElementId	required	String (128)	Specifies a parent GlobalParameters id (for EMAPI).
10	maxNoOrderBookDataPerClockPulse		Integer	The max number of OrderBookData inside the UpdateOrderBookEvent, which may be sent due to a clock pulse.
11	awaitIndexCompositionElementsOrderBooksClosingPriceStorage		Boolean	Specifies if the storage of an index' closing price shall be delayed until the IndexCompositionElement's order books have stored their closing price.
12	intervalRetryStorageOfClosingPrice		Integer	The interval (in seconds) at which the delayed storage of index:s' closing price is retried. The delay is due to that the index:s' IndexCompositionElement:s have not stored their closing price.
Message: GlobalParameters

Message ID: 248

Type: General Messages

Description: This is a root object that hold references to component specific global parameters. There is normally only one instance of the GlobalParameters and its child objects.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	elementId		String (128)	Actually a dummy, since there should only be one instance of GlobalParameters.
8	meGlobalParameters		MeGlobalParameters[]	This is a reference to a MeGlobalParameters block that hold configuration common to all ME servers in the system. Note that this set may be null or empty, since child objects may be distributed in separate broadcasts.
9	orGlobalParameters		OrGlobalParameters[]	This is a reference to a OrGlobalParameters block that hold configuration common to all OR servers in the system. Note that this set may be null or empty, since child objects may be distributed in separate broadcasts.
10	cdGlobalParameters		CdGlobalParameters[]	This is a reference to a CdGlobalParameters block that hold configuration common to all CD servers in the system. Note that this set may be null or empty, since child objects may be distributed in separate broadcasts.
13	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
15	ieGlobalParameters		IeGlobalParameters[]	This is a reference to a IeGlobalParameters block that hold configuration common to all Index Engine servers in the system. Note that this set may be null or empty, since child objects may be distributed in separate broadcasts.
Message: CdGlobalParameters

Message ID: 249

Type: General Messages

Description: The CdGlobalParameters block hold configuration common to all CD servers in the system.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	elementId		String (128)	The id the of the CdGlobalParameters element.
8	parentElementId	required	String (128)	Specifies a parent GlobalParameters id (for EMAPI).
9	maxMarketDataFeedSessions		Integer	Specifies the maximum number of Market Data feed sessions that one user is allowed to have.
10	maxOrderbookSessions		Integer	Specifies the maximum number of Orderbook sessions that one user is allowed to have.
11	maxReplaySessions		Integer	Specifies the maximum number of Replay sessions that one user is allowed to have.
12	maxMopsSessions		Integer	Specifies the maximum number of Mops sessions that one user is allowed to have.
13	maxTotalSessions		Integer	Specifies the total maximum number of sessions that one user is allowed to have, irrespecive of type.
16	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
17	maxOrderActionSessions		Integer	Specifies the maximum number of Order Action sessions that one user is allowed to have.
501	caDeltaTime		Long	The time (in ms) to wait until the execution of the corporate actions is triggered.
502	caStartTime		String	Is set to the time when CA starts to run due to schedule, and cleared when finished.
503	timeToEnableForNewSeries		Integer	The time (in number of minutes) when a new series is disabled before it automatically gets enabled. This is used for series generation. If this is set to 0 it means that series will be generated enabled (instead of disabled).
504	businessDate		String (32)	The business date of the order, could differ from the date of the time stamp at the end of the night-session. Format is yyyy-mm-dd.
505	caDerivativesStartTime		String (32)	The automatic start time of CA for derivatives. Format is HH:mm:ss.
506	nextBusinessDate		String (32)	The next business date of the order, the next business date after the businessDate. Format is yyyy-mm-dd.
Message: OrGlobalParameters

Message ID: 250

Type: General Messages

Description: The OrGlobalParameters block hold configuration common to all OR servers in the system.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	elementId		String (128)	The id the of the OrGlobalParameters element.
8	parentElementId	required	String (128)	Specifies a parent GlobalParameters id (for EMAPI).
9	connectionTimeOut		Long	Specifies the connection timeout in ms
10	enabledInMode		Integer	The current functional mode of the order router. The value is a value from the OrderRouterMode constant group.
Allowed values: see constant group OrderRouterMode

13	defaultMarket		String	The order router's primary market and its target for remaining orders. This field may or may not be an ID reference to a Market object.
14	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
6.1.1 General Messages (Internal)

Message: ProteusRefDataMessage

Message ID: 236

Type: General Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: Super class for all cache tap messages.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
6.1.2 General Management Messages

Message: ChangePasswordPropertiesReq

Message ID: 128

Type: General Management Messages

Description: A request to change system password properties.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	passwordLifeTime		Integer	Password validity time in number of days.
13	logonAttemptsLimit		Integer	Number of times a user can fail to login before the account is disabled.
14	minPasswordLength		Integer	The minimum length in characters of passwords.
15	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
16	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateGlobalPropertiesReq

Message ID: 134

Type: General Management Messages

Description: A request to update the system global properties.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	propertiesByCategory		PropertiesCategory[]	New and complete array of properties category data to replace the existing data.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateServerPropertiesReq

Message ID: 162

Type: General Management Messages

Description: A request to update server properties.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
27	serverProperties		ServerProperties	New and complete server properties data to replace the existing data.
28	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
29	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddTickSizeTableReq

Message ID: 166

Type: General Management Messages

Description: A request to add a ticksize table.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	tickSizeTable		TickSizeTable	The data of the tick size table to be added.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateGlobalParametersReq

Message ID: 251

Type: General Management Messages

Description: Updates a global parameters entry. It is assumed that the entry always contain a full set of child objects (currently MeParameters, OrParameters and CdParameters).

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
25	globalParameters	required	GlobalParameters	New and complete global parameters data to replace the existing data.
26	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
27	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateGlobalPasswordPropertiesReq

Message ID: 252

Type: General Management Messages

Description: A request to update the global password properties.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	globalPasswordProperties		GlobalPasswordProperties	New and complete global password properties data to replace the existing data.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddMarketDepthReq

Message ID: 1600

Type: General Management Messages

Description: Add number of levels for a particular MBL flow.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	marketDepth	required	MarketDepth[]	Array of MarketDepth objects to add.
This request will normally return a response of type CdResponse.

Message: UpdateMarketDepthReq

Message ID: 1601

Type: General Management Messages

Description: Update an existing MarketDepth object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	marketDepth	required	MarketDepth	MarketDepth object to update.
This request will normally return a response of type CdResponse.

Message: RemoveMarketDepthReq

Message ID: 1602

Type: General Management Messages

Description: Remove an existing MarketDepth object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	marketDepth	required	MarketDepth	MarketDepth object to update.
13	removeType	required	Integer	The type of remove operation to be conducted. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
This request will normally return a response of type CdResponse.

Message: AddDelayClassReq

Message ID: 1605

Type: General Management Messages

Description: Add one or many DelayClasses.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	delayClass	required	DelayClass[]	Array of DelayClasses to add.
This request will normally return a response of type CdResponse.

Message: UpdateDelayClassReq

Message ID: 1606

Type: General Management Messages

Description: Update an existing DelayClass.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	delayClass	required	DelayClass	DelayClass to update.
This request will normally return a response of type CdResponse.

Message: RemoveDelayClassReq

Message ID: 1607

Type: General Management Messages

Description: Remove an existing DelayClass.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	delayClass	required	DelayClass	DelayClass to update.
13	removeType	required	Integer	The type of remove operation to be conducted. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
This request will normally return a response of type CdResponse.

Message: AddRandomizedStartParameterReq

Message ID: 1615

Type: General Management Messages

Description: Add one or many RandomizedStartParameter.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	randomizedStartParameter	required	RandomizedStartParameter[]	Array of RandomizedStartParameter to add.
This request will normally return a response of type CdResponse.

Message: UpdateRandomizedStartParameterReq

Message ID: 1616

Type: General Management Messages

Description: Update an existing RandomizedStartParameter.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	randomizedStartParameter	required	RandomizedStartParameter	RandomizedStartParameter to update.
This request will normally return a response of type CdResponse.

Message: RemoveRandomizedStartParameterReq

Message ID: 1617

Type: General Management Messages

Description: Remove an existing RandomizedStartParameter.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	randomizedStartParameter	required	RandomizedStartParameter	RandomizedStartParameter to update.
13	removeType	required	Integer	The type of remove operation to be conducted. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
This request will normally return a response of type CdResponse.

Message: MarketDepth

Message ID: 1603

Type: General Management Messages

Description: Definition of market depth for a particular MBL flow.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
8	flowId	required	Integer	The flow id (value).
9	levels	required	Integer	Number of levels disseminated for this particlar flow.
10	isConfigurable	required	Boolean	True if allowed to change number of levels.
Message: DelayClass

Message ID: 1608

Type: General Management Messages

Description: Definition of delay class

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
8	delayClassId	required	String (256)	The name of the DelayClass
9	delayTime		Long	The time the market data will be delayed in the Delay Server
10	scrubbingInterval		Long	The scrubbing interval for the market data
11	delayBitmask		Long	The bit mask for this delay class, used to create fictive order book ids in the Delay Server.
Message: RandomizedStartParameter

Message ID: 1618

Type: General Management Messages

Description: Definition of randomized start time for markets

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
8	parameterId	required	String (256)	The id of the RandomizedStartParameter
9	timeInterval		Long (256)	In milliseconds. The system will pick a random time during this interval for the opening.
10	actualTimeOffset		Long	In milliseconds. The current actual opening offset time. Updated by the system.
6.2 Member and User Messages

Message: UserPropertiesCategory

Message ID: 103

Type: Member and User Messages

Description: Holds a collection of user properties that all belong to the same category. User properties are not interpreted in any way by the system. The idea is that clients can store things like client application window layout, quoting parameters etc.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	categoryId	required	String (64)	The type of category. The category type is defined and interpreted by the client.
8	userProperties		UserProperty[]	The properties in this category. Note that this set may be null or empty, since child objects may be distributed in separate broadcasts.
9	userId		String (64)	This field is required for lookups of User objects and is required to construct the cache and to make consistency checks of the cache
10	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: UserProperty

Message ID: 104

Type: Member and User Messages

Description: A user property. A user property is defined/interpreted by the client and consists of name value pairs.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	propertyId	required	String (256)	The property id, defined by the client. .
8	propertyValue		String (4000)	The property values, defined by the client.
9	userPropertiesCategoryId		String (64)	This field is required for lookups of UserPropertiesCategory objects and is required to construct the cache and to make consistency checks of the cache
10	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: QueryUsersReq

Message ID: 124

Type: Member and User Messages

Description: A query for all users belonging to member with a specified memberId.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	memberId	required	String	The identification of the member.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type QueryUsersRsp.

Message: QueryUsersRsp

Message ID: 125

Type: Member and User Messages

Description: A response to a query users req.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
6	memberId		String	The system's identification of the member.
7	userData		User[]	Data holding all users belonging to the member matching the request's memberId.
8	messageReference		String	The message reference from the corresponding RequestMessage.
9	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
Message: QueryMemberReq

Message ID: 130

Type: Member and User Messages

Description: A request to query information about one specific or all members.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	memberId		String	The member id. If set to null data for all members will be returned.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type QueryMemberRsp.

Message: QueryMemberRsp

Message ID: 131

Type: Member and User Messages

Description: A response to a QueryMemberReq.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
6	publicMemberData		PublicMemberData[]	This is the public part of member information such as full name, e-mail address and contact information.
7	messageReference		String	The message reference from the corresponding RequestMessage.
8	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
Message: QueryOwnMemberReq

Message ID: 132

Type: Member and User Messages

Description: A request to query information about a specific member.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	memberId		String	Used to retrieve data about a specific member. This is needed since member data are normally not included on the reference data flow (other than for service desk-type users).
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type QueryOwnMemberRsp.

Message: QueryOwnMemberRsp

Message ID: 133

Type: Member and User Messages

Description: A response to a QueryOwnMemberRsp

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
47	memberData		Member	This is the complete set of member data including all private details.
48	messageReference		String	The message reference from the corresponding RequestMessage.
49	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
Message: ServiceProfileEntry

Message ID: 146

Type: Member and User Messages

Description: This is a child to the Service Profile object. The ServiceProfileEntry holds information on the contentClass, marketLevelClass and delayClass. If the Market Instrument Model is used, this object also holds a reference to a View element.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	profileEntryId	required	String (64)	The id of the ServiceProfileEntry. In case the MarketInstrumentModel is used, this is shall point to a valid View.
8	contentClass		String (64)	Class Id of the information content.
9	marketLevelClass		String (64)	Which level of market information this entry is allowed to view
10	delayClass		String (64)	The amount of delay to be applied to the information in this service profile
11	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
12	parentId	required	String (64)	The system identity of this service profile
Message: ServiceProfile

Message ID: 147

Type: Member and User Messages

Description: The Service profile as a container to one or more ServiceProfilesEntries. Typically a Member/User object has a reference to one or more ServiceProfileGroups. The ServiceProfileGroup in turn has a reference to one ServiceProfile. The total service profile for a Member/User is the sum of all ServiceProfiles/ServiceProfileEntries.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	serviceProfileId	required	String (64)	The system identity of this service profile
8	serviceProfileEntries		ServiceProfileEntry[]	Specifies a set of children ServiceProfileEntry, which make up the actual table. Note that this set may be null or empty, since child objects may be distributed in separate broadcasts.
9	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
10	assignedFlows		String (255)	The assignedFlows field contains a comma-separated list of broadcast flow ids (integers). This may be used when the Market Instrument Model is used. These are the subscription flows that users/members that reference this ServiceProfile are allowed to subscribe to. If this field is null, no subscription flow check is performed. Note that the flows defined here apply to all (market instrument model) Views defined among ServiceProfileEntry's children.
11	isDefault		Boolean	If set to true, this service profile entry is the default for newly added members and users. The default profile is used as default both for the Trading Access Profile (TAP) and Subscription Access Profile (SAP).
501	delayClass		String (256)	Key to the delay class coupled to this service profile. If no delay class id is specified then this implies that the flows in this service profile not should be delayed.
Message: ServerProcess

Message ID: 259

Type: Member and User Messages

Description: This is a child to the ServerGroup object. The ServerProcess holds information on runtime properties for a server.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	serverGroupId	required	String (64)	A reference to the parent ServerGroup
8	serverProcessId	required	String (64)	The id of the ServerProcess
9	serverType		String (64)	The type of server, an arbitrary string.
10	handledPartitions		String (255)	A comma separated list of partition identities handled by this server
11	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: ServerGroup

Message ID: 260

Type: Member and User Messages

Description: The ServerGroup is a container for to one or more Servers. A ServerGroup may be used to direct transactions to a defined set of servers. This is typically used when configuring Member/User access to connect to s ServerGroup of TAX servers. The servers within a ServerGroup may be equal, i.e. any server can serve all requests, or partitioned. If servers within a ServerGroup are partitioned, a subset of the servers are dedicated to a specific set of backend partitions.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	serverGroupId	required	String (64)	The system identity of this ServerGroup
8	serverProcesss		ServerProcess[]	Specifies a set of children ServerProcess, which make up the actual server group. Note that this set may be null or empty, since child objects may be distributed in separate broadcasts.
9	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
6.2.1 Member and User Management Messages

Message: Member

Message ID: 101

Type: Member and User Management Messages

Description: This object represents a member firm and holds all basic member data such as id, full name, mail addresses and contact persons etc.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	memberId	required	String (64)	The public id of the member. This id has to be unique. When/if a member change memberId, the assigned memberInternalId must be the same in order to be able to track old orders/trades.
8	fullName	required	String (128)	Complete name of the member firm
9	memberInternalId		Integer	The internal member id is a system assigned id that does not change. If the memberId need to be changed, the new member id will (must) have the same internalMemberId as before the name change. The reason for this is to be able to (somewhat) trace orders and trades belonging to a member irrespective of his/her public memberId.
10	address		String (255)	Company snail-mail address
11	phone		String (64)	Company phone number.
12	fax		String (64)	Company Fax number.
13	complianceContact		String (128)	Name of contact person in compliance matters
14	complianceContactPhone		String (64)	Phone number to the compliance contact person
15	complianceContactMail		String (128)	Mail address to the compliance contact person
16	matchingContact		String (128)	Matching/BackOffice contact person
17	matchingContactPhone		String (64)	Phone number to the Matching/BackOffice contact person
18	matchingContactMail		String (128)	Mail address to Matching/BackOffice contact person
19	isDisabled		Boolean	Set to true if this member has been disabled. Disabling a member will automatically disable all the users belonging to the member. Disabling a member also means that all active orders will be inactivated for the member.
20	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
21	allowedSubscriptionGroupList		String (255)	Comma-separated list of subscription groups that this member is allowed to send requests to. If empty all subscription groups will be allowed.
22	allowedBdxSubscriptionGroupList		String (255)	Comma-separated list of subscription groups that this member is allowed to setup subscriptions on. If empty, allowedSubscriptionGroupList will be used.
23	serviceProfileGroupIdList		String (255)	A comma separated list of ServiceProfileGroup ids that this member has access to.
24	serverGroupId		String (128)	The (optional) server group that this member is connected to. If null, the use of server groups is not applicable for this member.
25	users		User[]	The users within the member firm. The object type in this Set is User. Note that this set may be null or empty, since child objects may be distributed in separate broadcasts.
26	associatedMemberId		String (255)	If the member type is one of Direct access S-DMA or MemberUnit, this is the identity of the sponsoring member.
27	clearingMemberIdList		String (255)	A comma separated list of Clearing Member Ids that this member may use.
28	defaultClearingMemberId		String (64)	The default clearer for this member.
29	defaultSDMAClearingMemberId		String (64)	The default clearer for sponsored direct access DMAs that use this member.
30	memberType		Integer	The type of member. N.B. in the documentation member type is also known as Participant type.
Allowed values: see constant group MemberType

31	tradingAccessProfileList		String (255)	A comma separated list of references to ServiceProfiles for trading. If this is not specified, the ServiceProfile specified as isDefault for the system will be used as TAP.
32	subscriptionAccessProfileList		String (255)	A comma separated list of references to ServiceProfiles for subscriptions. If this is not specified, the ServiceProfile specified as isDefault for the system will be used as SAP.
33	validFromDate		String (10)	The date from which the member is valid. The format is yyyy-MM-dd
34	listOfAliases		String (256)	A list of other markets'/exchanges' ID of this member in the format: market1:memberid1,market2:memberid2,... "maket1" is assumed to be a market defined in the "local" system and is automatically converted to uppercase, since this is the conversion for market ids in the system.
36	defaultMemberUnitClearingMemberId		String (64)	The default clearer for member units using this member as clearer.
37	maxNrOrdersInOneBook		Integer	The member is only allowed to have this many orders in an order book. Later orders will be rejected. A value of 0 means "no limit".
38	partitionId		Integer	This is the AM partition that handles trades for this Member.
39	allowedOnBehalfOfMemberIdList		String (255)	A comma separated list of Member Ids for which this member may act on behalf of.
42	tradingProtectionLimitsId		String (64)	A reference to a TradingProtectionLimits block that applies for this member.
501	traderIds		TraderId[]	A list of allowed TraderIds.
502	shortName		String (125)	The member's shortname.
503	allowedNewsReportTypes		String	Report types allowed for this member, a comma separated string.
504	allowedNewsMarkets		String	Markets allowed for this member, a comma separated string.
505	allowedNewsLanguages		String	Languages allowed for this member, a comma separated string.
506	derivativesTraderIds		TraderId[]	A list of allowed DerivativesTraderIds.
Message: User

Message ID: 102

Type: Member and User Management Messages

Description: This object represents a user, i.e. a person or a customer system that connects to the system.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	userId	required	String (64)	The id of the user. Must be system unique.
8	fullName		String (128)	Complete name of the user.
9	clientAppId		String (64)	This field is optionally used to logically group session users used by a client application. Typically there will be one real-life user i.e. a person and a number of sessions users all having the same client id. The client application will login with the real user and then check what session users it has available. It will then login with all of these session users and multiplex transactions over all of the available sessions (1 real user + X session users). NOTE! The usage described above is purely a convention; the back-end system does not interpret this field in any way.
10	isRealUser		Boolean	If true then this user represents a real-life user. If not it is a session user. See comment for the clientAppId field.
11	isInternalUser		Boolean	If true then this user represents an internal user. The difference compared to a non-internal user is that an internal user cannot be disabled. The purpose of this is mainly to inhibit a system start user to be disabled. NOTE: the purpose of an internal user may change in the future.
12	throttlingLimit		Integer	The maximum number of request per second allowed for this user. A -1 value (default) means that throttling is not enabled.
13	memberId	required	String (64)	This field is required for lookups of Member objects and is required to construct the cache and to make consistency checks of the cache
14	userPropertiesCategory		UserPropertiesCategory[]	The UserPropertiesCategory provides a way to store "arbitrary" user specific properties in the User structure. The properties are stored in a Set of UserPropertiesCategory objects. Note that this set may be null or empty, since child objects may be distributed in separate broadcasts.
15	isDisabled		Boolean	Set to true if this user has been disabled. Disabling a user means that the user is no longer allowed to establish a session towards the system. All active orders will be canceled for the user.
16	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
17	allowLogin		Boolean	If an upper limit of loginFailures (se separate field) is reached then this field will be set to false thus preventing the user from logging in.
18	loginFailures		Integer	How many erroneous login tries the user has done since successful LastLogin. Initially set to 0 and increased by 1 each time the User makes a failed logon attempt. Reset to 0 after a sucessful logon
19	lastLogin		String (64)	Date of user's last successful login in the format yyyy-MM-ddThh:mm:ss.SSS.
20	lastLogout		String (64)	Date of user's last logout in the format yyyy-MM-ddThh:mm:ss.SSS.
21	initial		Boolean	If initial is set to true, the user must change password on next login. Automatically set to false after first successful login.
22	passwordChangeDate		String (64)	Date when password was changed.
23	passwordNeverExpires		Boolean	If this attribute is set to true, then the password never needs to be changed.
24	firstName		String (128)	First name of the user.
25	lastName		String (128)	Last name of the user.
26	emailAddress		String (128)	Email address of the user.
27	phoneNumber		String (64)	Phone number of the user.
28	rolesList		String (255)	The different roles for the user. Roles are stored as a single String containing a comma separated role elements.
29	allowedSubscriptionGroupList		String (255)	Comma-separated list of subscription groups that this entity is allowed to send requests to. If empty, allowed subscription groups of the enclosing member will be used.
30	allowedBdxSubscriptionGroupList		String (255)	Comma-separated list of subscription groups that this entity is allowed to setup broadcast subscriptions on. If empty, allowedSubscriptionGroupList will be used.
31	serviceProfileGroupIdList		String (255)	A comma separated list of ServiceProfileGroup ids that this user has access to. If this is null the ServiceProfileGroup ids for the user's member will be used.
32	serverGroupId		String (128)	The (optional) server group that this user is connected to. If this is null the server group id for the user's member will be used.
33	loggedIn		Integer	if the user is logged in. N.B. This is volatile.
34	tradingAccessProfileList		String (255)	A comma separated list of references to ServiceProfiles for trading. If no TAP is assigned to the user, the TAP of the user's member will be used as default.
35	subscriptionAccessProfileList		String (255)	A comma separated list of references to ServiceProfiles for subscriptions. If no SAP is assigned to the user, the SAP of the user's member will be used as default.
36	validFromDate		String (10)	The date from which the user is valid. The format is yyyy-MM-dd
37	validToDate		String (10)	The date to which the user is valid. The format is yyyy-MM-dd
38	isFixUser		Boolean	Set to true if this user only will use FIX to connect to the system.
39	loadFactor		Integer	Expected TAX load from this user. The value is used by the pre-login allocation algortihm. It will add this value to the number of logged in users on the selected TAX instance when the user logs in. For example, if the value is 10, this user will count as 10 normal users during pre-login allocation. Makes it possible to spread high-load users over different TAX instances. If the value is null, it will count as one. If preLogin is not used, the value is ignored.
40	fixApplicationVersionId		String (24)	The default FIX application version for this user.
41	maxLostHeartbeats		Integer	The max allowed lost hearbeats for this user. If this attribute has a value less than one or is null, the configured system default value will be used. If more than maxLostHeartbeats hearbeats are lost, the user will be disconnected. The time to detect a lost connection is the configured "heartbeatInterval" * "maxLostHearbeats".
502	allowedNewsReportTypes		String	Report types allowed for this user, a comma separated string.
503	allowedNewsMarkets		String	Markets allowed for this user, a comma separated string.
504	allowedNewsLanguages		String	Languages allowed for this user, a comma separated string.
505	bytesPerSec		Integer	The bytes per second allowed to sent out to a user.
506	restrictedUser		Boolean	Set to true if this user is a restricted user
Message: TradingProtectionLimits

Message ID: 467

Type: Member and User Management Messages

Description: This object hold an array of LimitElement, each of which defines the limit settings for a selected group of segments/orderbooks. If the limitElements attribute is an empty array or null, the trading protection limit check is turned of (disabled) completely for the member to whom this TradingProtectionLimits object belong.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
8	protectionLimitId		String (128)	The identity of this TradingProtection limit objetct. This identity is assigned by the server when adding the first trading protection limit and must not be changed by the application.
9	enabled		Boolean	If set to true, these limits are active
10	limitElements		LimitElement[]	Volatile blob
11	isGlobalSettings		Boolean	If set to true, these settings are system global.
Message: LimitElement

Message ID: 468

Type: Member and User Management Messages

Description:

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	name		String	A short descriptive name for this limits object.
2	turnover		Long	Validate order turnover against fixed limit.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

3	quantity		Long	Validate order quantity against fixed limit.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

4	percentBetterThanOppositeSide		Long	Validate order price, limit is x percent better than the best price on oppposite side.
5	percentWorseThanSameSide		Long	Validate order price, limit is x percent worse than the best price on same side.
6	maxOpenOrderValue		Long	Validate open order quantity, i.e. the aggregated quantity for member in active orderbook per side.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

7	maxOpenOrderTurnover		Long	Validate open order turnover, i.e. the aggregated turnover for member in active orderbook per side.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

8	nettedTradePositionTurnover		Long	Validate netted trade turnover, i.e. netted over all trades for member in orderbook.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

9	nettedTradePositionQuantity		Long	Validate netted trade quantity, i.e. netted over all trades for member in orderbook.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

10	orderBooks		long[]	Array of matching engine business ids of the Order Book
12	segments		String[]	Array of referenced segments
Message: AddMemberReq

Message ID: 121

Type: Member and User Management Messages

Description: A request to add a member.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	memberData		Member	The member data to be added.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddTradingProtectionLimitsReq

Message ID: 469

Type: Member and User Management Messages

Description: A request to add a TradingProtectionLimits object. The request creates an TradingProtectionLimits and returns the resulting TradingProtectionLimits object to the requestor in the response. Note that the attribute "protectionLimitId" in the TradingProtectionLimits object will be assigned by the handling server, any application supplied value will be overwritten. The AddTradingProtectionLimitsRsp responce message contains the resulting TradingProtectionLimits and the assigned "protectionLimitId". The assigned id must be used when updating/deleting the TradingProtectionLimits.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	tradingProtectionLimits		TradingProtectionLimits	The data of the TradingProtectionLimits to be added.
12	referencingMemberId		String	The member for whom this will apply
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type AddTradingProtectionLimitsRsp.

Message: AddTradingProtectionLimitsRsp

Message ID: 472

Type: Member and User Management Messages

Description: A request to add a TradingProtectionLimits object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
6	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
8	tradingProtectionLimits		TradingProtectionLimits	The newly created TradingProtectionLimits.
9	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
Message: UpdateTradingProtectionLimitsReq

Message ID: 470

Type: Member and User Management Messages

Description: A request to update a TradingProtectionLimits object. Please note that the provided TradingProtectionLimits object must be the object returned by either an AddTradingProtectionLimitsReq or an QueryTradingProtectionLimitsReq since the "stateSequenceNumber" (i.e. the object version number) of the TradingProtectionLimits object is checked against the stateSequenceNumber of the corresponding object in the server. If there is a missmatch, the transaction is rejected since the TradingProtectionLimits has been updated from another source. If the transaction is rejected due to stateSequenceNumber missmatch, the application should use a QueryTradingProtectionLimitsReq in order to obtain the latest version of the TradingProtectionLimits object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	tradingProtectionLimits		TradingProtectionLimits	A complete TradingProtectionLimits to replace the existing data. The provided data must be based on the "original" TradingProtectionLimits object returned in a AddTradingProtectionLimitsReq or QueryTradingProtectionLimitsReq request.
12	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
13	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveTradingProtectionLimitsReq

Message ID: 471

Type: Member and User Management Messages

Description: Removes a TradingProtectionLimits object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	tradingProtectionLimits		TradingProtectionLimits	A complete TradingProtectionLimits to replace the existing data. The provided data must be based on the "original" TradingProtectionLimits object returned in a AddTradingProtectionLimitsReq or QueryTradingProtectionLimitsReq request.
11	removeType	required	Integer	The type of remove operation to be conducted. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: QueryTradingProtectionLimitsReq

Message ID: 473

Type: Member and User Management Messages

Description: A request to query trading protection limits for a specific member.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
10	tradingProtectionLimitsId	required	String	The member id. If set to null an error will be returned.
This request will normally return a response of type QueryTradingProtectionLimitsRsp.

Message: QueryTradingProtectionLimitsRsp

Message ID: 474

Type: Member and User Management Messages

Description: A request to query information about one specific or all members.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
7	tradingProtectionLimits		TradingProtectionLimits	The TradingProtectionLimits if one was found.
Message: AddUserReq

Message ID: 141

Type: Member and User Management Messages

Description: A request to add a user.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	userData		User	The user data to be added.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateMemberReq

Message ID: 142

Type: Member and User Management Messages

Description: A request to update a member.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	memberData		Member	New and complete member data to replace the existing data.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type ScopeReductionRsp.

Message: UpdateUserReq

Message ID: 143

Type: Member and User Management Messages

Description: A request to update a user.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	userData		User	New and complete user data to replace the existing data.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type ScopeReductionRsp.

Message: RemoveMemberReq

Message ID: 144

Type: Member and User Management Messages

Description: A request to remove a member.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
13	memberData		Member	New and complete member data to replace the existing data.
14	removeType	required	Integer	The type of remove operation to be conducted. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
15	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
16	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveUserReq

Message ID: 145

Type: Member and User Management Messages

Description: A request to remove a user.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
13	userData		User	New and complete user data to replace the existing data.
14	removeType	required	Integer	The type of remove operation to be conducted. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
15	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
16	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: SetEnabledStateMemberReq

Message ID: 425

Type: Member and User Management Messages

Description: A request to enable or disable a member.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
11	memberData		Member	New and complete member data to replace the existing data.
13	enabled		boolean	Setting this flag to true will enable the member. Setting this flag to false will disable the member.
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: SetEnabledStateUserReq

Message ID: 426

Type: Member and User Management Messages

Description: A request to enable or disable a user.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
11	userData		User	New and complete user data to replace the existing data.
13	enabled		boolean	Setting this flag to true will enable the user. Setting this flag to false will disable the user.
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddServiceProfileReq

Message ID: 148

Type: Member and User Management Messages

Description: A request to add a service profile.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	serviceProfileData	required	ServiceProfile	The date of the service profile to be added.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateServiceProfileReq

Message ID: 149

Type: Member and User Management Messages

Description: A request to update a service profile.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	serviceProfileData	required	ServiceProfile	New and complete service profile data to replace the existing data.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveServiceProfileReq

Message ID: 150

Type: Member and User Management Messages

Description: A request to remove a service profile.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	serviceProfileData	required	ServiceProfile	The data of the service profile to be removed.
13	removeType	required	Integer	The type of remove operation to be conducted. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type ScopeReductionRsp.

Message: AddServiceProfileEntryReq

Message ID: 151

Type: Member and User Management Messages

Description: A request to add service profile entry references to a service profile.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	serviceProfileId	required	String	The id of the (parent) service profile that these entries belong to.
13	serviceProfileEntryData	required	ServiceProfileEntry[]	An array of service profile entry elements to be added.
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateServiceProfileEntryReq

Message ID: 152

Type: Member and User Management Messages

Description: A request to update service profile entry references to a service profile.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	serviceProfileId	required	String	The id of the (parent) service profile that these entries belong to.
13	serviceProfileEntryData	required	ServiceProfileEntry[]	An array of new and complete service profile entry elements to replace the existing data.
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveServiceProfileEntryReq

Message ID: 153

Type: Member and User Management Messages

Description: A request to remove service profile entry references to a service profile.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	serviceProfileId	required	String	The id of the service profile that these entries belong to.
13	serviceProfileEntryData	required	ServiceProfileEntry[]	An array of service profile entry elements to be removed.
14	removeType	required	Integer	The type of remove operation to be conducted. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
15	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
16	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddTradeReportTypesReq

Message ID: 1522

Type: Member and User Management Messages

Description: Add a new TradeReportTypes.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	tradeReportTypes	required	TradeReportTypes[]	Array of TradeReportTypes updates.
This request will normally return a response of type CdResponse.

Message: UpdateTradeReportTypesReq

Message ID: 1523

Type: Member and User Management Messages

Description: Update a TradeReportTypes.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
30	tradeReportTypes	required	TradeReportTypes	A TradeReportTypes to update.
This request will normally return a response of type CdResponse.

Message: RemoveTradeReportTypesReq

Message ID: 1524

Type: Member and User Management Messages

Description: Remove a TradeReportTypes.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
30	removeType	required	Integer	The type of remove operation to be conducted. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
31	tradeReportTypes	required	TradeReportTypes	A TradeReportTypes to update.
This request will normally return a response of type CdResponse.

Message: AddAllowedOrderTypesReq

Message ID: 1546

Type: Member and User Management Messages

Description: Add one or many AllowedOrderTypes.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	allowedOrderTypes	required	AllowedOrderTypes[]	Array of AllowedOrderTypes to add.
This request will normally return a response of type CdResponse.

Message: UpdateAllowedOrderTypesReq

Message ID: 1547

Type: Member and User Management Messages

Description: Update an existing AllowedOrderTypes.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	allowedOrderTypes	required	AllowedOrderTypes	AllowedOrderTypes to update.
This request will normally return a response of type CdResponse.

Message: RemoveAllowedOrderTypesReq

Message ID: 1548

Type: Member and User Management Messages

Description: Remove an existing AllowedOrderTypes.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	allowedOrderTypes	required	AllowedOrderTypes	AllowedOrderTypes to update.
13	removeType	required	Integer	The type of remove operation to be conducted. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
This request will normally return a response of type CdResponse.

Message: AddCircuitBreakerOrderBookReq

Message ID: 1554

Type: Member and User Management Messages

Description: Add a new orderbook circuit breaker.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	circuitBreaker	required	CircuitBreakerOrderBook[]	Array of cuircuit breake to add.
This request will normally return a response of type CdResponse.

Message: UpdateCircuitBreakerOrderBookReq

Message ID: 1555

Type: Member and User Management Messages

Description: Update an existing orderbook circuit breaker.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	circuitBreaker	required	CircuitBreakerOrderBook	A cuircuit breake to update.
This request will normally return a response of type CdResponse.

Message: RemoveCircuitBreakerOrderBookReq

Message ID: 1556

Type: Member and User Management Messages

Description: Remove an existing orderbook circuit breaker.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	circuitBreaker	required	CircuitBreakerOrderBook	A cuircuit breake to update.
13	removeType	required	Integer	The type of remove operation to be conducted. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
This request will normally return a response of type CdResponse.

Message: AddCircuitBreakerIndexReq

Message ID: 1557

Type: Member and User Management Messages

Description: Add a new index circuit breaker.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	circuitBreaker	required	CircuitBreakerIndex[]	Array of cuircuit breake to add.
This request will normally return a response of type CdResponse.

Message: UpdateCircuitBreakerIndexReq

Message ID: 1558

Type: Member and User Management Messages

Description: Update an existing index circuit breaker.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	circuitBreaker	required	CircuitBreakerIndex	A cuircuit breake to update.
This request will normally return a response of type CdResponse.

Message: RemoveCircuitBreakerIndexReq

Message ID: 1559

Type: Member and User Management Messages

Description: Remove an existing index circuit breaker.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	circuitBreaker	required	CircuitBreakerIndex	A cuircuit breake to update.
13	removeType	required	Integer	The type of remove operation to be conducted. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
This request will normally return a response of type CdResponse.

Message: AddPriceBandHaltConfigurationReq

Message ID: 1653

Type: Member and User Management Messages

Description: Add a new PriceBandHaltConfiguration.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
30	priceBandHaltConfiguration	required	PriceBandHaltConfiguration[]	Array of PriceBandHaltConfigurations to add.
This request will normally return a response of type CdResponse.

Message: UpdatePriceBandHaltConfigurationReq

Message ID: 1654

Type: Member and User Management Messages

Description: Update a PriceBandHaltConfiguration.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	priceBandHaltConfiguration	required	PriceBandHaltConfiguration	A PriceBandHaltConfiguration to update.
This request will normally return a response of type CdResponse.

Message: RemovePriceBandHaltConfigurationReq

Message ID: 1655

Type: Member and User Management Messages

Description: Remove a PriceBandHaltConfiguration.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	priceBandHaltConfiguration	required	PriceBandHaltConfiguration	A PriceBandHaltConfiguration to update.
13	removeType	required	Integer	The type of remove operation to be conducted. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
This request will normally return a response of type CdResponse.

6.3 Trading Data and Trading Rule Messages

Message: OrderBook

Message ID: 84

Type: Trading Data and Trading Rule Messages

Description: An OrderBook contains a definition on where all the action is. All tradable instruments must have an OrderBook defined.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	orderBookId	required	Long	The matching engine business id of the Order Book
8	isCombinationBook		Boolean	If true, this order book is not based on a single instrument, but is an abstract combination book which contains two or more order book legs.
9	instrumentId		String (255)	Id needed to find the tradable instrument for an orderbook.
10	combinationDefinitionLegs		CombinationDefinitionLeg[]	If the flag isCombinationBook is true, then this set contains the legs of the combination definition. The object type in this Set is CombinationDefinitionLeg Note that this set may be null or empty, since child objects may be distributed in separate broadcasts.
11	displayName	required	String (255)	This is the display name of this orderbook
12	currency	required	String (3)	The currency this order book trades in. This is a key reference to a Currency object
13	roundLot		Long	The round lot i.e. the chunk size in which orders are processed.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

14	subscriptionGroup	required	Integer	The subscription group this order book belongs to. An OrderBook belongs to one OrderBookRuleGroup which belongs to ONE Partition. An OrderBook also reference a SubscriptionGroup. A SubscriptionGroup also belong to ONE partition. For the system to be consistent, the PartitionId in the OrderBookRuleGroup that the OrderBook belongs to MUST be the same as the PartitionId in the SubscriptionGroup that the OrderBook references.
15	orderBookRuleGroupId		String (192)	This field is required for lookups of OrderBookRuleGroup objects and is required to construct the cache and to make consistency checks of the cache
17	closingPrice		Long	Today's closing price for this orderbook, calculated and broadcast by the MatchingEngine. The closing price information is persisted by the Marketplace overnight. If not provided, it can default to zero.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

18	adjustedClosingPrice		Long	By default, the adjustedClosingPrice is set to the same value as the closingPrice published by the MatchingEngine. The adjustedClosingPrice may however be manually adjusted by a market assistant. The adjustedClosingPrice information is persisted by the Marketplace overnight. If not provided, it can default to zero.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

19	orderBookParameters		String (128)	A Reference to a common parameter block for orderbooks.
20	isRoutingOrderBook		Boolean	If set to true, this tradable instrument point to an orderbook that is managed by the smart order router.
21	routingOrderBookFlags		Integer	This attribute is used by the orderbook router.
22	tickSizeTableId		Integer	Key to the tick size table used by this orderBook. If no tickSizeTableId is defined for the orderbook, the tickSizeTable for the orderbook rule group will be used.
23	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
24	adaptiveMicroAuctionSettingsId		Integer	Key to the AdaptiveMicroAuctionSettings used by this orderBook. If no AdaptiveMicroAuctionSettings is defined for the orderbook, the AdaptiveMicroAuctionSettings for the orderbook rule group will be used.
25	combPriceType	required	Integer	Only applicable if the flag isCombinationBook is set. This parameter controls how a price in the combination book is interpreted: whether the price is a sum, an average or a quotient of the leg book prices.
Allowed values: see constant group CombPriceType

26	combTradeLegCalculationRule	required	Integer	Only applicable if the flag isCombinationBook is set. This parameter controls how prices are calculated in the leg books of a combination if two combination orders match.
Allowed values: see constant group CombTradeLegCalculationRule

501	value		Long	Index value.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

502	projectedValue		Long	Projected value during auction.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

503	high		Long	Highest index value for the current day.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

504	low		Long	Lowest index value for the current day.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

505	totalValue		Long	Total value for the current day.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

506	totalShares		Long	Total number of shares for current day.
507	delayClasses		String (256)	Key to the delay classes specified for this order book. If no delay classes are specified then this implies that this order book is not delayed.
508	openingValue		Long	Opening value.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

Message: OrderBookParameters

Message ID: 85

Type: Trading Data and Trading Rule Messages

Description: This object contains data that is shared between many Orderbooks. It referenced from the OrderBook object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	parameterSetId		String (128)	Defines the name for this parameter set.
8	isSystemDefault		Boolean	If set to true these parameters are used as system default when no other parameter set is found.
9	displayName		String (128)	Defines the name of this parameter set.
10	priceBandStaticProcentage		Long	Defines a percentage offset value for the Market Last Reference Price (MLRP) break price component. It is used for calculating the static price band limits. If set blank (default) or zero, the value is not used. 

Values representing percentage are stored as integers with the following interpretation: 
- 12.5% is stored as 0.125 in all TRADExpress' fields that represent a percentage. 
- Since TRADEpress uses a long where the value is always multiplied by the literal DIVISOR.INTEREST, the internal representation of 12.5% is 125000 as a long (64-bit) integer value.
11	priceBandStaticOffset		Long	Defines a fixed offset value (in price units) for the Market Last Reference Price (MLRP) break price component. It is used for calculating the static price band limits. If set blank (default) or zero, the value is not used. Default value is blank
12	priceBandDynamicProcentage		Long	Defines a percentage offset value for the Market Last Trade Price (MLTP) break price component. It is used for calculating the dynamic price band limits. If set blank (default) or zero, the value is not used 

Values representing percentage are stored as integers with the following interpretation: 
- 12.5% is stored as 0.125 in all TRADExpress' fields that represent a percentage. 
- Since TRADEpress uses a long where the value is always multiplied by the literal DIVISOR.INTEREST, the internal representation of 12.5% is 125000 as a long (64-bit) integer value.
13	priceBandDynamicOffset		Long	Defines a fixed offset value (in price units) for the Market Last Trade Price (MLTP) break price component. It is used for calculating the dynamic price band limits. If set blank (default) or zero, the value is not used
14	priceBandAlertProcentage		Long	Defines a percentage offset value for calculating the inner price band limits. Exceeding the inner price band limits will raise a break price warning. 

Values representing percentage are stored as integers with the following interpretation: 
- 12.5% is stored as 0.125 in all TRADExpress' fields that represent a percentage. 
- Since TRADEpress uses a long where the value is always multiplied by the literal DIVISOR.INTEREST, the internal representation of 12.5% is 125000 as a long (64-bit) integer value.
15	priceBandStaticRefreshInterval		Long	Defines the frequency of possible updates for MLRP during automatch. The time origin is the start-up time for the appointed ME and is expressed in ms. Default value is blank which is interpreted as 24 hours. If value is zero MLRP is updated for every complete order match. The first completed order automatch in each time slot will disseminate the matched price as the new reference price, in a separate broadcast immediately after the trade event.
18	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
501	secondaryPriceBandStaticProcentage		Long	Defines a percentage offset value for the Market Last Reference Price (MLRP) break price component. It is used for calculating the secondary static price band limits. If set blank (default) or zero, the value is not used.
502	secondaryPriceBandStaticOffset		Long	Defines a fixed offset value (in price units) for the Market Last Reference Price (MLRP) break price component. It is used for calculating the secondary static price band limits. If set blank (default) or zero, the value is not used. Default value is blank
Message: ArrayOrderBook

Message ID: 86

Type: Trading Data and Trading Rule Messages

Description: An array of orderbooks.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	data		OrderBook[]	Payload data. Note that all array elements contain action/state sequence number information identical to the ProteusRefDataMessage super object.
8	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: CombinationDefinitionLeg

Message ID: 87

Type: Trading Data and Trading Rule Messages

Description: A combination order book is described by the combination definition, which defines what a bid order with volume one in the combination order book means in the order books spanned by the combination. The combination definition is made up of two or more combination definition legs.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	legOrderBookId	required	Long	One of the order books spanned by the combination. This is the id of the leg, since an order book can only occur once in a combination definition.
8	legVolume		Integer	What volume an order with volume 1 in the combination book describes in this leg order book.
9	legIsBid		Boolean	What operation a bid order in the combination book describes in this leg order book.
10	orderBookId		Long	This is a redundant field, as it represents the same relation as the orderBook relation below. However, right now there must be two differently declared attributes, one for the auto generated cache and one for EMAPI.
11	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: ArrayCombinationDefinitionLeg

Message ID: 88

Type: Trading Data and Trading Rule Messages

Description: An array of combination definition legs.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	data		CombinationDefinitionLeg[]	Payload data. Note that all array elements contain action/state sequence number information identical to the ProteusRefDataMessage super object.
8	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: OrderBookRuleGroup

Message ID: 89

Type: Trading Data and Trading Rule Messages

Description: An OrderBookRuleGroup is an order book grouping that is used to define order processing rules common to all orderbooks within the group. Order books are also grouped into SubscriptionGroups for subscription purposes.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	orderBookRuleGroupId	required	String (192)	The business id of the OrderBookRuleGroup
8	partitionId		Integer	The matching engine partiton to which this OrderBookRulegroup belong.
9	serverPartitionRef		Integer	A reference to an entry in the ServerPartitionTable (a ServerPartition). Optional Use.
10	displayId	required	String (128)	The display id (human readable...) format for this orderbook rule group
11	externalReference		String (128)	The is an optional field that may be used by external reference data models as a "back reference" to the external object. If the Market Instrument Model is used, this field contains a reference to the Segment to which this OrderBookRuleGroup belong.
12	orderbooks		OrderBook[]	Specifies a set of children Order books The object type in this Set is OrderBook. Note that this set may be null or empty, since child objects may be distributed in separate broadcasts.
13	orderbookRoutingStrategies		OrderBookRoutingStrategy[]	Specifies a set of children OrderBook Routing Strategies. See OrderBookRoutingStrategy for details. The object type in this Set is OrderBookRoutingStrategy Note that this set may be null or empty, since child objects may be distributed in separate broadcasts.
14	tickSizeTableId	required	Integer	Key to the defautl tick size table used by this orderBookRuleGroup
15	usesReversedSorting		Boolean	If true then all orderbooks belonging to this order book rule group uses reversed sorting i.e. a lower bid price is more generous than a higher one.
16	doCreditLimitCheck		Boolean	If true, matching in the order books in this group will use credit limit checks as defined by the credit limit component.
17	timeOffSetUTC		Integer	Time offset to UTC time.
18	defaultSubscriptionGroup	required	Integer	In general when an operation on an order book rule group generates a broadcast, it is sent out an all subscription groups that are present in the order book rule group. An example of such an operation is a state change on order book rule group level. In addition the broadcast is sent out on the default subscriptions group if defined. This is for example useful if an order book rule group at time does not contain any order books and it is still required that the broadcast is sent out.
19	tradingScheduleId	required	Integer	Key to the trading schedule used by this orderBookRuleGroup
20	tempTradingScheduleId	required	Integer	Used when temporarily modifying the schedule during operations. The principle is that the temporary schedule is modified and when this is done the matcher is instructed to switch over to the temporary schedule.
21	halfDayTradingScheduleId	required	Integer	Key to trading schedule used during half days.
22	tempHalfDayTradingScheduleId	required	Integer	Key to temporary trading schedule used during half days.
23	closedDayTradingScheduleId	required	Integer	Key to schedule used during closed days.
24	tempClosedDayTradingScheduleId	required	Integer	Key to temporary trading schedule used during closed days.
25	tradeHaltTradingScheduleId		Integer	Key to trading schedule used when lifting a trade halt. NOTE!, a schedule used for trade halt purposes should if defined contains the desired state transitions and an extra dummy state which is never entered but is only used to define when one should return to the original state. Example: Prtr, THEndOfCycle .
27	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
28	orderBookVisibility		Long	Specifies type of visibility supported by orderbooks in this OrderBookRuleGroup. The default value is OrderBookVisibilityType.MIXED.
Allowed values: see constant group OrderBookVisibilityType

29	orderbookRuleGroupParameters		String (128)	A Reference to a common parameter block for OrderBookRuleGroups.
30	suppressOrderBookStateEvent		Boolean	If set to true state changes will not be disseminated for each orderbook. State is determined by the state of the OrderBookRuleGroup.
31	givePrioToOwnMember		Boolean	If true, then matching with own member/participant has priority over time. I.e. matching priority is price - own participant - time.
32	createOrderStrategy		String (255)	Trading strategy to use when creating orders. If this is not set, preDefined_createOrder will be used.
33	createOrderBookStrategy		String (255)	Trading strategy to use when creating order books. If this is not set, preDefined_obCreatorHandler will be used.
34	minVolumeRematchNrOfOrders		Integer	In markets that support orders with minimum volume conditions, we might get crossing prices in the match order book. If this parameter is larger than 0, the ME will try to do an uncross between the crossing orders. This parameter limits the number of orders on a side that may participate in the uncross.
35	minimumMatchQty		Long	The Matching Engine needs to know what the smallest matchable quantity is. All quantities are validated against this value, and this is also the value used when allocating trades.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

36	orderRouterTradingScheduleId	required	Integer	Default Key to the trading schedule used by the order router for this orderBookRuleGroup.
37	tempOrderRouterTradingScheduleId		Integer	Used when temporarily modifying the order router schedule during operations. The principle is that the temporary schedule is modified and when this is done the matcher is instructed to switch over to the temporary schedule.
38	calendarId		String (128)	This field makes it possible to reference a specific set of calendar dates that define open/half-day and closed dates. (see field calendarId in class DateCollection).
39	orderRouterHalfDayTradingScheduleId	required	Integer	Key to the trading schedule used by the order router during half days for this orderBookRuleGroup.
40	tempOrderRouterHalfDayTradingScheduleId		Integer	Used when temporarily modifying the schedule during operations. The principle is that the temporary schedule is modified and when this is done the order router is instructed to switch over to the temporary schedule.
41	orderRouterClosedDayTradingScheduleId	required	Integer	Key to the trading schedule used by the order router during closed days for this orderBookRuleGroup.
42	tempOrderRouterClosedDayTradingScheduleId		Integer	Used when temporarily modifying the schedule during operations. The principle is that the temporary schedule is modified and when this is done the order router is instructed to switch over to the temporary schedule.
43	adaptiveMicroAuctionSettingsId		Integer	Key to the AdaptiveMicroAuctionSettings used by this orderbook rule group.
Message: OrderBookRuleGroupParameters

Message ID: 90

Type: Trading Data and Trading Rule Messages

Description: This object contains data that is shared between many OrderbookRuleGroups. All attributes in OrderBookRuleGroupParameters have a corresponding attribute in the OrderBookRuleGroup object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	parameterSetId		String (128)	Defines the name for this parameter set.
8	isSystemDefault		Boolean	If set to true these parameters are used as system default when no other parameter set is found.
9	displayName		String (128)	Defines the name for this parameter set.
10	usesReversedSorting		Boolean	If true then all orderbooks belonging to orderbook rule groups referencing this parameter block uses reversed sorting i.e. a lower bid price is more generous than a higher one.
11	doCreditLimitCheck		Boolean	If true, matching in the order books belonging to orderbook rule groups referencing this parameter block will use credit limit checks as defined by the credit limit component.
12	timeOffSetUTC		Integer	Default time offset to the UTC time expressed in hours.
13	tradingScheduleId	required	Integer	Default Key to the trading schedule used by orderbook rule groups referencing this parameter block.
14	tempTradingScheduleId	required	Integer	Default Used when temporarily modifying the schedule during operations. The principle is that the temporary schedule is modified and when this is done the matcher is instructed to switch over to the temporary schedule.
15	halfDayTradingScheduleId	required	Integer	Default Key to trading schedule used during half days.
16	tempHalfDayTradingScheduleId	required	Integer	Default Key to temporary trading schedule used during half days.
17	closedDayTradingScheduleId	required	Integer	Default Key to schedule used during closed days.
18	tempClosedDayTradingScheduleId	required	Integer	Default Key to temporary trading schedule used during closed days.
19	tradeHaltTradingScheduleId		Integer	Default Key to trading schedule used when lifting a trade halt. NOTE!, a schedule used for trade halt purposes should if defined contains the desired state transitions and an extra dummy state which is never entered but is only used to define when one should return to the original state. Example: Prtr, THEndOfCycle .
20	givePrioToOwnMember		Boolean	If true, then matching with own participant has priority over time. I.e. matching priority is price - own participant - time.
21	createOrderStrategy		String (255)	Trading strategy to use when creating orders. If this is not set, preDefined_createOrder will be used.
22	createOrderBookStrategy		String (255)	Trading strategy to use when creating order books. If this is not set, preDefined_obCreatorHandler will be used.
23	minVolumeRematchNrOfOrders		Integer	In markets that support orders with minimum volume conditions, we might get crossing prices in the match order book. If this parameter is larger than 0, the ME will try to do an uncross between the crossing orders. This parameter limits the number of orders on a side that may participate in the uncross.
24	minimumMatchQty		Long	The Matching Engine needs to know what the smallest matchable quantity is. All quantities are validated against this value, and this is also the value used when allocating trades.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

27	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
28	orderRouterTradingScheduleId	required	Integer	Default Key to the trading schedule used by the order router for this orderBookRuleGroup.
29	tempOrderRouterTradingScheduleId		Integer	Used when temporarily modifying the prder router schedule during operations. The principle is that the temporary schedule is modified and when this is done the matcher is instructed to switch over to the temporary schedule.
30	calendarId		String (128)	This field makes it possible to reference a specific set of calendar dates (see field calendarId in class DateCollection).
31	suppressOrderBookStateEvent		Boolean	If set to true state changes will not be disseminated for each orderbook. State is determined by the state of the OrderBookRuleGroup.
32	orderRouterHalfDayTradingScheduleId	required	Integer	Default Key to the trading schedule used by the order router during half days for this orderBookRuleGroup.
33	tempOrderRouterHalfDayTradingScheduleId		Integer	Default Used when temporarily modifying the schedule during operations. The principle is that the temporary schedule is modified and when this is done the order router is instructed to switch over to the temporary schedule.
34	orderRouterClosedDayTradingScheduleId	required	Integer	Default Key to the trading schedule used by the order router during closed days for this orderBookRuleGroup.
35	tempOrderRouterClosedDayTradingScheduleId		Integer	Default used when temporarily modifying the schedule during operations. The principle is that the temporary schedule is modified and when this is done the order router is instructed to switch over to the temporary schedule.
501	defaultTradingScheduleId	required	Integer	If tradingSchedule or tempTradingSchedule has different settings from the default schedule, the system should replace tradingSchedule and tempTradingSchedule with the setting from the defaultSchedule.
502	defaultHalfDayTradingScheduleId	required	Integer	If halfDayTradingSchedule or tempHalfDayTradingSchedule has different settings from the default schedule, the system should replace halfDayTradingSchedule and tempHalfDayTradingSchedule with the setting from the defaultHalfDaySchedule.
Message: ArrayOrderBookRuleGroup

Message ID: 91

Type: Trading Data and Trading Rule Messages

Description: An array of orderbook rule groups.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	data		OrderBookRuleGroup[]	Payload data. Note that all array elements contain action/state sequence number information identical to the ProteusRefDataMessage super object.
8	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: OrderBookRoutingStrategy

Message ID: 92

Type: Trading Data and Trading Rule Messages

Description: Overrides the default strategy mapping provided by the MeStrategySwitch component. The default mapping provided by this component is to map a service id "orderInsert" to a strategy with the same name. One overrides this by specifying an alternative strategy name per order book rule group.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	serviceId		String (64)	This is the service method name, e.g. "orderInsert", that is to use an alternative mapping.
8	strategyId		String (128)	The name of the alternative strategy.
9	orderBookRuleGroupId		String (192)	This field is required for lookups of OrderBookRuleGroup objects and is required to construct the cache and to make consistency checks of the cache
10	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: TickSizeTable

Message ID: 93

Type: Trading Data and Trading Rule Messages

Description: The TickSizeTable defines a set of rules, TickSizeTableRow, that defines the price tick for the specified entity.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	tickSizeTableId	required	Integer	The system identity of this tick size table
8	displayName	required	String (128)	Display name of this tick size table. "EUR Equity" for example
9	isDefault		Boolean	Set to true if this is the default ticksize table. N.B. Only ONE ticksize table should be default
10	rows		TickSizeTableRow[]	Specifies a set of children TickSizeTableRows, which make up the actual table. Note that this set may be null or empty, since child objects may be distributed in separate broadcasts.
11	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: TickSizeTableRow

Message ID: 94

Type: Trading Data and Trading Rule Messages

Description: Defines the allowed price tick within the limits defined in "this" TickSizeTableRow.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	lowerLimit	required	Long	The lower price limit for this tick size table row
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

8	tick	required	Long	A tick specifies the minimum price variation for a displayed order or quote price.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

9	tickSizeTableId		Integer	This field is required for lookups of TickSizeTable objects and is required to construct the cache and to make consistency checks of the cache
10	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
11	fractionalTick		Long	The offset tick specifies the minimum price variation for an offset such as peg offset or discretionary offset. The offset tick is usually a fraction of the tick.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

12	tradeTick		Long	The trade tick specifies the minimum price variation for a trade price for an offset such as peg offset or discretionary offset. The trade tick is usually a fraction of the tick.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

Message: Currency

Message ID: 95

Type: Trading Data and Trading Rule Messages

Description: This object represent a Currency.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	currencyId	required	String (3)	The standard currency id according to ISO 4217. SEK, USD, GPB etc
8	longName		String (64)	The full name of the currency. Svenska kronor, for example.
9	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: SubscriptionGroup

Message ID: 96

Type: Trading Data and Trading Rule Messages

Description: The order book grouping that is used for subscriptions. An OrderBook belongs to an OrderBookRuleGroup which belongs to ONE Partition. An OrderBook also reference a SubscriptionGroup. A SubscriptionGroup also belong to ONE partition. For the system to be consistent, the PartitionId in the OrderBookRuleGroup that the OrderBook belongs to MUST be the same as the PartitionId in the SubscriptionGroup that the OrderBook references.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	subscriptionGroupId	required	Integer	The business id of the subscription group.
8	description	required	String (255)	A text description of the set of order books contained in the group.
9	partitionId	required	Integer	The partition this subscription group belong to.
10	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
11	allowPublicOrderSubscription		Boolean	In some subscription groups, it is not possible to set up subscriptions for public order events. This flag states whether subscription is allowed or not.
Message: TradingSchedule

Message ID: 97

Type: Trading Data and Trading Rule Messages

Description: The TradingSchedule defines a set of events that is periodically applied to the OrderBookRuleGroup connected to "this" TradingSchedule. There are typically different TradingSchedules for Normal, Half-Day and Closed. When all events defined in a TradingSchedule have been applied, the schedule wraps and (re)start with the first defined event.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	tradingScheduleId	required	Integer	The id of the TradingSchedule.
8	startOfSchedule	required	String (64)	Must be in the format HH:MM:SS. Note that if this is a schedule used for trade halt lift operations then this field is ignored since start of schedule is then defined as the time of initiation of the trade halt lift operation.
9	displayName	required	String (128)	The display name of this schedule. "Ordinary market hours", for example
10	isDefault		Boolean	Set to true if this is the default schedule. N.B. Only ONE schedule should be default
11	events		StateTransition[]	Specifies the set of events that this schedule consists of. Typically PreOpen. Open, Closed etc. The object type of event is StateTransition. Note that this set may be null or empty, since child objects may be distributed in separate broadcasts.
12	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: StateTransition

Message ID: 98

Type: Trading Data and Trading Rule Messages

Description: This object represents an event in a trading schedule.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	time	required	Long	The time for the event expressed in milliseconds relative the start of the schedule. This field is used to sort the state transitions.
8	name	required	String (64)	Name of state. NOTE!, the name of the state is used to find the relevant processing sequence. This implies for example that trade halt relates states should have their own names since. The suggested convention to use is: StateName, TH_StateName. Trade halt related processing sequences only contains one item, see the description for the processing sequence reference data object.
9	tradingScheduleId		Integer	This field is required for lookups of TradingSchedule objects and is required to construct the cache and to make consistency checks of the cache. Automatically filled by the server, if null.
10	supportAutomaticMatching		Boolean	Indicates whether orders/quotes are to be matched on a continuous basis or not
11	showTrades		Boolean	Controls whether trades are sent out the public flow or not
12	showTBL		Boolean	Controls whether trades aggregated per price level are sent out or not.
13	showMBL		Integer	Controls the number Market-By-Level (MBL) levels that are sent out. The field is set to the number of MBL levels that should be sent out. A value of zero means that no MBL levels are sent out. An MBL level is an aggregation of all volume on a certain price level.
14	aggMBLToEqPrice		Boolean	Controls whether MBL levels that are better than the current equilibrium price level are aggregated to the equilibrium price level or not.
15	showOrders		Boolean	Controls whether orders are sent out the public flow or not
16	showTradeCounterParty		Boolean	Controls whether trades on the public flow have the counterparty filled in or not
17	showOrderCounterParty		Boolean	Controls whether orders on the public flow have the counterparty filled in or not
18	showTradeCounterpartyOnPrivateFlow		Boolean	Controls whether trades on the private flow have the counterparty filled in or not
19	deleteExpiredOrders		Boolean	Expiring long orders and day orders are removed when this state is entered if this field is set to true
20	saveLongOrders		Boolean	Long orders that are to survive this trading cycle is saved to persistent storage when entering this state if this field is set to true.
21	restoreLongOrders		Boolean	Long orders that have been received are restored when this state is entered i.e. they become available for matching and maintenance.
22	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
23	allowedRequestsGroupId		Integer	Key to the allowed requests group used by this state transition. If no allowed request group id is specified then this implies that all requests are allowed.
24	isAuctionState		Boolean	Set to true to have this state end with an uncross. A non-automatch state followed by an automatch state will always end with an uncross. This flag needs to be used when a non-automatch state followed by another non-automatch state needs to end with an uncross.
25	saveOrderBookData		Boolean	If this field is set to true, save trade halt parameters if trade halted, and possibly other orderbook data that needs to be stored.
26	displayName		String (255)	Display name for this state. This is purely informational and can be set to anything. If not set, name should be used instead.
27	showAuctionEvents		Boolean	Controls whether auction events are sent out or not.
28	applyPriceBand		Boolean	Controls whether price band rules are applied or not.
29	publishMBLOnMBLFlow		Boolean	If this flag is true and the showMBL parameter is larger than 0, then Market-by-level events will be published on the Market-by-Level broadcast flow.
30	publishMBLOnPOBEFlow		Boolean	If this flag is true and the showMBL parameter is larger than 0, then Market-by-level events will be published on the Public Orderbook Event broadcast flow.
31	saveClosingPrices		Boolean	If this field is set to true, save the last auction price as the closing price.
32	processingSequenceId		Integer	This field hold a reference to a processing sequence, if defined. Note that this field may be null.
33	mblDisseminationInterval		Integer	The interval at which the ME will disseminate MarketByLevel events. The time unit is microseconds.
34	applyTradingProtectionLimits		Boolean	Indicates whether trading protection limits (if defined globally or on member level) should be taken into account in this trading state.
35	indexDisseminationInterval		Integer	The interval that the Index Engine will disseminate index events (for the index:es which values have been changed). If not set the Index Engine will disseminate index events whenever an index' value has changed. The unit is micro seconds.
36	indexStatisticsDisseminationInterval		Integer	The interval that the Index Engine will include index statistics in index events (for the index:es which statistics have been changed). N.B. The publishing is done when this interval has passed but is triggered by the publishing of the index value (see indexDisseminationInterval). The unit is micro seconds.
501	allowedOrderTypesId		String (256)	Key to the allowed order types group used by this state transition. If no allowed order types group id is specified then this implies that all order types are allowed.
502	tradeReportTypesId		String (256)	Key to the allowed trade report types used by this state transition. If no trade report id is specified then this implies that no trade reports are allowed.
503	sendTradeStatistics		Boolean	Send trade statistics when entering this state if this field is set to true.
504	randomizedStartParameter		String (256)	Specifies the randomized start parameter to use for this state transition.
505	circuitBreakerTrigger		Boolean	When this flag is set to false, no circuit breaker will be triggered (the same for order book circuit breaker and index circuit breaker).
506	resetTradeStatistics		Boolean	If true, reset the trade statistic of today.
507	restoreTradeStatistics		Boolean	If true, restore trade statistics.
508	saveTradeStatistics		Boolean	If true, save trade statistics to be used next day.
509	saveTemporaryClosingPrice		Boolean	If true, save temporaryClosingPrice so the new price could be used at At-The-Money price without affecting CA.
510	changePriceBandToDefault		Boolean	If true, change back to defaultPriceBand and also calculate new TRIGGERING month.
511	keepExpiredValidityOrders		Boolean	If true, expiring order with validity conditions should not be cancelled.
512	cancelOrdersAffectedByCA		Boolean	If true, and the TI has flag cancelOrdersAffectedByCA set to true, all orders and quotes will be cancelled.
Message: ProcessingSequence

Message ID: 99

Type: Trading Data and Trading Rule Messages

Description: A processing sequence defines the sequence in which order books are processed when a trading schedule changes state. The purpose of the processing sequence is to spread out the state changes of the order books over time. First the order book rule group using the trading scheule changes state and after that the individual order books starts changing state. The order and delay with which this is done is defined by the processing sequence. If the processing does not contain all order book id:s of the order book rule group or no processing sequence at all is defined default rules is applies. If the processing sequence refers to a state used in trade halt lift schedule then it should only contain one ProcessingSequenceOrderBookId item (since the ob id is implicitly defined by the orderbook which is the target of the trade halt operation)

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
8	orderBookIdentifiers		ProcessingSequenceOrderBookId[]	Identifiers of all order books contained in this sequence. If an OrderBookRuleGroup that references the parent state transition contains more OrderBooks than ProcessingSequenceOrderBookId children the exceeding OrderBooks are handled AFTER all ProcessingSequenceOrderBookId children. Note that this set may be null or empty, since child objects may be distributed in separate broadcasts.
10	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
11	randomOrderSpreadOutTime		Long	Instead of specifying a specific order book sequence, set this attribute to use a random order when performing state changes within this OrderBookRuleGroup. The time unit is milliseconds.
12	extRef		String (192)	A reference to an external entity. Used internally by the system
13	processingSequenceId		Integer	The (internal) identity of this processing sequence. Not to be interpreted in any way. This id is referenced from one or more StateTrtansition objects.
14	displayName	required	String (255)	The descriptive name of this processing sequence. Note that one processing sequence may be referenced from more than one TradingSchedule/StateTransition, so choose name accordingly.
Message: ProcessingSequenceOrderBookId

Message ID: 100

Type: Trading Data and Trading Rule Messages

Description: Defines rules on how to handle a StateTransition for an individual OrderBook (referenced by this ProcessingSequenceOrderBookId). State change delays, state change order etc are defined here.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	orderBookId	required	Long	The business id of an order book. If this is processing sequence is used as part of a trade halt lifting schedule then this field can be set to any valid order book since it is ignored anyway. This is due to the fact that the order book is in this case defined by the order book that is the target of the trade halt operation.
8	delayTime		Long	Time spent entering this state. The time unit is milliseconds.
9	maxRandomizeTime		Long	Maximum randomizing time. The time unit is milliseconds.
10	sortNumber		Integer	Defines the processing order for the referenced orderbook within the OrderBookRuleGroup
12	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
13	extRef		String (192)	A reference to an external entity. Used internally by the system
15	parentId		Integer	This is the id of the parent processingSequence.
Message: AllowedRequestsGroup

Message ID: 122

Type: Trading Data and Trading Rule Messages

Description: This object represents a group of allowed transactions in a state transition. This is a way to limit the available server requests in a given state. - If no AllowedRequestsGroup is defined, ALL requests are allowed. - If an AllowedRequestsGroup is defined, but no AllowedRequestsGroupRow are defined, NO requests are allowed. AllowedRequestsGroup is referenced "byId" from StateTransition within a TradingSchedule.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	allowedRequestsGroupId	required	Integer	The id of this request group
8	displayName		String (128)	The full display name of the AllowedRequestsGroup
9	rows		AllowedRequestsGroupRow[]	Specifies a set of children AllowedRequestsGroupRow, which make up the actual table of allowed reqests. If no rows are defined this implies that no request are allowed. Note that this set may be null or empty, since child objects may be distributed in separate broadcasts.
10	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: AllowedRequestsGroupRow

Message ID: 123

Type: Trading Data and Trading Rule Messages

Description: This object holds a specification of one allowed request within an AllowedRequestsGroup.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	request	required	String (64)	Specifies the request which is allowed as a service id i.e. the name of the service method i.e. "orderInsert".
8	allowedRequestsGroupId		Integer	This field is required for lookups of AllowedRequestsGroup objects and is required to construct the cache and to make consistency checks of the cache
9	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: ExternalMarket

Message ID: 262

Type: Trading Data and Trading Rule Messages

Description: This class represents an external market, such as an exchange or a multilateral trading facility.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	marketId	required	String (64)	This is the internal id of the market. This is a unique identifier.
8	displayName	required	String (255)	The display name of this external market
9	wwwPage		String (255)	The the home page for this external market
10	isOwnMarket		Boolean	Used to determine if this is our own market. Used by Market Data Consolidator, Smart Order Router to calculate BBO different version of BBOs.
11	outgoingDataEnabled		Boolean	If set to true, we are allowed to send data to this market.
12	incomingDataEnabled		Boolean	If det to true, we are allowed to receive data from this market.
13	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: ScheduledCorporateAction

Message ID: 459

Type: Trading Data and Trading Rule Messages

Description: This object contains a name (like "Split 1:2") and a date on which to perform thte effects. The action taken on the tradable instruments and positions in the the affected instruments is defined only in the child objects CorporateActionnEffect. There is one such object stored for every instrument type that should be afdfected, and the data object itself is defined in an instrument plug-in. Hence, the CD has to store this as a blob, as the objects are not known at the time when the database tables are created.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
8	scheduledCorporateActionId	required	String (64)	Cache identification of this scheduled corporate action
9	displayName	required	String (255)	The display name/description for this scheduled corporate action
13	isTriggered		Boolean	Flag that indicates if this corporate action has been triggered.
15	instrumentInternalId		String (192)	The internal id of the instrument (a stock) and all its descendants that this scheduled corporate action applies to.
16	corporateActionType	required	Integer	The type of corporate action to be applied. One of Split, Inversed Split, Merger, new Issue, Bounus Issue or Dividend.
Allowed values: see constant group CorporateActionType

17	effectiveDate		String (32)	The date when actions shall be applied to the instrument(s) in the system. The "date-rule" is, effectiveDate must be greater or equal to todays date and effectiveDate must be greater or equal to marketDate. Format yyyy-mm-dd.
18	marketDate	required	String (32)	The date (x-date) when actions have been taken into account by the market, i.e. when the instrument(s) are traded without corporate action rights. The "date-rule" is, effectiveDate must be greater or equal to todays date and effectiveDate must be greater or equal to marketDate. Format yyyy-mm-dd.
19	effectsTE		CorporateActionEffectTE[]	Specifies a set of child corporate action effects.
20	effectiveTime		String (14)	The time-of-day of the effectiveDate when this action will be applied. Format HH:MM:SS.sss
21	synchronizeWithClosing		Boolean	Flag that indicates if this corporate action need to synchronize with the closing of the trading system (for closing prices and long orders) before it can be applied. If this flag is set, the corporate action will not be triggered until both the effectiveTime AND the closing of the trading system has occured.
22	issuedBy		String (255)	This is the ownerData field of the incoming transaction. Saved to keep track of who did what.
23	appliedWhen		String (24)	Time when an update has/will be applied. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
25	messageStatus		String (24)	The status of the scheduled update.
Allowed values: see constant group OperationStatus

26	resultingTapStatusCode		Integer	The tap status code for from the transaction when this update has been applied.
27	resultingTapStatusMessage		String (1024)	TThe tap status message for from the transaction when this update has been applied.
501	expiryDate		String	Expiry date. Format yyyy-MM-dd.
502	adjustmentDate		String	If the corporate action is to be postponed, adjustment date tell the new expiryDate. Format yyyy-MM-dd.
503	indexId		Long	The id of the instrument. This scheduled corporate action applies to this instrument and all its descendants.
504	sign		String	Sign to communicate for this corporate action.
576	corporateActionData		CorporateActionData	Extended attributes for the instrument depending on instrument type.
578	segmentId		String	The segment to update.
579	entryDate		String	Date when the corporate action was entered. Format yyyy-MM-dd.
582	entryMarket		Integer	Specifies for which market the CA should be applied (EQUITY, DERIVATE or BOTH).
Allowed values: see constant group CaMarketType

583	affectedMarket		Integer	Specifies for which market this specific CA will be applied (EQUITY or DERIVATE).
Allowed values: see constant group CaMarketType

Message: CorporateActionEffectTE

Message ID: 486

Type: Trading Data and Trading Rule Messages

Description: This is a child of a ScheduledCorporateAction object. There is one corporate action effect for each instrument type. Only used in Trading System.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
8	corpActnEfctId	required	String (64)	The identification of this corporatte action effect
9	schedCorpActId		String	This field is required for lookups of ScheduledCorporateAction objects and is required to construct the cache and to make consistency checks of the cache. Automatically filled by the server, if null.
10	orderBookId	required	Long	The orderbook affected by this corporate action effect.
11	factor	required	Long	The corporate action factor used for e.g. a stock split.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

12	noteCode		String (64)	A note code that informs clients about the nature of this corporate action.
13	flushOrderbook	required	Boolean	Set to true if the Matching Engine should flush the orderbook as a result of this coporate action.
14	amount		Long	In case of a dividend, this is the amount to be applied.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

15	priorityOrder		Integer	In case of several corporate actions based on the same undelying instrument, this is the priority order that the corporate action effect(s) will be applied.
508	corporateActionEffectData		CorporateActionEffectData	Extended attributes for the instrument depending on instrument type.
Message: IndexComposition

Message ID: 488

Type: Trading Data and Trading Rule Messages

Description: The IndexComposition, and its child objects IndexCompositionElement, defines the contents of an index i.e. which instruments that constitutes the index, and the basic parameters needed for index calculation. The IndexComposition object contain a reference to the orderbook that represent the index instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
8	indexCompositionId		Long	The system identity of this index composition. Assigned by the system when the index composition object is created. This field is optional when adding an IndexComposition, but is required for update/remove operations.
9	orderbookReference	required	Long	A reference to the orderbook that represent the actual index.
10	externalReference		String (192)	An optional reference to an external entity if needed.
11	displayName		String (128)	Display name of this index composition.
13	baseMarketValue		BigInteger	The average market price for the securities that are included in this index at a specific time.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

14	adjustedBaseMarketValue		BigInteger	The adjusted value of the base market value (optional).
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

15	startValue		Long	The the initial value for this index.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

16	startDate		String (12)	The the start date for this index. Format yyyy-mm-dd.
18	calculationMethod		String (255)	The calculation method name used for this index (PriceIndex for example).
19	indexCompositionElements		IndexCompositionElement[]	Specifies a set of children IndexCompositionElement, which make up the actual table. Note that this set may be null or empty, since child objects may be distributed in separate broadcasts.
501	fxRate		Long	FX rate.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

502	taxRate		Long	Tax rate.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

503	totalReturnMultiplier		Long	Total return multiplier.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

504	totalReturnDivisor		Long	Total return divisor.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

505	divisor1		Long	Divisor 1.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

506	divisor2		Long	Divisor 2.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

507	divisor3		Long	Divisor 3.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

508	divisor4		Long	Divisor 4.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

509	divisor5		Long	Divisor 5.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

510	currentMarketValue		BigInteger	Packing a BigInteger as a blob
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

511	currentMarketValueToday		BigInteger	Packing a BigInteger as a blob
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

512	indexBaseValue		Long	Base value of the index.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

Message: IndexCompositionElement

Message ID: 489

Type: Trading Data and Trading Rule Messages

Description: Defines the contribution of one tradable instrument to the index defined by the parent IndexComposition object. The tradable instrument is referenced by its orderbook from this object using the attribute orderbookReference.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
8	indexCompositionElementId		String (255)	The internal index composition element id. Used by the system. This field is optional when adding an IndexCompositionElement, but is required for update/remove operations.
9	orderbookReference	required	Long	A reference to the orderbook representing this index constituent.
10	indexCompositionId	required	Long	This field is required for lookups of the parent IndexComposition object and is required to construct the cache and to make consistency checks of the cache. Automatically filled by the server, if null.
11	freeFloatFactor		Long	This is the free floating factor, i.e the percentage of the total number of shares that is publicly available and that contributes to the index value.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

12	totalNumberOfShares		Long	This is the total number of shares issued in this tradable instrument.
14	weightInIndex		Long	If the contribution of this tradable instrument to the index is limited, this is the weight in the index for this tradable instrument.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

Message: IndexPlugin

Message ID: 501

Type: Trading Data and Trading Rule Messages

Description: Contain the configured index plugins.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
8	indexPluginId		Long	The system identity of this index plugin. Assigned by the system when the index composition object is created. This field is optional when adding an IndexComposition, but is required for update/remove operations.
9	pluginName	required	String (128)	The name of this plugin
10	className		String (256)	The class
Message: CorporateActionData

Message ID: 1501

Type: Trading Data and Trading Rule Messages

Description: Extended information for the instrument depending on instrument type.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	oldIndexCompositionData		CaIndexComposition	Reference data for index composition to be updated.
2	oldInstrumentData		CaInstrument	Reference data for instrument to be updated.
3	indexCompositionData		CaIndexComposition	Reference data for index composition to be updated.
4	instrumentData		CaInstrument	Reference data for instrument to be updated.
5	parameters		CaParameters	Reference data for instrument to be updated.
6	status		CaStatus	Status information of the CA.
7	segmentData		CaSegment	Reference data for segment to be updated.
8	oldSegmentData		CaSegment	Reference data for segment to be updated.
Message: CaSegment

Message ID: 1543

Type: Trading Data and Trading Rule Messages

Description: Specific CA attributes.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	compositeIndexId		Long	The default index used for this segment. If the indexCalculation attribute is set for the tradable instrument then it is included in the index.
2	industrySectorIndexFlag		Boolean	Indicate if the taradable instruments within this segment is to be part of industry, sector and subsector indexes.
Message: CaStatus

Message ID: 1502

Type: Trading Data and Trading Rule Messages

Description: This is information of index.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	status		String	Status of the corporate action.
2	reasonForRemove		String	The reason for remove of the corporate action.
Message: CaInstrument

Message ID: 1503

Type: Trading Data and Trading Rule Messages

Description: This is index parameters on stock instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	parValue		Long	Par Value
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

2	sector		String	sector for the instrument
3	adjustedShare		Long	Adjusted share.
4	adjustedIndexShares		Long	The change of number of index shares
5	dividendYield		Long	Dividend yield.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

6	totalReturn		Long	Total return.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

7	netReturn		Long	Net return.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

8	sustainabilityScore		Long	Sustainability score.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

9	pureStyleScore		Long	Pure style score.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

10	cgScore		Long	CG score.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

11	carbonScore		Long	Carbon score.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

12	freeFloat		Long	The free float factor is the percentage of shares remaining after the block ownership and restricted shares are subtracted from the total number of shares.
Values representing percentage are stored as integers with the following interpretation: 
- 12.5% is stored as 0.125 in all TRADExpress' fields that represent a percentage. 
- Since TRADEpress uses a long where the value is always multiplied by the literal DIVISOR.INTEREST, the internal representation of 12.5% is 125000 as a long (64-bit) integer value.

13	investableWeightFactor		Long	If the contribution of this instrument to the index is limited, this is weight in the index for this instrument.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

14	adjustmentFactor1		Long	Adjustment factor 1.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

15	adjustmentFactor2		Long	Adjustment factor 2.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

16	adjustmentFactor3		Long	Adjustment factor 3.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

17	adjustmentFactor4		Long	Adjustment factor 4.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

18	adjustmentFactor5		Long	Adjustment factor 5.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

19	shortName		String	Short name of the instrument
20	name		String	name of the instrument
23	exerciseRatio		Long	Exercise ratio
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

Message: CaIndexComposition

Message ID: 1504

Type: Trading Data and Trading Rule Messages

Description: This is information of index.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	fxRate		Long	FX rate.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

2	taxRate		Long	Tax rate.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

3	totalReturnMultiplier		Long	Total return multiplier.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

4	totalReturnDivisor		Long	Total return divisor.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

5	divisor1		Long	Divisor 1.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

6	divisor2		Long	Divisor 2.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

7	divisor3		Long	Divisor 3.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

8	divisor4		Long	Divisor 4.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

9	divisor5		Long	Divisor 5.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

10	calculationMethod		String	Calculation method used by this index.
11	indexBaseValue		Long	Base value of the index.
Message: CorporateActionEffectData

Message ID: 1505

Type: Trading Data and Trading Rule Messages

Description: Extended information for the instrument depending on instrument type.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	tradableInstrumentData		CaTradableInstrument	Reference data for instrument to be updated.
2	indexCompositionElementData		CaIndexCompositionElement	Reference data for instrument to be updated.
3	oldTradableInstrumentData		CaTradableInstrument	Reference data for instrument to be updated.
4	oldIndexCompositionElementData		CaIndexCompositionElement	Reference data for instrument to be updated.
Message: CaTradableInstrument

Message ID: 1506

Type: Trading Data and Trading Rule Messages

Description: Specific CA attributes.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	segmentId		String	Segment
2	newListFlag		Boolean	New list flag
3	closingPrice		Long	Closing price
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

4	adjustedClosingPrice		Long	Adjusted closing price
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

5	newListStockFlag		Boolean	The flag is applied by the CA on the first trading day of a security. The flag will be cleared by the system at end of first trading day regardless of trade or not.
6	cmvAdjusted		Long	CMV adjusted only handled by the EOD-plugin.
Message: CaParameters

Message ID: 1507

Type: Trading Data and Trading Rule Messages

Description: Specific corporate action parameters.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
2	offeringPrice		Long	Offering price
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

3	exercisePrice		Long	Exercise price
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

4	ratioIn		Long	Ratio in
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

5	ratioOut		Long	Ratio out
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

6	exerciseRatioIn		Long	Exercise ratio in
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

7	exerciseRatioOut		Long	Exercise ration out
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

9	dateForInitialAdjustmentOfIndexShares		String	Effective date of these parameters
10	initialAdjustmentOfIndexShares		Long	Adjustment of index shares price
11	dateForDecreaseOfIndexShares		String	Effective date of these parameters
12	decreaseOfIndexShares		Long	Adjustment of index shares price
13	dividend		Long	The dividend
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

14	capitalReturnAmount		Long	Offering price
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

17	adjustmentFactor		Long	Adjustment factor that should be used when performing CA. Could affect conctractSize, referencePrice
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL_SEVEN.

18	extraDividend		Long	Extra dividend
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

19	adjustmentType		Integer	If CONTRACT_SIZE is set, the CA will set both contract size and the price quotation factor If OPEN_POSITION is set, CA will affect only the reference price.
Allowed values: see constant group AdjustmentType

24	strikePriceAdjustment		CaAdjustmentFactor	Strike price adjustment
25	contractSizeAdjustment		CaAdjustmentFactor	Contract size adjustment
26	priceQuotationFactorAdjustment		CaAdjustmentFactor	Price Quotation Factor adjustment
27	referencePriceAdjustment		CaAdjustmentFactor	Reference price adjustment
Message: CaIndexCompositionElement

Message ID: 1508

Type: Trading Data and Trading Rule Messages

Description: Specific CA attributes.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	adjustmentFactor		Long	Adjustment factor
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

2	weightInIndex		Long	Weight in index
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

Message: CaAdjustmentFactor

Message ID: 1644

Type: Trading Data and Trading Rule Messages

Description: CA adjustment factor used for Manual update of Adjustment Factor.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	adjustmentFactor		Long	Adjustment factor to apply.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL_SEVEN.

2	operator		String	Operator to use when applying adjustment factor.
Allowed values: see constant group CaAdjustmentOperator

Message: UpdateIndexPlugInDataReq

Message ID: 1563

Type: Trading Data and Trading Rule Messages

Description: Contains data to be updated from index eod plugin.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	indexCompositionPluginData	required	IndexCompositionPluginData[]	Data to update for one index composition.
2	tradableInstrumentPluginData	required	TradableInstrumentPluginData[]	Data to update for one tradable instrument.
3	instrumentPluginData	required	InstrumentPluginData[]	Data to update for one instrument.
4	corporateActionPluginData	required	CorporateActionPluginData[]	Data to update for one corporate action.
17	possDup		boolean	The possible duplicate flag
18	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
19	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
20	member		String (64)	The member of the user.
21	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
This request will normally return a response of type .

Message: IndexCompositionPluginData

Message ID: 1564

Type: Trading Data and Trading Rule Messages

Description: Contains data to be updated from index eod plugin.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	indexCompositionId	required	long	The id of the index composition.
2	baseMarketValue	required	BigInteger	Base market value.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

3	currentMarketValueToday	required	BigInteger	Adjusted base market value.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

4	currentMarketValue	required	BigInteger	Current market value.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

5	indexCompositionElementPluginData	required	IndexCompositionElementPluginData[]	Data to update for one index composition.
Message: IndexCompositionElementPluginData

Message ID: 1619

Type: Trading Data and Trading Rule Messages

Description: Contains data to be updated from index eod plugin.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	indexCompositionElementId	required	String	The id of the index composition element.
2	weightInIndex	required	long	Weight in index.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

Message: TradableInstrumentPluginData

Message ID: 1565

Type: Trading Data and Trading Rule Messages

Description: Contains data to be updated from index eod plugin.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	orderBookId	required	long	The id of the orderbook for the tradable instrument.
2	cmvAdjustedSplit	required	Long	Current market value adjusted split.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DIVISOR.DECIMAL.

3	cmvAdjusted	required	Long	Current market value adjusted.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DIVISOR.DECIMAL.

4	cmvFirstTimeAdjusted	required	Boolean	Current market value first time of adjustment.
5	variable1	required	Long	Variable 1.
6	variable2	required	Long	Variable 2.
7	variable3	required	Long	Variable 3.
8	variable4	required	Long	Variable 4.
9	variable5	required	Long	Variable 5.
Message: InstrumentPluginData

Message ID: 1566

Type: Trading Data and Trading Rule Messages

Description: Contains data to be updated from index eod plugin.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	internalInstrumentId	required	String	Data to update for one index composition.
3	totalAdjustedNoOfIndexShares	required	Long	Current no shares adjusted.
Message: CorporateActionPluginData

Message ID: 1623

Type: Trading Data and Trading Rule Messages

Description: Contains data to be updated from index eod plugin.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	scheduledCorporateActionId	required	String	The Id of the scheduledCorporateAction.
2	cmvAdjusted	required	Long	CMV adjusted.
3	orderbookId	required	Long	The Id of the orderbook to change cmvAdjusted for.
Message: AllowedOrderTypes

Message ID: 1537

Type: Trading Data and Trading Rule Messages

Description: Definition of allowed ordertypes and flags

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
8	name	required	String (256)	The name of the AllowedOrderTypes
9	marketOrder		String (256)	A comma separated list of allowed-valid-till condition (specified by AllowedValidTill) for market order, if none is specified market order should be rejected
10	marketToLimitOrder		String (256)	A comma separated list of allowed-valid-till condition (specified by AllowedValidTill) for market-to-limit order, if none is specified market-to-limit order should be rejected
11	limitOrder		String (256)	A comma separated list of allowed-valid-till condition (specified by AllowedValidTill) for limit order, if none is specified limit order should be rejected
12	icebergOrder		String (256)	A comma separated list of allowed-valid-till condition (specified by AllowedValidTill) for iceberg order, if none is specified iceberg order should be rejected
13	stoplossOrder		String (256)	A comma separated list of allowed-valid-till condition (specified by AllowedValidTill) for stop-loss order, if none is specified stop-loss order should be rejected
14	discretionaryOrder		String (256)	A comma separated list of allowed-valid-till condition (specified by AllowedValidTill) for discretionary order, if none is specified discretionary order should be rejected
15	pegOrder		String (256)	A comma separated list of allowed-valid-till condition (specified by AllowedValidTill) for peg order, if none is specified peg order should be rejected
17	allowShortSell		Boolean	Set to true if short sell order should be allowed
18	specialMarketOrder		String (256)	A comma separated list of allowed-valid-till condition (specified by AllowedValidTill) for market-to-limit order, if none is specified market-to-limit order should be rejected
Message: TradeReportTypes

Message ID: 1538

Type: Trading Data and Trading Rule Messages

Description: Definition of tradereport types

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
8	name	required	String (256)	The name of the TradeReportTypes
9	tickSizeTableId		Integer	Key to the tick size table used by this trade report types. If no tickSizeTableId is defined for the tradereport, the tickSizeTable for the tradable instrument will be used.
10	priceBand		Long	The priceband that should be applied for this tradereport in percentage
Values representing percentage are stored as integers with the following interpretation: 
- 12.5% is stored as 0.125 in all TRADExpress' fields that represent a percentage. 
- Since TRADEpress uses a long where the value is always multiplied by the literal DIVISOR.INTEREST, the internal representation of 12.5% is 125000 as a long (64-bit) integer value.

11	allowPricOnlyVwapOrClosing		Boolean	Only price same as either VWAP or CLOSING is allowed when this flag is set to true
12	roundLot		Long	The roundlot that should be applied for this tradereport
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

13	minPrice		Long	The minimum turnover allowed for this trade report type, if none is specified all is allowed. Note this is combined with minQty with an OR
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

14	minQty		Long	The minimum quantity allowed for this trade report type, if none is specified all is allowed. Note this is combined with minPrice with an OR
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

15	maxPrice		Long	The maximum turnover allowed for this trade report type, if none is specified all is allowed.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

16	maxQty		Long	The maximum quantity allowed for this trade report type, if none is specified all is allowed.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

17	segmentIdList		String (2048)	A comma separated list of Segment Ids for applied segments. If not specified it applies to all TI for the schedule.
20	priceBandAbsolute		Long	The priceband that should be applied for this tradereport in absolute value
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

Message: CircuitBreakerOrderBook

Message ID: 1560

Type: Trading Data and Trading Rule Messages

Description: Definition of orderbook circuit breaker

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
8	circuitBreakerId	required	String (256)	The id of the CircuitBreaker
9	percentage	required	Long	The percentage for when to trigger the circuit breaker
Values representing percentage are stored as integers with the following interpretation: 
- 12.5% is stored as 0.125 in all TRADExpress' fields that represent a percentage. 
- Since TRADEpress uses a long where the value is always multiplied by the literal DIVISOR.INTEREST, the internal representation of 12.5% is 125000 as a long (64-bit) integer value.

10	triggerPriceType		Integer	The type of price that last trade price should be compared with.
Allowed values: see constant group TriggerPriceType

11	movementType	required	Integer	The type of movement that should trigger the circuit breaker.
Allowed values: see constant group MovementType

12	haltType	required	Integer	The type of halt that should be used when the circuit breaker is triggered. Defined by TRADE_HALT_TYPE
13	affectedSegment		String (256)	If this is specified, only triggered tradable instrument and tradable instrument in this segment (with same parent-instrument) will be halted.
14	doNotCreateTriggerTrade		Boolean	If set to true, the triggering trade should not be created.
Message: CircuitBreakerIndex

Message ID: 1561

Type: Trading Data and Trading Rule Messages

Description: Definition of index circuit breaker

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
8	circuitBreakerId	required	String (256)	The id of the CircuitBreaker
9	percentage	required	Long	The percentage for when to trigger the circuit breaker
Values representing percentage are stored as integers with the following interpretation: 
- 12.5% is stored as 0.125 in all TRADExpress' fields that represent a percentage. 
- Since TRADEpress uses a long where the value is always multiplied by the literal DIVISOR.INTEREST, the internal representation of 12.5% is 125000 as a long (64-bit) integer value.

10	movementType	required	Integer	The type of movement that should trigger the circuit breaker.
Allowed values: see constant group MovementType

11	haltType	required	Integer	The type of halt that should be used when the circuit breaker is triggered. Defined by TRADE_HALT_TYPE
12	markets		String (256)	The markets that should be halted, only used for index circuit breakers.
13	index		String (256)	The internal id of the index (tradable instrument) that should trigger the circuit breaker.
Message: NewsReportTypes

Message ID: 1595

Type: Trading Data and Trading Rule Messages

Description: Definition of allowed report types for news.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
8	name	required	String (256)	The name of the report type.
9	description		String (256)	Description
10	languageConfigurable	required	Boolean	Defines if this News Type is language configurable or not
Message: PriceBandHaltConfiguration

Message ID: 1638

Type: Trading Data and Trading Rule Messages

Description: Definition of Priceband halt configuration.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
8	name	required	String (256)	The id of the configuration. Must be a unique name.
9	autoLiftTimeDefaultLevel		Long	The delay time (in minutes) that should be used before auto-lift of all TI affected by the triggered halt. If not set, there will be no auto-lift performed. If zero, then lift halt is performed immediately with no delay. Updating the value of Auto Lift Time Default Level will not have any effect on already performed automatic lifts. The cStraw user can update the setting intraday and when the halt and automatic lift is performed, the current setting will be used.
13	createTriggerTrade	required	Integer	If set to TRADE_THEN_HALT trade should be created before halt. If set to HALT_BEFORE_TRADE (or null) trade should not be created before halt.
Allowed values: see constant group TriggerTradeType

14	liftType		Integer	The type of lift (Could be either immediately or with schedule)
Allowed values: see constant group LiftType

15	haltType		Integer	Could be either No matching or Full halt. Define by TRADE_HALT_TYPE.
16	remainingTime		Long	The least time, in number of second, that should be covered between trade halt lift resume at time and e next state transition. If there is less time than this, then the halt lift should not be performed. If lift is performed by schedule, the remaining time also needs to cover the trade halt lift schedule. If remaining time is not set, only lift type immediately could be used. If by schedule is used, the lift will be automatically performed at next state change.
18	triggeringSeries	required	Integer	Defines the triggering TIs. If set to NEAREST_SERIES, this is used for futures, and means that the nearest month will be the triggering TI. If set to ALL_SERIES, this means all TIs of the segment will be triggering TIs.
Allowed values: see constant group TriggerSeriesType

19	haltAllRelated		Boolean	If set to true, the TI which triggered the halt AND all TIs sharing the same top parent instrument will be halted. If false (or null), only the TI which triggered the halt and TIs sharing the same parent instrument will be halted. For example, for Gold this means that if a gold future triggers a halt due to price limit break, all gold futures, but also all other gold related products will be halted, The halt applied will be decided by the triggering TI´s priceBandHalt configuration..
20	numberOfDaysBeforeLastTradingDate		Integer	The number of business days before last trading date of the specified triggering futures (i.e defines when to move triggering futures to the next futures).
6.3.1 Trading Data and Trading Rule Management Messages

Message: UpdateTradingScheduleReq

Message ID: 154

Type: Trading Data and Trading Rule Management Messages

Description: A request to update a trading schedule. Normally this request includes all state transition elements for this trading schedule. Note that all old state transition elements are removed and that all information about the trading schedule has to be provided.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	scheduleData		TradingSchedule	New and complete trading schedule data including state transitions to replace the existing data.
13	allowOnlyTimeModification		Boolean	If this is set to true, it will only be allowed to modify the trading schedule times and will not be possible to add new states.
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddTradingScheduleReq

Message ID: 155

Type: Trading Data and Trading Rule Management Messages

Description: A request to add a trading schedule. Normally this request includes all state transition elements for this trading schedule.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	scheduleData		TradingSchedule	The trading schedule, including state transitions, to be added.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveTradingScheduleReq

Message ID: 156

Type: Trading Data and Trading Rule Management Messages

Description: A request to remove a trading schedule and all its state transition elements.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	removeType	required	Integer	The type of remove operation to be conducted. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
13	scheduleData		TradingSchedule	The trading schedule, including state transitions, to be removed.
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddCalendarDateReq

Message ID: 157

Type: Trading Data and Trading Rule Management Messages

Description: A request to add a calendar date. A date is of a predefined type (defined by the constant DATE_TYPE (i.e NORMAL, HALF_DAY or CLOSED), and determines the opening hours of the system. The date format is yyyy-MM-dd.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	date		CalendarDate	The date to add.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateCalendarDateReq

Message ID: 500

Type: Trading Data and Trading Rule Management Messages

Description: A request to update a calendar date. A date is of a predefined type (defined by the constant DATE_TYPE (i.e NORMAL, HALF_DAY or CLOSED), and determines the opening hours of the system. The date format is yyyy-MM-dd.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	date		CalendarDate	The date to add.
This request will normally return a response of type CdResponse.

Message: RemoveCalendarDateReq

Message ID: 158

Type: Trading Data and Trading Rule Management Messages

Description: A request to remove a RemoveCalendarDate.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	date		CalendarDate	The date to remove.
13	removeType	required	Integer	The type of remove operation to be conducted. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: OrderBookRuleGroupRsp

Message ID: 165

Type: Trading Data and Trading Rule Management Messages

Description: A response to an add, update or remove orderbook rule group request.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
6	orderBookRuleGroupId		String	The id of the affected orderbook rule group.
7	messageReference		String	The message reference from the corresponding RequestMessage.
8	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
Message: UpdateTickSizeTableReq

Message ID: 167

Type: Trading Data and Trading Rule Management Messages

Description: A request to update a ticksize Table.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	tickSizeTable		TickSizeTable	New and complete ticksize table data to replace the existing data.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveTickSizeTableReq

Message ID: 168

Type: Trading Data and Trading Rule Management Messages

Description: Removes a ticksize table.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	tickSizeTable		TickSizeTable	New and complete ticksize table data to replace the existing data.
13	removeType	required	Integer	The type of remove operation to be conducted. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddTickSizeTableRowReq

Message ID: 169

Type: Trading Data and Trading Rule Management Messages

Description: A request to update a ticksize table row.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
24	tickSizeTableRow		TickSizeTableRow	The data of the tick size table row to be added.
25	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
26	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateTickSizeTableRowReq

Message ID: 170

Type: Trading Data and Trading Rule Management Messages

Description: A request to update a tickSize table row.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
24	tickSizeTableRow		TickSizeTableRow	New and complete ticksize table row data to replace the existing data.
25	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
26	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveTickSizeTableRowReq

Message ID: 171

Type: Trading Data and Trading Rule Management Messages

Description: A request to remove a ticksize table row.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
24	removeType	required	Integer	The type of remove operation to be conducted. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
25	tickSizeTableRow		TickSizeTableRow	New and complete ticksize table row data to replace the existing data.
26	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
27	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddCombinationOrderBookReq

Message ID: 172

Type: Trading Data and Trading Rule Management Messages

Description: A request to add a combination orderbook that spans several single orderbooks.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
38	comboOrderBookData		CombinationOrderBookData[]	The orderbooks spanned by the combination.
39	orderBookData		OrderBook	Orderbook data of the combination orderbook to be added.
40	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
41	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type OrderBookRsp.

Message: UpdateCombinationOrderBookReq

Message ID: 173

Type: Trading Data and Trading Rule Management Messages

Description: A request to update a combination orderbook that spans several single orderbooks.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
38	comboOrderBookData		CombinationOrderBookData[]	The orderbooks spanned by the combination.
39	orderBookData		OrderBook	New and complete orderbook data.
40	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
41	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type OrderBookRsp.

Message: RemoveCombinationOrderBookReq

Message ID: 174

Type: Trading Data and Trading Rule Management Messages

Description: A request to remove a combination orderbook that spans several single orderbooks.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
38	comboOrderBookData		CombinationOrderBookData[]	The orderbooks spanned by the combination.
39	removeType	required	Integer	The type of remove operation to be conducted. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
40	orderBookData		OrderBook	New and complete orderbook data.
41	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
42	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type OrderBookRsp.

Message: AddCurrencyReq

Message ID: 175

Type: Trading Data and Trading Rule Management Messages

Description: A request to add a currency.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	currency		Currency	The data of the currency to be added.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateCurrencyReq

Message ID: 176

Type: Trading Data and Trading Rule Management Messages

Description: A request to update a currency.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	currency		Currency	New and complete currency data to replace the existing data.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveCurrencyReq

Message ID: 177

Type: Trading Data and Trading Rule Management Messages

Description: A request to remove a currency.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	currency		Currency	New and complete currency data to replace the existing data.
13	removeType	required	Integer	The type of remove operation to be conducted. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddSingleOrderBookReq

Message ID: 178

Type: Trading Data and Trading Rule Management Messages

Description: A request to add an OrderBook trading a specified instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
38	orderBookData		OrderBook	Orderbook data of the orderbook to be added.
39	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
40	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type OrderBookRsp.

Message: UpdateSingleOrderBookReq

Message ID: 179

Type: Trading Data and Trading Rule Management Messages

Description: A request to update an OrderBook trading a specified instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
38	orderBookData		OrderBook	New and complete orderbook data.
39	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
40	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type OrderBookRsp.

Message: RemoveSingleOrderBookReq

Message ID: 180

Type: Trading Data and Trading Rule Management Messages

Description: A request to remove an OrderBook trading a specified instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
38	removeType	required	Integer	The type of remove operation to be conducted. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
66	orderBookData		OrderBook	New and complete orderbook data.
67	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
68	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type OrderBookRsp.

Message: AddOrderBookRuleGroupReq

Message ID: 181

Type: Trading Data and Trading Rule Management Messages

Description: A request to add an orderbook rule group

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
50	orderBookRuleGroup		OrderBookRuleGroup	The orderbook rule group to be added.
51	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
52	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type OrderBookRuleGroupRsp.

Message: RemoveOrderBookRuleGroupReq

Message ID: 182

Type: Trading Data and Trading Rule Management Messages

Description: A request to remove an orderbook rule group.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
50	removeType	required	Integer	The type of remove operation to be conducted. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
51	orderBookRuleGroup		OrderBookRuleGroup	New and complete orderbook rule group data.
52	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
53	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type OrderBookRuleGroupRsp.

Message: UpdateOrderBookRuleGroupReq

Message ID: 183

Type: Trading Data and Trading Rule Management Messages

Description: A request to update an orderbook rule group.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
50	orderBookRuleGroup		OrderBookRuleGroup	New and complete orderbook rule group data.
51	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
52	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type OrderBookRuleGroupRsp.

Message: AddProcessingSequenceReq

Message ID: 184

Type: Trading Data and Trading Rule Management Messages

Description: A request to add a processing sequence.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
26	processingSequenceData		ProcessingSequence	The data of the processing sequence to be added.
27	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
28	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveProcessingSequenceReq

Message ID: 185

Type: Trading Data and Trading Rule Management Messages

Description: A request to remove a processing sequence

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
24	removeType	required	Integer	The type of remove operation to be conducted. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
27	processingSequenceData		ProcessingSequence	New and complete processing sequence data to replace the existing data.
28	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
29	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateProcessingSequenceReq

Message ID: 186

Type: Trading Data and Trading Rule Management Messages

Description: A request to update a processing sequence.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
26	processingSequenceData		ProcessingSequence	New and complete processing sequence data to replace the existing data.
27	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
28	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddProcessingSequenceOrderBookIdReq

Message ID: 187

Type: Trading Data and Trading Rule Management Messages

Description: A request to add a processing sequence orderbook id.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
25	processingSequenceOBData		ProcessingSequenceOrderBookId	Data of the processing sequence orderbook id to be added.
26	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
27	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateProcessingSequenceOrderBookIdReq

Message ID: 188

Type: Trading Data and Trading Rule Management Messages

Description: A request to update a processing sequence orderbook id.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
25	processingSequenceOBData		ProcessingSequenceOrderBookId	New and complete processing sequence orderbook id data to replace the existing data.
26	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
27	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveProcessingSequenceOrderBookIdReq

Message ID: 189

Type: Trading Data and Trading Rule Management Messages

Description: A request to remove a processing sequence orderbook id.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
25	removeType	required	Integer	The type of remove operation to be conducted. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
26	processingSequenceOBData		ProcessingSequenceOrderBookId	New and complete processing sequence orderbook id data to replace the existing data.
27	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
28	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddSubscriptionGroupReq

Message ID: 190

Type: Trading Data and Trading Rule Management Messages

Description: A request to add a subscription group.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
23	subscriptionGroup		SubscriptionGroup	The data of the subscription group to be added.
24	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
25	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveSubscriptionGroupReq

Message ID: 191

Type: Trading Data and Trading Rule Management Messages

Description: A request to remove a subscription group.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
23	removeType	required	Integer	The type of remove operation to be conducted. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
24	subscriptionGroup		SubscriptionGroup	New and complete suvscription group data to replace the existing data.
25	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
26	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateSubscriptionGroupReq

Message ID: 192

Type: Trading Data and Trading Rule Management Messages

Description: A request to update a subscription group.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
23	subscriptionGroup		SubscriptionGroup	New and complete suvscription group data to replace the existing data.
24	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
25	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddAllowedRequestsGroupReq

Message ID: 193

Type: Trading Data and Trading Rule Management Messages

Description: A request to add an allowed requests group.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
23	requestgroupData		AllowedRequestsGroup	The allowed request group data to be added, including all allowed request group row children, if any.
24	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
25	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateAllowedRequestsGroupReq

Message ID: 194

Type: Trading Data and Trading Rule Management Messages

Description: A request to update an allowed requests group

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
23	requestgroupData		AllowedRequestsGroup	New and complete allowed requests group data including all allowed requests group row children to replace the existing data.
24	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
25	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveAllowedRequestsGroupReq

Message ID: 195

Type: Trading Data and Trading Rule Management Messages

Description: A request to remove an allowed requests group

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	removeType	required	Integer	The type of remove operation to be conducted. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
13	requestgroupData		AllowedRequestsGroup	The allowed requests group data to be removed.
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddAdaptiveMicroAuctionSettingsReq

Message ID: 458

Type: Trading Data and Trading Rule Management Messages

Description: A request to add a AddAdaptiveMicroAuctionSettings object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	adaptiveMicroAuctionSettings		AdaptiveMicroAuctionSettings	The data of the AdaptiveMicroAuctionSettings to be added.
11	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
12	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateAdaptiveMicroAuctionSettingsReq

Message ID: 454

Type: Trading Data and Trading Rule Management Messages

Description: A request to update a AdaptiveMicroAuctionSettings object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	adaptiveMicroAuctionSettings		AdaptiveMicroAuctionSettings	New and complete AdaptiveMicroAuctionSettings to replace the existing data.
11	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
12	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveAdaptiveMicroAuctionSettingsReq

Message ID: 455

Type: Trading Data and Trading Rule Management Messages

Description: Removes a AdaptiveMicroAuctionSettings object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
24	removeType	required	Integer	The type of remove operation to be conducted. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
25	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
26	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
27	adaptiveMicroAuctionSettings		AdaptiveMicroAuctionSettings	New and complete AdaptiveMicroAuctionSettings to replace the existing data.
This request will normally return a response of type CdResponse.

Message: AddOrderBookRuleGroupParametersReq

Message ID: 198

Type: Trading Data and Trading Rule Management Messages

Description: A request to add a new orderbook rule group parameter entry.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	parameterData	required	OrderBookRuleGroupParameters	Orderbook rule group data.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateOrderBookRuleGroupParametersReq

Message ID: 199

Type: Trading Data and Trading Rule Management Messages

Description: A request to update an orderbook rule group parameter entry.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	parameterData	required	OrderBookRuleGroupParameters	Orderbook rule group data.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveOrderBookRuleGroupParametersReq

Message ID: 200

Type: Trading Data and Trading Rule Management Messages

Description: A request remove an orderbook rule group parameter entry.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	parameterData	required	OrderBookRuleGroupParameters	Orderbook rule group data.
13	removeType	required	Integer	The type of remove operation to be conducted. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddOrderBookParametersReq

Message ID: 201

Type: Trading Data and Trading Rule Management Messages

Description: A request to add a new Orderbook parameter entry.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	parameterData	required	OrderBookParameters	Orderbook parameters data.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateOrderBookParametersReq

Message ID: 202

Type: Trading Data and Trading Rule Management Messages

Description: A request to update an orderbook parameter entry.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	parameterData	required	OrderBookParameters	Orderbook parameters data.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveOrderBookParametersReq

Message ID: 203

Type: Trading Data and Trading Rule Management Messages

Description: A request to remove a orderbook parameter entry.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	parameterData	required	OrderBookParameters	Orderbook parameters data.
13	removeType	required	Integer	The type of remove operation to be conducted. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: QueryStoredLongOrdersReq

Message ID: 452

Type: Trading Data and Trading Rule Management Messages

Description: Query for long orders

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	pageSize	required	int	The maximal number of orders to be returned as a result of this query. If the page size is zero or less than zero, the system-configured maximum number of records is returned. The page size is set to the system-configured maximum page size by the system, if the page size is less than one or greater than that configured value. If the number of query result items is greater than the page size, several identical queries, where only the pageNumber is increased, are required to retrieve all items. Do not change the page size value between subsequent queries.
11	pageNumber	required	int	This field is intended for paged or segmented queries, requesting a particular page or segment. The first query should have page number 0, the second has page number 1 and so on. Page numbers greater than one and increasing are expected if the last query gave a response with the field resultMayBeTruncated set to true.
12	orderBookId		Long	The order book id of the orders to be retrieved. Used as search criterium. May be null only if atleast one of the fields orderId, queriedMemberId or queriedUserId fields is set.
13	privateOrderId		String	The private order id of a single long order to be retrieved. Used as search criterium. May be null only if atleast one of the fields orderBookId, queriedMemberId or queriedUserId fields is set.
14	queriedMemberId		String	The member id matching the long orders to be retrieved. Is used as search criterium along with an order book id, that is, a query for all long orders found in a particular order book belonging to the specified member. If an order book id is not specified, all long orders for the member will be retrieved.
15	queriedUserId		String	The member id matching the long orders to be retrieved. Is used as search criterium along with an order book id, that is, a query for all long orders found in a particular order book belonging to the specified member. If an order book id is not specified, all long orders for the user will be retrieved.
16	price		Long	Specifies that the query has a price condition. To be combined with the orderBookId AND the priceCondition criteria, but with no other criteria.
17	priceCondition		Integer	Specifies the price condition. If set to SearchCondition.EQUAL_TO, only long orders that have a price equal to the price field are retrieved, etc. To be combined with the orderBookId AND the price criteria, but with no other criteria.
Allowed values: see constant group SearchCondition

18	quantity		Long	Specifies that the query has a quantity condition. To be combined with the orderBookId AND the quantityCondition criteria, but with no other criteria.
19	quantityCondition		Integer	Specifies the quantity condition. If set to SearchCondition.LESS_THAN, only long orders having a volume lower than the quantity field are retrieved, etc. To be combined with the orderBookId AND the quantity criteria, but with no other criteria.
Allowed values: see constant group SearchCondition

20	inactive		boolean	The system holds long orders that are active, that is, the orders were published during the system's last startup. Dependent on the system's configuration, the system may also hold older orders that have not been published. This field specifies if inactive orders are to be retrieved. Default is false and to retrieve active orders only.
21	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
22	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type SimpleRsp.

Message: RemoveLongOrdersReq

Message ID: 450

Type: Trading Data and Trading Rule Management Messages

Description: A request to remove long orders based on the member, user, orderbook or private order id criteria in the request.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	orderBookId		Long	The order book id of the orders to be removed. Used as search criterium. May be null only if atleast one of the fields orderId, queriedMemberId or queriedUserId fields is set.
13	inactive		boolean	The system holds long orders that are active, that is, the orders were published during the system's last startup. Dependent on the system's configuration, the system may also hold older orders that have not been published. This field specifies if inactive orders are to be retrieved. Default is false and to retrieve active orders only.
14	privateOrderId		String	The private order id of a single long order to be removed. Used as search criterium. May be null only if atleast one of the fields orderBookId, queriedMemberId or querieduserId fields is set.
15	queriedMemberId		String	The member id matching the long orders to be removed. Is used as search criterium along with an order book id, that is, a request for the removal all long orders found in a particular order book belonging to the specified member. If an order book id is not specified, all long orders for the member will be removed.
16	deleteAllLongOrders		boolean	Setting this parameter to true, will delete all long orders in the system. All attributes except the "inactive" flags are irrelevant if "deleteAllLongOrders" is set to true.
17	queriedUserId		String	The user id matching the long orders to be removed. Is used as search criterium along with an order book id, that is, a request for the removal all long orders found in a particular order book belonging to the specified user. If an order book id is not specified, all long orders for the user will be removed.
18	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
19	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type RemoveLongOrdersRsp.

Message: RemoveLongOrdersRsp

Message ID: 451

Type: Trading Data and Trading Rule Management Messages

Description: A response to a RemoveLongOrdersReq.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
6	numberOfLongOrdersRemoved		int	The number of removed orders.
7	messageReference		String	The message reference from the corresponding RequestMessage.
8	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
Message: AdaptiveMicroAuctionSettings

Message ID: 456

Type: Trading Data and Trading Rule Management Messages

Description: This class holds configuration settings for the Adaptive micro auction (AMA) functionality in ME.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
8	amaSettingsId	required	Integer	Cache identification of this AMA setting.
9	amaDisplayName	required	String (128)	The display name for this AMA setting.
10	callTime	required	Long	The basic length of the micro auction. The time unit is microseconds, and the value shall be equal or greater than zero (0). The value null is not allowed. If the Call Time value is zero (0), the AMA is implicitly turned off.
11	maxFixedCallTime	required	Long	This is the maximum length of the micro auction. Since the the basic lenght may be prolonged based on incoming order events under certain conditions, this parameter defines the maximum duration of the micro auction. The value for this parameter must be equal to or greater than the callTime parameter. The time unit is microseconds. The value null is not allowed.
12	maxRandomCallTime	required	Long	In order to be undeterministic, the acutal micro auction is prolonged with a randomized time. This parameter sets the maximum randomization time to be used. The value shall be equal-to or greater than zero (0). The time unit is microseconds. The value null is not allowed.
Message: AddScheduledCorporateActionReq

Message ID: 461

Type: Trading Data and Trading Rule Management Messages

Description: A request to add a scheduled corporate action to the reference data

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	scheduledCorporateAction	required	ScheduledCorporateAction	Complete information about the scheduled corporate action to be added.
11	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
12	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateScheduledCorporateActionReq

Message ID: 462

Type: Trading Data and Trading Rule Management Messages

Description: This request will update an existing schedule corporate action entirely.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	scheduledCorporateAction	required	ScheduledCorporateAction	New and complete scheduled corporate action data. (Individual corporate action effect actions can't be modified.)
11	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
12	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveScheduledCorporateActionReq

Message ID: 463

Type: Trading Data and Trading Rule Management Messages

Description: A request to remove a scheduled corporate action and all its subsequent children (corporate action effect items)

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	scheduledCorporateAction	required	ScheduledCorporateAction	Information to identify the schedule corporate action object to be removed.
11	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
12	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
13	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
501	pending		boolean	If true the corporate action is removed first when all pending events are satisfied. If false the remove action is performed immediately.
This request will normally return a response of type CdResponse.

Message: AddCorporateActionEffectReq

Message ID: 464

Type: Trading Data and Trading Rule Management Messages

Description: A request to add a corporate action effect to a scheduled corporate action

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
11	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
12	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
13	corporateActionEffectTE		CorporateActionEffectTE	Complete information about the corporate action effect to be added.
This request will normally return a response of type CdResponse.

Message: UpdateCorporateActionEffectReq

Message ID: 465

Type: Trading Data and Trading Rule Management Messages

Description: A request to update a corporate action effect of a scheduled corporate action

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
11	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
12	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
13	corporateActionEffectTE		CorporateActionEffectTE	Complete information about the corporate action effect to be updated
This request will normally return a response of type CdResponse.

Message: RemoveCorporateActionEffectReq

Message ID: 466

Type: Trading Data and Trading Rule Management Messages

Description: A request to remove a corporate action effect from a scheduled corporate action

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
11	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
12	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
13	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
14	corporateActionEffectTE		CorporateActionEffectTE	Information about the corporate action effect to be removed.
This request will normally return a response of type CdResponse.

Message: AddIndexCompositionReq

Message ID: 490

Type: Trading Data and Trading Rule Management Messages

Description: A request to add an index composition to the reference data

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	indexComposition	required	IndexComposition	Complete information about the index composition to be added.
This request will normally return a response of type CdResponse.

Message: UpdateIndexCompositionReq

Message ID: 491

Type: Trading Data and Trading Rule Management Messages

Description: This request will update an existing index composition entirely.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	indexComposition	required	IndexComposition	New and complete index composition data. (Individual index composition elements actions can't be modified.)
This request will normally return a response of type CdResponse.

Message: RemoveIndexCompositionReq

Message ID: 492

Type: Trading Data and Trading Rule Management Messages

Description: A request to remove a index composition and all its subsequent children (index composition element items)

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	indexComposition	required	IndexComposition	Information to identify the index composition object to be removed.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
This request will normally return a response of type CdResponse.

Message: AddIndexCompositionElementReq

Message ID: 493

Type: Trading Data and Trading Rule Management Messages

Description: A request to add an index composition element to a index composition. action

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	indexCompositionElement	required	IndexCompositionElement	Complete information about the index composition element to be added.
This request will normally return a response of type CdResponse.

Message: UpdateIndexCompositionElementReq

Message ID: 494

Type: Trading Data and Trading Rule Management Messages

Description: A request to update an index composition element of an index composition.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	indexCompositionElement	required	IndexCompositionElement	Complete information about the index composition element to be updated
This request will normally return a response of type CdResponse.

Message: RemoveIndexCompositionElementReq

Message ID: 495

Type: Trading Data and Trading Rule Management Messages

Description: A request to remove an index composition element from an index composition.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	indexCompositionElement	required	IndexCompositionElement	Information about the index composition element to be removed.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
This request will normally return a response of type CdResponse.

6.4 Market and Instrument Messages

Message: Instrument

Message ID: 295

Type: Market and Instrument Messages

Description: The Instrument holds basic background information, such as instrument id, type and (optionally) primary market for an instrument. Since an instrument can be traded in different currencies and visibility (normal, dark etc), the instrument has a set of child objects called TradableInstrument in which the actual trading takes place. An Instrument may reference another Instrument using the "parentInternalId" attribute. The parentInternalId is typically used by warrants or options to reference the underlying instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	internalId		String (128)	A unique instrument identifier. May be an ISIN, CUSIP or symbol name. The InternalID is created using the InstrumentID and InstrumentIdType fields. Example: SE0000108656_ISIN
8	parentInternalId		String (128)	This is a reference to the parent instrument, if any. A parent instrument is typically an underlying instrument when trading derivatives. Shall be set to null if this instrument is a "root" instrument.
9	isEnabled		Boolean	The administrative state of this item. If is enabled is set to false, all orderbooks at this and all levels below will be set to a persistent full-halt state.
10	hasBeenEnabledOnce		Boolean	Internal state of the instrument. Please don t mess with this one, just pass it as is please.
11	disabledCount		Integer	A count of how many times this element has been enabled/disabled. An element will not be enabled until disabledCount is zero.
12	instrumentId	required	String (64)	The global identity of the instrument. The type of identifier (ISIN, CUSIP etc) is defined by the instrumentIdType attribute.
13	instrumentIdType	required	String (32)	The type of the InstrumentId (ISIN, CUSIP etc)
Allowed values: see constant group InstrumentIdType

14	prevInstrumentId		String (64)	The previous (if any) instrument id. Used in case of corporate action etc where an instrument may change instrument code.
15	prevInstrumentIdType		String (32)	The type of the prevInstrumentId (ISIN, CUSIP etc)
Allowed values: see constant group InstrumentIdType

16	type	required	String (32)	The type of instrument (equity, warrant, future etc).
Allowed values: see constant group InstrumentType

17	shortName	required	String (64)	The short display name for the instrument, ERICB for example.
18	name	required	String (255)	The complete instrument name, Ericsson B for example.
19	issuer		String (255)	The issuer of the instrument
20	sector		String (128)	The financial sector to which the instrument belong
21	primaryMarketId		String (32)	A unique id that defines market/market that is to be considered primary for the instrument, XLON, XSSE for example.)
22	adt		Long	The Average Daily Turnover for the instrument. This field is actually required for an Instrument, but unfortunately it cannot be automatically validated.
23	adtCurrency		String (3)	The ADT currency code (ISO 4217) for the currency expressed. This field is actually required for an Instrument, but unfortunately it cannot be automatically validated.
27	validFromDate	required	String (10)	The first date the instrument is valid. The format is yyyy-MM-dd.
28	validToDate		String (10)	The last date the instrument is valid. The format is yyyy-MM-dd.
29	orderBookParameterSetId		String (128)	A reference to an OrderBookParameters object that holds orderbook parameters for this Instruments TradableInstrument child objects. If OrderBookParameters is defined for an Instrument, the parameters are applied to all TradableInstrument child objects for this Instrument, independent of currency visibility etc. In case the OrderBookParameters id is null, the default values will be retrieved from (in order) the Segment, MarketList, Market or SystemDefault .
30	listOfAliases		String (256)	A list of other markets'/exchanges' ID of this instrument in the format: market1:id1,market2:id2,...
31	tradableInstruments		TradableInstrument[]	This set holds all TradableInstrument child objects for this instrument. Note that this set may be null or empty, since child objects may be distributed in separate broadcasts.
34	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
35	sectorCode		String (16)	The financial sector code used for this instrument. This may reference an IndustrySector object. The code may be GICS, ICB or whatever...
36	genericInstrumentData		String (128)	Currently not used by SET.
37	instrumentType1Data		String (128)	Currently not used by SET.
38	instrumentType2Data		String (128)	Currently not used by SET.
39	instrumentType3Data		String (128)	Currently not used by SET.
40	instrumentType4Data		String (128)	Currently not used by SET.
41	instrumentType5Data		String (128)	Currently not used by SET.
42	instrumentType6Data		String (128)	Currently not used by SET.
43	instrumentType7Data		String (128)	Currently not used by SET.
44	instrumentType8Data		String (128)	Currently not used by SET.
502	notificationType		Integer	Indicates that a security has been asked to provide important information or it has already responded to a request of information.
Allowed values: see constant group NotificationType

504	npgFlag		Boolean	True if the security is in the Non-Performing.
505	ipoPrice		Long	The IPO price, is set when the tradable instrument is listed.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

511	instrumentTypeData		InstrumentTypeData[]	Extended attributes for the instrument depending on instrument type.
515	parValue		Long	Par value.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

516	nonCompliance	required	Boolean	If this flag is True, the company has not reached SET's standard.
517	totalAdjustmentOfIndexShares		Long	The total Change to be applied to numberOfIndexShares Indicates number of shares changed due to a CA case.
518	numberOfIndexShares		Long	Number of shares used for the CA and index calculation.
520	freeFloat		Long	The free float factor is the percentage of shares remaining after the block ownership and restricted shares are subtracted from the total number of shares.
Values representing percentage are stored as integers with the following interpretation: 
- 12.5% is stored as 0.125 in all TRADExpress' fields that represent a percentage. 
- Since TRADEpress uses a long where the value is always multiplied by the literal DIVISOR.INTEREST, the internal representation of 12.5% is 125000 as a long (64-bit) integer value.

521	dividendYield		Long	Dividend yield.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

522	totalReturn		Long	Total return.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

523	netReturn		Long	Net return.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

524	investableWeightFactor		Long	If the contribution of this instrument to the index is limited, this is weight in the index for this instrument.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

525	sustainabilityScore		Long	Sustainability score.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

526	pureStyleScore		Long	Pure style score.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

527	cgScore		Long	CG score.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

528	carbonScore		Long	Carbon score.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

529	adjustmentFactor1		Long	Adjustment factor 1.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

530	adjustmentFactor2		Long	Adjustment factor 2.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

531	adjustmentFactor3		Long	Adjustment factor 3.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

532	adjustmentFactor4		Long	Adjustment factor 4.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

533	adjustmentFactor5		Long	Adjustment factor 5.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

534	splitFlag		Boolean	True indicates the security is traded for the first day after it has split the par value.
535	exerciseRatio		Long	The exercise ration (only used for warrant and derivative warrants)
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

537	rfqToAll	required	Boolean	If set to true, RFQs will be public and the RFQ receivers list will be ignored.
538	rfqReceiverMemberIdList		String (255)	A comma separated list of Member Ids to send RFQs to. If empty, send to none. Can be overridden by the rfqToAll parameter.
Message: TradableInstrument

Message ID: 296

Type: Market and Instrument Messages

Description: The TradableInstrument is a child object of an Instrument. The TradableInstrument holds trading information (order book id, currency, market, visibility etc) which is necessary for entering orders in a specific instrument. There is one TradableInstrument instance per market/currency/visibility combination. A TradableInstrument instance references a Segment, all trading rules for the referenced Segment applies to the instance.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	internalId		String (192)	The internal id of the TradableInstrument. This id is unique within the system and is created from the fields parentInternalId, market, currency and visibility.
8	parentInternalId		String (192)	The internal id of the parent Instrument. This id is defined as "parent instrumentId" (SE0000108656_ISIN is the ISIN code for Ericsson B plus the ISIN id type indicator).
9	internalSegmentId		String (198)	A "cache" segment reference to which this tradable instrument belongs. Assigned by the server when the TradableInstrument is created. Validated against Market/MarketList/Segment attributes when updating a TradableInstrument.
10	isEnabled		Boolean	The administrative state of this item. If is enabled is set to false, all orderbooks at this and all levels below will be set to a persistent full-halt state.
11	hasBeenEnabledOnce		Boolean	Internal state of the tradable instrument. Please don t mess with this one, just pass it as is please.
12	disabledCount		Integer	A count of how many times this element has been enabled/disabled. An element will not be enabled until disabledCount is zero.
13	tradableInstrumentId	required	String (64)	The tradable instrument id. Typically an ISIN, CUSIP or symbol name.
14	tradableInstrumentIdType	required	String (32)	The type of the TradableInstrumentId (ISIN, CUSIP etc)
Allowed values: see constant group InstrumentIdType

15	currencyId	required	String (3)	The currency code according to ISO 4217
16	shortName	required	String (255)	Display name of this tradable instrument, ERICB for example
17	marketId	required	String (128)	The Market where this tradable instrument is traded
18	marketListId	required	String (128)	The marketList within the Market where this instrument is traded
19	segmentId	required	String (128)	The segment within the MarketList where this instrument is traded
20	closingPrice		Long	The last closing price for this instrument in the actual currency. If not provided, it can default to zero. This attribute is updated to reflect the most recent Closing Price published by the Marketplace. This attribute mirrors (has the same value as) the attribute closingPrice in the OrderBook object (OrderBook.closingPrice).
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

21	adjustedClosingPrice		Long	The last adjusted closing price for this instrument in the actual currency. If not provided, it can default to zero This attribute is updated to reflect the most recent Closing Price published by the Marketplace. This attribute mirrors (has the same value as) the attribute adjustedClosingPrice in the OrderBook object (OrderBook.adjustedClosingPrice).
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

22	orderBookId		Long	The id of the orderbook for which trades in this tradableInstrument are held.
23	orderBookVisibilityType		Long	Defines the visibility of the orderbook. See OrderBookVisibilityType for possible values. If no value is provided, the default value is "TRANSPARENT_ONLY".
Allowed values: see constant group OrderBookVisibilityType

24	roundLot		Long	The round lot i.e. the chunk size in which orders are processed.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

25	isRoutingOrderBook		Boolean	If set to true, this tradable instrument point to an orderbook that is managed by the smart order router.
26	routingOrderBookFlags		Integer	This attribute is used by the orderbook router.
27	subscriptionGroupId		Integer	The id of the subscription group to which this tradable instrument belong
28	partitionId		Integer	This is the partition to which the TradableInstrument belong. The value is derived from the subscription group and maintained by the system.
29	forcedPartitionId		Integer	This is the forced partition to which the TradableInstrument belong. This attribute is used by the capacity planner application. If this value is changed during the day, the capacity planner will be forced to use the given partition for this instrument. If this value is null, the capacity planner function may use any partition. The forcedPartitionId is used to lock a tradableInstrument to a partition. The value null means that the tradable instruments partition is unlocked.
31	validFromDate		String (10)	The first date the tradable instrument is valid. The format is yyyy-MM-dd. If this optional data is not specified, the value from the tradable instrument's instrument will be used.
32	validToDate		String (10)	The last date the tradable instrument is valid. The format is yyyy-MM-dd. If this optional data is not specified, the value from the tradable instrument's instrument will be used.
33	numberOfShares		Long (64)	Currently not used by SET.
36	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
37	orderBookParameterSetId		String (128)	A reference to an OrderBookParameters object that holds the orderbook parameters for this tradableInstrument. In case this id is null, the default values will be retrieved from (in order) the parent Instrument, Segment, MarketList, Market or SystemDefault .
38	orderbookState		String	This is a volatile mirror of an orderbook state. This reflects the current orderbook state in ME as received by OrderBookStateChangeEvents
39	listOfAliases		String (256)	A list of other markets'/exchanges' ID of this tradable instrument in the format: market1:id1,market2:id2,...
40	tickSizeTableId		Integer	Key to the tick size table used by this TradableInstrument. Updates to this field is copied to the corresponding field in the orderbook.
41	tradableInstrumentData		String (64)	A reference to a tradable instrument specific data block. Typically expiration date etc.
42	tradableInstrumentType1Data		String (128)	Currently not used by SET.
43	tradableInstrumentType2Data		String (128)	Currently not used by SET.
44	tradableInstrumentType3Data		String (128)	Currently not used by SET.
45	tradableInstrumentType4Data		String (128)	Currently not used by SET.
46	tradableInstrumentType5Data		String (128)	Currently not used by SET.
47	tradableInstrumentType6Data		String (128)	Currently not used by SET.
48	tradableInstrumentType7Data		String (128)	Currently not used by SET.
49	tradableInstrumentType8Data		String (128)	Currently not used by SET.
50	combinationLegs		CombinationLeg[]	If this tradable instrument is a combination instrument this set holds references to the combination leg instruments. Note that this set may be null or empty, since child objects may be distributed in separate broadcasts.
51	isCombination		Boolean	Set to true if this tradable instrument is a combination tradable instrument.
52	adaptiveMicroAuctionSettingsId		Integer	A reference to a AdaptiveMicroAuctionSettings that applies to all TradableInstruments within this segment, unless a specific AdaptiveMicroAuctionSettings is referenced from a TradablInstrument.
53	combPriceType		Integer	Only applicable if the flag isCombinationBook is set. This parameter controls how a price in the combination book is interpreted: whether the price is a sum, an average or a quotient of the leg book prices.
Allowed values: see constant group CombPriceType

54	combTradeLegCalculationRule		Integer	Only applicable if the flag isCombinationBook is set. This parameter controls how prices are calculated in the leg books of a combination if two combination orders match.
Allowed values: see constant group CombTradeLegCalculationRule

57	lastTradingDate		String (10)	The last date the instrument is open for trading. The format is yyyy-MM-dd.
58	corporateActionIndicator		String (24)	This attribute is used to indicate that this instrument has been subject to a Corporate Action.
501	securityType	required	String	The type of security.
Allowed values: see constant group SecurityType

502	isOddLot		Boolean	True if odd lot.
503	upperPriceLimit		Long	The upper price limit of the price band.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

504	lowerPriceLimit		Long	The lower price limit of the price band.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

505	newListFlag		Boolean	The flag is applied by the system (when CA)and will be kept until there is a trade for the security. Used for index calculation. When delisted, it becomes disabled.
506	stabilizationFlag		Boolean	Indicates the company is in the stabilization period.
507	allowShortSell		Boolean	True if the security is allowed for short selling.
508	allowShortSellOnNvdr		Boolean	True if the security is allowed for short selling on NVDR order.
509	allowNvdr	required	Integer	Specifies if the security is allowed for NVDR orders.
Allowed values: see constant group OrderTypeAllowed

510	allowTtf	required	Integer	Specifies if the security is allowed for Thai Trust Fund orders.
Allowed values: see constant group OrderTypeAllowed

514	suspendDate		String	Indicates date of trading suspension. (Part of the day halt.)
518	closingDate		String	Closing date. Format yyyy-MM-dd.
521	tradableInstrumentTypeData		TradableInstrumentTypeData[]	Extended attributes for the instrument depending on instrument type.
522	isValidForTrading	required	Boolean	True if this order book can be traded.
525	lastTradePrice		Long	Today's last traded price.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

526	ric		String (256)	Reuters Identification Code identifying an instrument deriving from the Thomson Reuters source.
527	circuitBreakerOrderBook		String (126)	Specifies the circuitbreaker for the orderbook.
528	beneficialSigns		String (126)	Indicates the security is traded without having the last announced benefit (EX-rights).
529	template		String (16)	Reference to an XML file describing how to parse the incoming Thomson Reuters page to a event broadcast.
530	rfqReceiverMemberIdList		String (255)	A comma separated list of Member Ids to send RFQs to. If empty, send to none. Can be overridden by the rfqToAll parameter.
531	newListStockFlag		Boolean	The flag is applied by the CA on the first trading day of a security. The flag will be cleared by the system at end of first trading day regardless of trade or not.
532	cmvAdjustedSplit		Long	CMV adjusted split.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DIVISOR.DECIMAL.

533	cmvAdjusted		Long	CMV adjusted.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DIVISOR.DECIMAL.

534	cmvFirstTimeAdjusted		Boolean	CMV first time adjusted.
535	variable1		Long	General variable able to use by Index plugin.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DIVISOR.DECIMAL.

536	variable2		Long	General variable able to use by Index plugin.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DIVISOR.DECIMAL.

537	variable3		Long	General variable able to use by Index plugin.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DIVISOR.DECIMAL.

538	variable4		Long	General variable able to use by Index plugin.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DIVISOR.DECIMAL.

539	variable5		Long	General variable able to use by Index plugin.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DIVISOR.DECIMAL.

540	indexCalculation		Boolean	True if this security is included in SET Composite Index/or mai index. This also implies that this is a constituent stock in industry/sector/sub-sector Index. Will be used in index calculation.
541	memberOfAnyIndex		Boolean	True if this security is is part of an Index composition Element.
542	rfqToAll	required	Boolean	If set to true, RFQs will be public and the RFQ receivers list will be ignored.
543	temporaryPriceLimit		Long	Overrides the price limit calculation setting for trade reports.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DIVISOR.DECIMAL.

544	previousClosingPrice		Long	Previous closing price.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

545	previousClosingDate		String	Closing date for previous closing price. Format yyyy-MM-dd.
549	temporaryClosingPrice		Long	Should be used as At-The-Money price if set, otherwise closingPrice is used as the At-The-Money. This is used for generation of options, in order to generate new options when the At-The-Money price moves during the day.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DIVISOR.PRICE.

550	previousShortNameBeforeCa		String (256)	Set if shortName is changed due to corporate action (adjustementfactor or change name). This attribute holds the shortName before corporate action.
555	generationTime		String (128)	Used for SCILA in order to know what time of today the tradable instrument was created if created by series generation or manually created. This field will only be set for futures and options. This field is a string with the time defined.
557	referencePrice		Long	Used for derivatives (futures, options and combinations). For futures/options this is needed when CA update the reference price. When setting settlement price this will be set as well. Only this field will be affected by corporate action. For combinations, this field is set based on the priceLimitBase prices of the legs.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

560	triggerHaltAtPriceLimits		Boolean	A halt can be triggered if this Is set to true and priceBandLevelConfiguration is set on the segment or on TI level. The system will automatically set this attribute.
561	lastTradingTime		String (12)	The last trading time on the last trade date. Format HH.MM.SS.sss
562	startUpReferencePrice		Long	Display the referencePrice set at start of the day. Should be set the same as referencePrice at start of the day.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

563	affectedByCA		Boolean	Will be set to true on derivatives TI when the TI is affected by a CA (for derivatives), will be cleared in the morning.
564	generationShortName		String	If set, this will be used instead of shortName when generating tradable instrument (like future and options) based on N syntax.
565	spotClosingPrice		Long	Previous closing price.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

566	cancelOrdersAffectedByCA		Boolean	This flag indicate that ME should cancel all orders if relevant flag is set on tstae transition.
567	excludeFromCA		Boolean	This flag indicate that the TI should not be affected by CA that day.
568	namingRule		String (64)	This is the rule for the Tradable Instrument's shortName to be able to handle the corporateActionIndicator. This rule is only valid for combinations.
569	combinationNameDelimiter		String (64)	Delimiter used in the combination tradable instrument's short name to indicate where information regarding the different combination legs is located.
570	delimiterIsHidden		Boolean	If set to true, the combinationNameDelimiter should not be present in the tradable instrument's short name.
571	useFinalLevel		Boolean	If set to true, the second level of the priceband should be used for calculating the pricelimits.
Message: OptionTradableInstrument

Message ID: 525

Type: Market and Instrument Messages

Description: This object contains attributes that are specific for an option.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
8	internalId		String (192)	The internal id of the TradableInstrument. This id is unique within the system and is created from the fields parentInternalId, market, currency and visibility.
9	parentInternalId		String (192)	The internal id of the parent Instrument. This id is defined as "parent instrumentId" (SE0000108656_ISIN is the ISIN code for Ericsson B plus the ISIN id type indicator).
10	internalSegmentId		String (198)	A "cache" segment reference to which this tradable instrument belongs. Assigned by the server when the TradableInstrument is created. Validated against Market/MarketList/Segment attributes when updating a TradableInstrument.
11	isEnabled		Boolean	The administrative state of this item. If is enabled is set to false, all orderbooks at this and all levels below will be set to a persistent full-halt state.
12	hasBeenEnabledOnce		Boolean	Internal state of the tradable instrument. Please don t mess with this one, just pass it as is please.
13	disabledCount		Integer	A count of how many times this element has been enabled/disabled. An element will not be enabled until disabledCount is zero.
14	tradableInstrumentId	required	String (64)	The tradable instrument id. Typically an ISIN, CUSIP or symbol name.
15	tradableInstrumentIdType	required	String (32)	The type of the TradableInstrumentId (ISIN, CUSIP etc)
Allowed values: see constant group InstrumentIdType

16	currencyId	required	String (3)	The currency code according to ISO 4217
17	shortName	required	String (255)	Display name of this tradable instrument, ERICB for example
18	marketId	required	String (128)	The Market where this tradable instrument is traded
19	marketListId	required	String (128)	The marketList within the Market where this instrument is traded
20	segmentId	required	String (128)	The segment within the MarketList where this instrument is traded
21	closingPrice		Long	The last closing price for this instrument in the actual currency. If not provided, it can default to zero. This attribute is updated to reflect the most recent Closing Price published by the Marketplace. This attribute mirrors (has the same value as) the attribute closingPrice in the OrderBook object (OrderBook.closingPrice).
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

22	adjustedClosingPrice		Long	The last adjusted closing price for this instrument in the actual currency. If not provided, it can default to zero This attribute is updated to reflect the most recent Closing Price published by the Marketplace. This attribute mirrors (has the same value as) the attribute adjustedClosingPrice in the OrderBook object (OrderBook.adjustedClosingPrice).
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

23	orderBookId		Long	The id of the orderbook for which trades in this tradableInstrument are held.
24	orderBookVisibilityType		Long	Defines the visibility of the orderbook. See OrderBookVisibilityType for possible values. If no value is provided, the default value is "TRANSPARENT_ONLY".
Allowed values: see constant group OrderBookVisibilityType

25	roundLot		Long	The round lot i.e. the chunk size in which orders are processed.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

26	isRoutingOrderBook		Boolean	If set to true, this tradable instrument point to an orderbook that is managed by the smart order router.
27	routingOrderBookFlags		Integer	This attribute is used by the orderbook router.
28	subscriptionGroupId		Integer	The id of the subscription group to which this tradable instrument belong
29	partitionId		Integer	This is the partition to which the TradableInstrument belong. The value is derived from the subscription group and maintained by the system.
30	forcedPartitionId		Integer	This is the forced partition to which the TradableInstrument belong. This attribute is used by the capacity planner application. If this value is changed during the day, the capacity planner will be forced to use the given partition for this instrument. If this value is null, the capacity planner function may use any partition. The forcedPartitionId is used to lock a tradableInstrument to a partition. The value null means that the tradable instruments partition is unlocked.
31	validFromDate		String (10)	The first date the tradable instrument is valid. The format is yyyy-MM-dd. If this optional data is not specified, the value from the tradable instrument's instrument will be used.
32	validToDate		String (10)	The last date the tradable instrument is valid. The format is yyyy-MM-dd. If this optional data is not specified, the value from the tradable instrument's instrument will be used.
33	numberOfShares		Long (64)	Currently not used by SET.
34	orderBookParameterSetId		String (128)	A reference to an OrderBookParameters object that holds the orderbook parameters for this tradableInstrument. In case this id is null, the default values will be retrieved from (in order) the parent Instrument, Segment, MarketList, Market or SystemDefault .
35	orderbookState		String	This is a volatile mirror of an orderbook state. This reflects the current orderbook state in ME as received by OrderBookStateChangeEvents
36	listOfAliases		String (256)	A list of other markets'/exchanges' ID of this tradable instrument in the format: market1:id1,market2:id2,...
37	tickSizeTableId		Integer	Key to the tick size table used by this TradableInstrument. Updates to this field is copied to the corresponding field in the orderbook.
38	tradableInstrumentData		String (64)	A reference to a tradable instrument specific data block. Typically expiration date etc.
39	tradableInstrumentType1Data		String (128)	Currently not used by SET.
40	tradableInstrumentType2Data		String (128)	Currently not used by SET.
41	tradableInstrumentType3Data		String (128)	Currently not used by SET.
42	tradableInstrumentType4Data		String (128)	Currently not used by SET.
43	tradableInstrumentType5Data		String (128)	Currently not used by SET.
44	tradableInstrumentType6Data		String (128)	Currently not used by SET.
45	tradableInstrumentType7Data		String (128)	Currently not used by SET.
46	tradableInstrumentType8Data		String (128)	Currently not used by SET.
47	combinationLegs		CombinationLeg[]	If this tradable instrument is a combination instrument this set holds references to the combination leg instruments. Note that this set may be null or empty, since child objects may be distributed in separate broadcasts.
48	isCombination		Boolean	Set to true if this tradable instrument is a combination tradable instrument.
49	adaptiveMicroAuctionSettingsId		Integer	A reference to a AdaptiveMicroAuctionSettings that applies to all TradableInstruments within this segment, unless a specific AdaptiveMicroAuctionSettings is referenced from a TradablInstrument.
50	combPriceType		Integer	Only applicable if the flag isCombinationBook is set. This parameter controls how a price in the combination book is interpreted: whether the price is a sum, an average or a quotient of the leg book prices.
Allowed values: see constant group CombPriceType

51	combTradeLegCalculationRule		Integer	Only applicable if the flag isCombinationBook is set. This parameter controls how prices are calculated in the leg books of a combination if two combination orders match.
Allowed values: see constant group CombTradeLegCalculationRule

54	strikePrice	required	Long	The strike price for this option.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

55	contractSize	required	Long	The contract size for this option. If trading options in different currencies, different contract sizes may apply.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

56	expirationDate		String (12)	The expiration date for this option. The format is yyyy-mm-dd.
57	optionExerciseStyle		Integer	The option exercise style (European, American etc).
Allowed values: see constant group ExerciseStyle

58	isCallOption		Boolean	If set to true, this option tradable instrument represents a call option, otherwise it is a put option
60	lastTradingDate		String (10)	The last date the instrument is open for trading. The format is yyyy-MM-dd.
61	corporateActionIndicator		String (24)	This attribute is used to indicate that this instrument has been subject to a Corporate Action.
62	underlyingReference		String (192)	Unique reference (internal id) to a underlying reference holding the underlying price for this option.
501	securityType	required	String	The type of security.
Allowed values: see constant group SecurityType

502	isOddLot		Boolean	True if odd lot.
503	upperPriceLimit		Long	The upper price limit of the price band.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

504	lowerPriceLimit		Long	The lower price limit of the price band.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

505	newListFlag		Boolean	The flag is applied by the system (when CA)and will be kept until there is a trade for the security. Used for index calculation. When delisted, it becomes disabled.
506	newListStockFlag		Boolean	The flag is applied by the CA on the first trading day of a security. The flag will be cleared by the system at end of first trading day regardless of trade or not.
507	stabilizationFlag		Boolean	Indicates the company is in the stabilization period.
508	allowShortSell		Boolean	True if the security is allowed for short selling.
509	allowShortSellOnNvdr		Boolean	True if the security is allowed for short selling on NVDR order.
510	allowNvdr	required	Integer	Specifies if the security is allowed for NVDR orders.
Allowed values: see constant group OrderTypeAllowed

511	allowTtf	required	Integer	Specifies if the security is allowed for Thai Trust Fund orders.
Allowed values: see constant group OrderTypeAllowed

512	suspendDate		String	Indicates date of trading suspension. (Part of the day halt.)
513	lastTradePrice		Long	Today's last traded price.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

514	closingDate		String	Closing date. Format yyyy-MM-dd.
515	previousClosingPrice		Long	Previous closing price.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

516	previousClosingDate		String	Closing date for previous closing price. Format yyyy-MM-dd.
517	beneficialSigns		String (126)	Indicates the security is traded without having the last announced benefit (EX-rights).
518	tradableInstrumentTypeData		TradableInstrumentTypeData[]	Extended attributes for the instrument depending on instrument type.
519	isValidForTrading	required	Boolean	True if this order book can be traded.
520	ric		String (256)	Reuters Identification Code identifying an instrument deriving from the Thomson Reuters source.
521	template		String (16)	Reference to an XML file describing how to parse the incoming Thomson Reuters page to a event broadcast.
522	circuitBreakerOrderBook		String (126)	Specifies the circuitbreaker for the orderbook.
523	cmvAdjustedSplit		Long	CMV adjusted split.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DIVISOR.DECIMAL.

524	cmvAdjusted		Long	CMV adjusted.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DIVISOR.DECIMAL.

525	cmvFirstTimeAdjusted		Boolean	CMV first time adjusted.
526	variable1		Long	General variable able to use by Index plugin.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DIVISOR.DECIMAL.

527	variable2		Long	General variable able to use by Index plugin.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DIVISOR.DECIMAL.

528	variable3		Long	General variable able to use by Index plugin.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DIVISOR.DECIMAL.

529	variable4		Long	General variable able to use by Index plugin.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DIVISOR.DECIMAL.

530	variable5		Long	General variable able to use by Index plugin.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DIVISOR.DECIMAL.

531	indexCalculation		Boolean	True if this security is included in SET Composite Index/or mai index. This also implies that this is a constituent stock in industry/sector/sub-sector Index. Will be used in index calculation.
532	memberOfAnyIndex		Boolean	True if this security is is part of an Index composition Element.
533	rfqReceiverMemberIdList		String (255)	A comma separated list of Member Ids to send RFQs to. If empty, send to none. Can be overridden by the rfqToAll parameter.
534	rfqToAll	required	Boolean	If set to true, RFQs will be public and the RFQ receivers list will be ignored.
535	temporaryPriceLimit		Long	Overrides the price limit calculation setting for trade reports.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DIVISOR.DECIMAL.

537	openInterest		Integer	The open interest.
538	settlementPrice		Long	The settlement price.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

539	referencePrice		Long	Used for derivatives (futures, options and combinations). For futures/options this is needed when CA update the reference price. When setting settlement price this will be set as well. Only this field will be affected by corporate action. For combinations, this field is set based on the priceLimitBase prices of the legs.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

542	triggerHaltAtPriceLimits		Boolean	A halt can be triggered if this Is set to true and priceBandLevelConfiguration is set on the segment or on TI level. The system will automatically set this attribute.
543	priceQuotationFactor		Long	The price quotation factor is used to calculate the total price for a trade. Some products may have contract size and PQF inequally set. Should use the same DECIMALS as contractSize"
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

546	temporaryClosingPrice		Long	Should be used as At-The-Money price if set, otherwise closingPrice is used as the At-The-Money. This is used for generation of options, in order to generate new options when the At-The-Money price moves during the day.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DIVISOR.PRICE.

547	previousShortNameBeforeCa		String (256)	Set if shortName is changed due to corporate action (adjustementfactor or change name). This attribute holds the shortName before corporate action.
552	settlementDate		String (32)	Should be set at the same time as the settlementprice is set, set to the current date. Format yyyy-MM-dd.
553	generationTime		String (128)	Used for SCILA in order to know what time of today the tradable instrument was created if created by series generation or manually created. This field will only be set for futures and options. This field is a string with the time defined.
555	delivery		Integer	Describes if the delivery of the contract is physical, in cash or if it can be either of them. Cash is the default value.
Allowed values: see constant group DeliveryType

556	lastTradingTime		String (12)	The last trading time on the last trade date. Format HH.MM.SS.sss
557	startUpReferencePrice		Long	Display the referencePrice set at start of the day. Should be set the same as referencePrice at start of the day.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

558	affectedByCA		Boolean	Will be set to true on derivatives TI when the TI is affected by a CA (for derivatives), will be cleared in the morning.
559	generationShortName		String	If set, this will be used instead of shortName when generating tradable instrument (like future and options) based on N syntax.
560	spotClosingPrice		Long	Previous closing price.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

561	cancelOrdersAffectedByCA		Boolean	This flag indicate that ME should cancel all orders if relevant flag is set on tstae transition.
562	excludeFromCA		Boolean	This flag indicate that the TI should not be affected by CA that day.
563	namingRule		String (64)	This is the rule for the Tradable Instrument's shortName to be able to handle the corporateActionIndicator. This rule is only valid for combinations.
564	referenceDate		String (32)	Should be set at the same time as the reference price is set, set to the current date. Format yyyy-MM-dd.
565	combinationNameDelimiter		String (64)	Delimiter used in the combination tradable instrument's short name to indicate where information regarding the different combination legs is located.
566	delimiterIsHidden		Boolean	If set to true, the combinationNameDelimiter should not be present in the tradable instrument's short name.
567	useFinalLevel		Boolean	If set to true, the second level of the priceband should be used for calculating the pricelimits.
Message: FutureTradableInstrument

Message ID: 585

Type: Market and Instrument Messages

Description: This object contains attributes that are specific for a future.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
8	internalId		String (192)	The internal id of the TradableInstrument. This id is unique within the system and is created from the fields parentInternalId, market, currency and visibility.
9	parentInternalId		String (192)	The internal id of the parent Instrument. This id is defined as "parent instrumentId" (SE0000108656_ISIN is the ISIN code for Ericsson B plus the ISIN id type indicator).
10	internalSegmentId		String (198)	A "cache" segment reference to which this tradable instrument belongs. Assigned by the server when the TradableInstrument is created. Validated against Market/MarketList/Segment attributes when updating a TradableInstrument.
11	isEnabled		Boolean	The administrative state of this item. If is enabled is set to false, all orderbooks at this and all levels below will be set to a persistent full-halt state.
12	hasBeenEnabledOnce		Boolean	Internal state of the tradable instrument. Please don t mess with this one, just pass it as is please.
13	disabledCount		Integer	A count of how many times this element has been enabled/disabled. An element will not be enabled until disabledCount is zero.
14	tradableInstrumentId	required	String (64)	The tradable instrument id. Typically an ISIN, CUSIP or symbol name.
15	tradableInstrumentIdType	required	String (32)	The type of the TradableInstrumentId (ISIN, CUSIP etc)
Allowed values: see constant group InstrumentIdType

16	currencyId	required	String (3)	The currency code according to ISO 4217
17	shortName	required	String (255)	Display name of this tradable instrument, ERICB for example
18	marketId	required	String (128)	The Market where this tradable instrument is traded
19	marketListId	required	String (128)	The marketList within the Market where this instrument is traded
20	segmentId	required	String (128)	The segment within the MarketList where this instrument is traded
21	closingPrice		Long	The last closing price for this instrument in the actual currency. If not provided, it can default to zero. This attribute is updated to reflect the most recent Closing Price published by the Marketplace. This attribute mirrors (has the same value as) the attribute closingPrice in the OrderBook object (OrderBook.closingPrice).
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

22	adjustedClosingPrice		Long	The last adjusted closing price for this instrument in the actual currency. If not provided, it can default to zero This attribute is updated to reflect the most recent Closing Price published by the Marketplace. This attribute mirrors (has the same value as) the attribute adjustedClosingPrice in the OrderBook object (OrderBook.adjustedClosingPrice).
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

23	orderBookId		Long	The id of the orderbook for which trades in this tradableInstrument are held.
24	orderBookVisibilityType		Long	Defines the visibility of the orderbook. See OrderBookVisibilityType for possible values. If no value is provided, the default value is "TRANSPARENT_ONLY".
Allowed values: see constant group OrderBookVisibilityType

25	roundLot		Long	The round lot i.e. the chunk size in which orders are processed.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

26	isRoutingOrderBook		Boolean	If set to true, this tradable instrument point to an orderbook that is managed by the smart order router.
27	routingOrderBookFlags		Integer	This attribute is used by the orderbook router.
28	subscriptionGroupId		Integer	The id of the subscription group to which this tradable instrument belong
29	partitionId		Integer	This is the partition to which the TradableInstrument belong. The value is derived from the subscription group and maintained by the system.
30	forcedPartitionId		Integer	This is the forced partition to which the TradableInstrument belong. This attribute is used by the capacity planner application. If this value is changed during the day, the capacity planner will be forced to use the given partition for this instrument. If this value is null, the capacity planner function may use any partition. The forcedPartitionId is used to lock a tradableInstrument to a partition. The value null means that the tradable instruments partition is unlocked.
31	validFromDate		String (10)	The first date the tradable instrument is valid. The format is yyyy-MM-dd. If this optional data is not specified, the value from the tradable instrument's instrument will be used.
32	validToDate		String (10)	The last date the tradable instrument is valid. The format is yyyy-MM-dd. If this optional data is not specified, the value from the tradable instrument's instrument will be used.
33	numberOfShares		Long (64)	Currently not used by SET.
34	orderBookParameterSetId		String (128)	A reference to an OrderBookParameters object that holds the orderbook parameters for this tradableInstrument. In case this id is null, the default values will be retrieved from (in order) the parent Instrument, Segment, MarketList, Market or SystemDefault .
35	orderbookState		String	This is a volatile mirror of an orderbook state. This reflects the current orderbook state in ME as received by OrderBookStateChangeEvents
36	listOfAliases		String (256)	A list of other markets'/exchanges' ID of this tradable instrument in the format: market1:id1,market2:id2,...
37	tickSizeTableId		Integer	Key to the tick size table used by this TradableInstrument. Updates to this field is copied to the corresponding field in the orderbook.
38	tradableInstrumentData		String (64)	A reference to a tradable instrument specific data block. Typically expiration date etc.
39	tradableInstrumentType1Data		String (128)	Currently not used by SET.
40	tradableInstrumentType2Data		String (128)	Currently not used by SET.
41	tradableInstrumentType3Data		String (128)	Currently not used by SET.
42	tradableInstrumentType4Data		String (128)	Currently not used by SET.
43	tradableInstrumentType5Data		String (128)	Currently not used by SET.
44	tradableInstrumentType6Data		String (128)	Currently not used by SET.
45	tradableInstrumentType7Data		String (128)	Currently not used by SET.
46	tradableInstrumentType8Data		String (128)	Currently not used by SET.
47	combinationLegs		CombinationLeg[]	If this tradable instrument is a combination instrument this set holds references to the combination leg instruments. Note that this set may be null or empty, since child objects may be distributed in separate broadcasts.
48	isCombination		Boolean	Set to true if this tradable instrument is a combination tradable instrument.
49	adaptiveMicroAuctionSettingsId		Integer	A reference to a AdaptiveMicroAuctionSettings that applies to all TradableInstruments within this segment, unless a specific AdaptiveMicroAuctionSettings is referenced from a TradablInstrument.
50	combPriceType		Integer	Only applicable if the flag isCombinationBook is set. This parameter controls how a price in the combination book is interpreted: whether the price is a sum, an average or a quotient of the leg book prices.
Allowed values: see constant group CombPriceType

51	combTradeLegCalculationRule		Integer	Only applicable if the flag isCombinationBook is set. This parameter controls how prices are calculated in the leg books of a combination if two combination orders match.
Allowed values: see constant group CombTradeLegCalculationRule

52	contractSize	required	Long	The contract size for this future. If trading options in different currencies, different contract sizes may apply.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

53	expirationDate		String (12)	The expiration date for this future. The format is yyyy-mm-dd.
55	lastTradingDate		String (10)	The last date the instrument is open for trading. The format is yyyy-MM-dd.
56	corporateActionIndicator		String (24)	This attribute is used to indicate that this instrument has been subject to a Corporate Action.
57	underlyingReference		String (192)	Unique reference (internal id) to a underlying reference holding the underlying price for this future.
501	securityType	required	String	The type of security.
Allowed values: see constant group SecurityType

502	isOddLot		Boolean	True if odd lot.
503	upperPriceLimit		Long	The upper price limit of the price band.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

504	lowerPriceLimit		Long	The lower price limit of the price band.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

505	newListFlag		Boolean	The flag is applied by the system (when CA)and will be kept until there is a trade for the security. Used for index calculation. When delisted, it becomes disabled.
506	newListStockFlag		Boolean	The flag is applied by the CA on the first trading day of a security. The flag will be cleared by the system at end of first trading day regardless of trade or not.
507	stabilizationFlag		Boolean	Indicates the company is in the stabilization period.
508	allowShortSell		Boolean	True if the security is allowed for short selling.
509	allowShortSellOnNvdr		Boolean	True if the security is allowed for short selling on NVDR order.
510	allowNvdr	required	Integer	Specifies if the security is allowed for NVDR orders.
Allowed values: see constant group OrderTypeAllowed

511	allowTtf	required	Integer	Specifies if the security is allowed for Thai Trust Fund orders.
Allowed values: see constant group OrderTypeAllowed

512	suspendDate		String	Indicates date of trading suspension. (Part of the day halt.)
513	lastTradePrice		Long	Today's last traded price.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

514	closingDate		String	Closing date. Format yyyy-MM-dd.
515	previousClosingPrice		Long	Previous closing price.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

516	previousClosingDate		String	Closing date for previous closing price. Format yyyy-MM-dd.
517	beneficialSigns		String (126)	Indicates the security is traded without having the last announced benefit (EX-rights).
518	tradableInstrumentTypeData		TradableInstrumentTypeData[]	Extended attributes for the instrument depending on instrument type.
519	isValidForTrading	required	Boolean	True if this order book can be traded.
520	ric		String (256)	Reuters Identification Code identifying an instrument deriving from the Thomson Reuters source.
521	template		String (16)	Reference to an XML file describing how to parse the incoming Thomson Reuters page to a event broadcast.
522	circuitBreakerOrderBook		String (126)	Specifies the circuitbreaker for the orderbook.
523	cmvAdjustedSplit		Long	CMV adjusted split.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DIVISOR.DECIMAL.

524	cmvAdjusted		Long	CMV adjusted.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DIVISOR.DECIMAL.

525	cmvFirstTimeAdjusted		Boolean	CMV first time adjusted.
526	variable1		Long	General variable able to use by Index plugin.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DIVISOR.DECIMAL.

527	variable2		Long	General variable able to use by Index plugin.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DIVISOR.DECIMAL.

528	variable3		Long	General variable able to use by Index plugin.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DIVISOR.DECIMAL.

529	variable4		Long	General variable able to use by Index plugin.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DIVISOR.DECIMAL.

530	variable5		Long	General variable able to use by Index plugin.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DIVISOR.DECIMAL.

531	indexCalculation		Boolean	True if this security is included in SET Composite Index/or mai index. This also implies that this is a constituent stock in industry/sector/sub-sector Index. Will be used in index calculation.
532	memberOfAnyIndex		Boolean	True if this security is is part of an Index composition Element.
533	rfqReceiverMemberIdList		String (255)	A comma separated list of Member Ids to send RFQs to. If empty, send to none. Can be overridden by the rfqToAll parameter.
534	rfqToAll	required	Boolean	If set to true, RFQs will be public and the RFQ receivers list will be ignored.
535	temporaryPriceLimit		Long	Overrides the price limit calculation setting for trade reports.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DIVISOR.DECIMAL.

537	openInterest		Integer	The open interest.
538	settlementPrice		Long	The settlement price.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

539	referencePrice		Long	Used for derivatives (futures, options and combinations). For futures/options this is needed when CA update the reference price. When setting settlement price this will be set as well. Only this field will be affected by corporate action. For combinations, this field is set based on the priceLimitBase prices of the legs.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

542	triggerHaltAtPriceLimits		Boolean	A halt can be triggered if this Is set to true and priceBandLevelConfiguration is set on the segment or on TI level. The system will automatically set this attribute.
543	priceQuotationFactor		Long	The price quotation factor is used to calculate the total price for a trade. Some products may have contract size and PQF inequally set. Should use the same DECIMALS as contractSize"
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DECIMAL.

546	temporaryClosingPrice		Long	Should be used as At-The-Money price if set, otherwise closingPrice is used as the At-The-Money. This is used for generation of options, in order to generate new options when the At-The-Money price moves during the day.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.DIVISOR.PRICE.

547	previousShortNameBeforeCa		String (256)	Set if shortName is changed due to corporate action (adjustementfactor or change name). This attribute holds the shortName before corporate action.
552	settlementDate		String (32)	Should be set at the same time as the settlementprice is set, set to the current date. Format yyyy-MM-dd.
553	generationTime		String (128)	Used for SCILA in order to know what time of today the tradable instrument was created if created by series generation or manually created. This field will only be set for futures and options. This field is a string with the time defined.
555	delivery		Integer	Describes if the delivery of the contract is physical, in cash or if it can be either of them. Cash is the default value.
Allowed values: see constant group DeliveryType

556	lastTradingTime		String (12)	The last trading time on the last trade date. Format HH.MM.SS.sss
557	startUpReferencePrice		Long	Display the referencePrice set at start of the day. Should be set the same as referencePrice at start of the day.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

558	affectedByCA		Boolean	Will be set to true on derivatives TI when the TI is affected by a CA (for derivatives), will be cleared in the morning.
559	generationShortName		String	If set, this will be used instead of shortName when generating tradable instrument (like future and options) based on N syntax.
560	spotClosingPrice		Long	Previous closing price.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

561	cancelOrdersAffectedByCA		Boolean	This flag indicate that ME should cancel all orders if relevant flag is set on tstae transition.
562	excludeFromCA		Boolean	This flag indicate that the TI should not be affected by CA that day.
563	namingRule		String (64)	This is the rule for the Tradable Instrument's shortName to be able to handle the corporateActionIndicator. This rule is only valid for combinations.
564	referenceDate		String (32)	Should be set at the same time as the reference price is set, set to the current date. Format yyyy-MM-dd.
565	combinationNameDelimiter		String (64)	Delimiter used in the combination tradable instrument's short name to indicate where information regarding the different combination legs is located.
566	delimiterIsHidden		Boolean	If set to true, the combinationNameDelimiter should not be present in the tradable instrument's short name.
567	useFinalLevel		Boolean	If set to true, the second level of the priceband should be used for calculating the pricelimits.
Message: TradableInstrumentReference

Message ID: 620

Type: Market and Instrument Messages

Description: This object is an intermediate object when referencing an underlying. The underlying reference can according to the expiration rules specified.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
9	name		String (64)	Name.
10	isAlias	required	boolean	If set to true it can act as an alias. If set to false means there is only one TradableInstrumentReference referencing the same TradableInstrument.
11	tradableInstrumentId		String	The reference to a TradableInstrument.
12	expiration		String (12)	The expiration for this alias. One of 1m, 2m, 3m.. I.e. it is set to always represent (reference) the nearest 3 month (3m) contract.
13	expirationRuleId	required	Long	A reference to the Expiration settings that apply to the elements defined in this object.
14	generationDayOffsetFromExpiration	required	int	Offset in days from expiration when the alias is to change reference to another tradable instrument. If set to 1, the reference will change one day before expiration.
15	instrumentId		String	Specifies the Instrument from where to look for underlying trading instrument when using expiration rules.
16	internalId		String (192)	A unique identifier set by system.
17	currencyId		String (3)	The currency code according to ISO 4217
Message: View

Message ID: 297

Type: Market and Instrument Messages

Description: A View represents a "view" of TradableInstruments within a market. The system automatically maintains view(s) that contains all tradable instruments per market/instrument type. Views can also be manually created by a market operator if the system views are not sufficient.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	viewId		String (128)	A unique view identifier. Example: SP500
8	marketId	required	String (64)	The market to which this view belong. The id is the id used to identify the Market element.
9	name	required	String (255)	The view full name. Example: Standard and Poor's 500 Index
10	viewElements		ViewElement[]	A set of ViewElement child objects. Note that this set may be null or empty, since child objects may be distributed in separate broadcasts.
13	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
16	detail		String (255)	Optional detailled view information.
17	enabled		Boolean	The administrative state of this item.
18	isSystemView		Boolean	If set to true, this view is a system view. A view marked as "system view" cannot be deleted nor can tradable instruments be added manually to this view.
Message: ViewElement

Message ID: 298

Type: Market and Instrument Messages

Description: A ViewElement is a child objet to a View and is used as a helper object to reference a TradableInstrument via the attribute internalTradableInstrumentId.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	viewElementId		String (128)	The internal id of the view element. Internal use only, not to be used/interpreted in any way.
9	internalTradableInstrumentId		String (192)	The internal id of a TradableInstrument. Internal use only, not to be used/interpreted in any way.
10	parentInternalId	required	String (128)	The parent view id (for EMAPI).
13	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: Market

Message ID: 299

Type: Market and Instrument Messages

Description: Defines a market. The interpretation of what a market represent is customer specific. Some operations on a market, such as halt, enable and disable, will affect all child objects (MarketLists, Segments and all related TradableInstruments) within the market.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	marketId	required	String (64)	A system-unique identifier of the Market. May only contain characters a-z, A-Z, 0-9, "_", "-", "+" and ".".
8	isEnabled		Boolean	The administrative state of this item. If it is set to false, all orderbooks at this and all levels below will be set to a persistent full-halt state.
9	disabledCount		Integer	A count of how many times this element has been enabled/disabled. An element will not be enabled until disabledCount is zero.
10	name	required	String (255)	The name of the Market.
11	countryCode	required	String (16)	The country code for this market.
12	wwwPage		String (256)	A reference to a market specific internet site.
13	orderBookParameterSetId		String (128)	A reference to an OrderBookParameters object that holds the orderbook parameters for this market. In case this id is null, the default values will be retrieved from (in order) the Segment, MarketList, Market or SystemDefault .
14	orderBookRuleGroupParameterSetId		String (128)	A reference to an OrderBookRuleGroupParameters object that holds the trading parameters for this market. In case this id is null, the default values will be retrieved from (in order) the Segment, MarketList, Market or SystemDefault .
15	marketLists		MarketList[]	A set containing child objects of type MarketList. Note that this set may be null or empty, since child objects may be distributed in separate broadcasts.
18	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
19	validFromDate		String (10)	The first date the ,arket is valid. The format is yyyy-MM-dd.
501	isOddLot		Boolean	Is set to true for odd lot markets.
502	relatedMarket		String (64)	Is set if this market is related to another marker (example point to SET main market from the SET odd lot market).
503	marketStatisticSubscriptionGroup		Integer	The subscriptiongroup used for market statistics.
Message: MarketList

Message ID: 300

Type: Market and Instrument Messages

Description: The MarketList is a child object of a Market. The purpose of the MarketList is mainly to organize the different instruments on a market into separate lists. The actual interpretation of the MarketList is customer specific. Operations such as halt and enable/disable performed on a MarketList will affect all Segments and TradableInstruments within the MarketList.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	internalMarketListId		String (128)	The internal (unique) id of the MarketList. It is assumed that the internalMarketListId is null for a new MarketList.
8	isEnabled		Boolean	The administrative state of this item. If is enabled is set to false, all orderbooks at this and all levels below will be set to a persistent full-halt state.
9	disabledCount		Integer	A count of how many times this element has been enabled/disabled. An element will not be enabled until disabledCount is zero.
10	marketListId	required	String (128)	The display id of the MarketList. Must be unique within the Market. May only contain characters: a-z, A-Z, 0-9, "_", "-", "+" and ".".
11	name	required	String (255)	This is the name of this Market
12	parentInternalId	required	String (128)	The parent market id (EMAPI).
13	defaultPartition	required	Integer	The default partition for all segments in this market list. Used when creating new segments "on the fly" and when no partition is defined.
14	orderBookParameterSetId		String (128)	A reference to an OrderBookParameters object that holds the orderbook parameters for this MarketList. In case this id is null, the default values will be retrieved from (in order) the Segment, MarketList, Market or SystemDefault .
15	orderBookRuleGroupParameterSetId		String (128)	A reference to an OrderBookRuleGroupParameters object that holds the trading parameters for this MarketList. In case this id is null, the default values will be retrieved from (in order) the Segment, MarketList, Market or SystemDefault .
16	segments		Segment[]	A set containing Segments related to this MarketList. Note that this set may be null or empty, since child objects may be distributed in separate broadcasts.
19	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
20	validFromDate		String (10)	The first date the market list is valid. The format is yyyy-MM-dd.
Message: Segment

Message ID: 302

Type: Market and Instrument Messages

Description: A Segment is a grouping of TradableInstruments that share the same trading rules. Operations on a segment, such as halt and enable/disable affects all tradable instruments related to the segment. A Segment is a child objetc to MarketList.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	internalSegmentId		String (128)	The cache (unique) id of the Segment. The internalSegmentId field is assigned by the system.
8	isEnabled		Boolean	The administrative state of this item. If is enabled is set to false, all orderbooks at this and all levels below will be set to a persistent full-halt state.
9	disabledCount		Integer	A count of how many times this element has been enabled/disabled. An element will not be enabled until disabledCount is zero.
10	segmentId	required	String (128)	The display id of the Segment. Must be unique within the parent MarketList. May only contain characters: a-z, A-Z, 0-9, "_", "-", "+" and ".".
11	parentInternalId	required	String (128)	The parent MarketList id (EMAPI).
12	name	required	String (255)	The name of this Segment
14	tickSizeTableId		Integer	A reference to a tick size table that applies to all TradableInstruments within this segment, unless a specific tick size table is referenced from a TradablInstrument.
15	defaultPartition	required	Integer	The default partition for all TradableInstruments created "on the fly" within this segment. If not specified, the parent MarketList default partition is used.
16	partitionList	required	String (128)	This is a system-maintained list of all partitions that this segment covers.
17	orderBookParameterSetId		String (128)	A reference to an OrderBookParameters object that holds the orderbook parameters for this segment. In case this id is null, the default values will be retrieved from (in order) the Segment, MarketList, Market or SystemDefault .
18	orderBookRuleGroupParameterSetId		String (128)	A reference to an OrderBookRuleGroupParameters object that holds the trading parameters for this segment. In case this id is null, the default values will be retrieved from (in order) the Segment, MarketList, Market or SystemDefault .
21	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
22	validFromDate		String (10)	The first date the segment is valid. The format is yyyy-MM-dd.
23	activeTradingSchedule		Integer	Volatile data, not stored in the database. This is the current active trading schedule for this segment. Which schedule that is active is retrieved from ME based on the type of day (NORMAL, HALF_DAY or CLOSED) and if the schedule is a "normal" or a temporary schedule.
24	secondaryTradingSchedule		Integer	Volatile data, not stored in the database. This is the current temporary trading schedule for this segment. Which schedule that is temporary is retrieved from ME based on the type of day (NORMAL, HALF_DAY or CLOSED) and if the schedule is a "normal" or a temporary schedule.
25	adaptiveMicroAuctionSettingsId		Integer	A reference to a AdaptiveMicroAuctionSettings that applies to all TradableInstruments within this segment, unless a specific AdaptiveMicroAuctionSettings is referenced from a TradablInstrument.
501	compositeIndexId		Long	The default index used for this segment. If the indexCalculation attribute is set for the Tradable Instrument then it is included in the index.
502	industrySectorSubsectorIndexFlag		Boolean	True if the Tradable Instruments within this segment is to be part of industry, sector and sub sector indices.
503	synchronizeAdjClosingPriceWith		String	Foreign and odd lot close prices used for price band calculation (adj Closing price) must be the same as for the main market. The attribute will contain the segment to synchronize with. Synchronize with the Tradable Instrument for the same Instrument in the segment that is pointed to.
504	circuitBreakerOrderBook		String (126)	Specifies the circuitbreaker for the segment.
505	excludeFromChangeMarketStatistics		Boolean	The segment is not part of MarketStatistics.
506	quoteRule		Integer	Indicates which quote rule to use for the segment.
Allowed values: see constant group QuoteRule

507	priceLimitBase		Integer	The type of value that should be used as base price for price limit. Need to be set in order to calculate price bands.
Allowed values: see constant group PriceLimitBaseType

508	priceLimitAdjust		Integer	The type of value that should be used as adjustment price for price limit. Need to be set in order to calculate price bands.
Allowed values: see constant group PriceLimitAdjustType

511	rfqToAll		Boolean	If set to true, RFQs will be public and the RFQ receivers list will be ignored.
512	rfqReceiverMemberIdList		String (255)	A comma separated list of Member Ids to send RFQs to. If empty, send to none. Can be overridden by the rfqToAll parameter.
517	priceBandHaltConfigurationName		String (64)	If specified, this configuration should be used, and enable trigger halt by configured TI(s).
518	minimumAllowedOpenQty		Long	If set an iceberg order is not allowed to be entered with openQty less than this value. If not set the openQty is not allowed to be less than the round-lot size.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

520	settlementReferencePriceTickSizeId		Integer	The ticksize-table that should be used for settlement prices and reference prices.
Message: CombinationLeg

Message ID: 303

Type: Market and Instrument Messages

Description: A combination order book is described by the combination definition, which defines what a bid order with volume one in the combination order book means in the order books spanned by the combination. The combination definition is made up of two or more combination definition legs.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	combinationTradableInstrumentId		String (192)	This field is used internally in the cache.
8	legRatio		Integer	What volume an order with volume 1 in the combination book represents in this leg order book.
9	legIsBid		Boolean	What operation a bid order in the combination book represents in this leg order book.
10	tradableInstrumentId		String (128)	This is a redundant field, as it represents the same relation as the tradableInstrument relation below. However, right now there must be two differently declared attributes, one for the auto generated cache and one for EMAPI.
11	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
12	displayOrder		Integer	The order that the individual combination legs are to be displayed. This field is not interpreted in any way by the server. It is up to the client application to maintain this value.
Message: GenerationRule

Message ID: 538

Type: Market and Instrument Messages

Description: A GenerationRule defines rules how to automatically generate instrument series. The type of instruments generated (futures, options etc) is determined by attributes specified in the GenerationRuleData object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
8	generationRuleId		Long	A unique generation rule identifier.
9	name	required	String (255)	The display name for this generation rule.
10	generationRuleData		GenerationRuleData	Volatile blob
12	expirationRuleId	required	Long	A reference to the Expiration settings that apply to the elements defined in this object.
Message: CombinationRule

Message ID: 591

Type: Market and Instrument Messages

Description: A CombinationRule defines rules how to automatically generate combination instruments. The type of instruments generated (futures, options etc) is determined by attributes specified in the CombinationRuleData object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
8	combinationRuleId		Long	A unique combination rule identifier.
9	name	required	String (255)	The display name for this combination rule.
10	combinationRuleData		CombinationRuleData	Volatile blob
11	expirationRuleId	required	Long	A reference to the expiration rule settings that apply to the elements defined in this object.
501	allowDifferentContractSize		Boolean	Defines if combinations should be generated or not based on legs having different contract size.
Message: ExpirationRule

Message ID: 604

Type: Market and Instrument Messages

Description: Class holding instrument expiration generation rules.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
8	expirationRuleId		Long	A unique expiration identifier.
9	name	required	String (255)	The display name for this expiration table.
10	rules	required	String (255)	Defines when expiration shall take place inside specified time periods.
Consists of several expiration rules separated by whitespaces.

Each expiration rule consists of an expiration symbol and an expiration definition, which are separated by the equal sign character (i.e. '=').

The expiration symbol defines the time period for which the expiration definition applies for:

The first expiration rule must have an expiration symbol that is either OffsetIntervalSymbol.WEEK or OffsetIntervalSymbol.MONTH.
The remaining expiration rules must have expiration symbols that comes in a certain order with regards to the previous expiration rule's expiration symbol:
OffsetIntervalSymbol.MONTH must be preceed by OffsetIntervalSymbol.WEEK
OffsetIntervalSymbol.ODD_MONTH, OffsetIntervalSymbol.EVEN_MONTH or OffsetIntervalSymbol.QUARTER must be preceed by OffsetIntervalSymbol.MONTH
OffsetIntervalSymbol.HALF_YEAR must be preceed by either OffsetIntervalSymbol.MONTH, OffsetIntervalSymbol.ODD_MONTH, OffsetIntervalSymbol.EVEN_MONTH or OffsetIntervalSymbol.QUARTER
OffsetIntervalSymbol.YEAR must be preceed by either OffsetIntervalSymbol.MONTH, OffsetIntervalSymbol.ODD_MONTH, OffsetIntervalSymbol.EVEN_MONTH, OffsetIntervalSymbol.QUARTER
The last expiration rule must have an expiration symbol that is OffsetIntervalSymbol.YEAR.
The expiration definition specifies when in the expiration symbol's time period the expiration shall take place:
The OffsetIntervalSymbol.WEEK expiration symbol must have an expiration definition that is an English weekday (e.g. Friday).
Example: An expiration rule equal to "w=Monday" means that inside a week the expiration will take place on a Monday.

The OffsetIntervalSymbol.MONTH expiration symbol must have an expiration definition that consists of:
OffsetIntervalSymbol.DAY followed by an integer between (and including) -15 and 15 but excluding 0 if part of the first expiration rule.
A positive integer counts non-closed days from the start of the month (i.e. d1 means the first non-closed day in the month). A negative integer counts non-closed days from the end of the month (i.e. d-1 means the last non-closed day in the month).

Examples:

An expiration rule equal to "m=d-3" means that inside a month the expiration will take place on the third non-closed day counting from the end of the month.
An expiration rule equal to "m=d2" means that inside a month the expiration will take place on the second non-closed day counting from the start of the month.
OffsetIntervalSymbol.WEEK followed by an integer between (and including) -2 and 4 but excluding 0 otherwise.
A positive integer counts weeks from the start of the month (i.e. w1 means the first week in the month). A negative integer counts weeks from the end of the month (i.e. w-1 means the last week in the month).

Examples:

An expiration rule equal to "m=w-2" means that inside a month the expiration will take place in the second week counting from the end of the month.
An expiration rule equal to "m=w1" means that inside a month the expiration will take place in the first week counting from the start of the month.
The other expiration symbols must must have an expiration definition consisting of a positive integer followed by the expiration symbol of the previous expiration rule, which in its turned is followed by a positive integer that is equal to or less than the first integer.
The first integer specifies the number of the previous expiration symbol's time periods that the expiration rules' expiration symbol's time period consists of.
The second integer counts previous expiration symbol's time periods from the start of the expiration rules' expiration symbol's time period.
Examples:
An expiration rule equal to "o=2m1" means that OffsetIntervalSymbol.ODD_MONTH consists of 2 months and the expiration will take place in the first month of these 2 months.
An expiration rule equal to "y=6o4" means that OffsetIntervalSymbol.YEAR consists of 6 OffsetIntervalSymbol.ODD_MONTH:s and the expiration will take place in the fourth OffsetIntervalSymbol.ODD_MONTH of the year.
Examples of expiration rules:
"w=friday m=w-1 q=3m3 y=4q4"
"m=d1 o=2m1 h=3o1 y=2h1"
Special symbols: In addition to the symbols described above there are symbols with special meaning. The symbol OffsetIntervalSymbol.TODAY represents the current date (the date that the calculation of expiration date is based on) and the preceeding numeric (positive) value is added to that date to get the expiration date. This symbol cannot exist in any expiration rule but is predefined.
11	adjustForwardAtHolidays		Boolean	Shall be specified if (and only if) the first expiration rule has an expiration symbol that is OffsetIntervalSymbol.WEEK.
Specifies if an expiration date, if not a non closed date, shall be adjusted forward (alternative backward) in the calendar to the closest non closed date.

12	holidayCalendars	required	String (255)	A comma-separated list of references to DateCollection objects holding holidays, normally country names.
502	adjustNotationDate		Integer	Offset in days from validForm. If set to 0, trade date is the same as validForm.
Message: StrategyLegGroup

Message ID: 626

Type: Market and Instrument Messages

Description: Class holding groups of strategy legs

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	strategyLegs	required	StrategyLeg[]	Array of items containing groups of strategy legs defining the legs in the combinations to be generated
Message: StrategyLeg

Message ID: 603

Type: Market and Instrument Messages

Description: Class holding one leg in a generation rule for the generation of combinations with certain strategies.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	instrumentType	required	String	
Allowed values: see constant group InstrumentType

2	expiration	required	String	An expiration (possibly relative) defining the derivative expiration month to match. See expirationList in GenerationRule.
3	isBid	required	boolean	true if this leg represents the bid side of a combination.
4	ratio	required	int	This leg's ratio in the combination, to be applied to the ratio field of a combination leg.
5	isCallOption		Boolean	null if the leg represents a future, true if it represents a call option in a call spread an false if it represents a put option in a put spread.
6	isAtm		Boolean	null if the leg represents a future, true if it represents an option in a call or put spread that represents the strike price closest to the ATM.
Message: StrikeParameters

Message ID: 541

Type: Market and Instrument Messages

Description: Class holding instrument strike generation rules.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	strikeIntervalTableReference	required	Long	A reference to the strike interval table used.
2	numberOfStrikesCallInTheMoney		Integer	The number of call options to generate, which strike prices are at or better than the At-the-Money price.
The first In-the-Money call option will have a strike price that is either equal to or the closest better price to the At-the-Money price, which fulfills the prices allowed by specified StrikePriceTable.

The following In-the-Money call options will have strike prices that are:

better than the first In-the-Money call option's strike price
incremented according to specified StrikePriceTable
3	numberOfStrikesCallOutOfTheMoney		Integer	The number of call options to generate, which strike prices are worse than the At-the-Money price.
The first Out-of-the-Money call option will have a strike price that is the closest worse price to the At-the-Money price, which fulfills the prices allowed by specified StrikePriceTable.

The following Out-of-the-Money call options will have strike prices that are:

worse than the first Out-of-the-Money call option's strike price
incremented according to specified StrikePriceTable
4	numberOfStrikesPutInTheMoney		Integer	The number of put options to generate, which strike prices are at or worse than the At-the-Money price.
The first In-the-Money put option will have a strike price that is either equal to or the closest worse price to the At-the-Money price, which fulfills the prices allowed by specified StrikePriceTable.

The following In-the-Money put options will have strike prices that are:

worse than the first In-the-Money put option's strike price
incremented according to specified StrikePriceTable
5	numberOfStrikesPutOutOfTheMoney		Integer	The number of put options to generate, which strike prices are better than the At-the-Money price.
The first Out-of-the-Money put option will have a strike price that is the closest better price to the At-the-Money price, which fulfills the prices allowed by specified StrikePriceTable.

The following Out-of-the-Money put options will have strike prices that are:

better than the first Out-of-the-Money put option's strike price
incremented according to specified StrikePriceTable
501	numberOfStrikesItm		Integer	The number of strikes to generate In-the-Money (for for put and call).
502	numberOfStrikesOtm		Integer	The number of strikes to generate Out-the-Money (for for put and call).
Message: GenerationRuleData

Message ID: 542

Type: Market and Instrument Messages

Description: Class holding instrument generation rules settings.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
3	strikeParameters		StrikeParameters	A reference to the StrikeParameters settings that apply to the elements defined in this object.
7	instrumentReferences		String[]	Array of instrument internal ids referring to instruments that represent underlyings and subjects to generation of various instruments and tradable instruments (like futures, options and combinations)
9	templateFuture	required	FutureTradableInstrument	A reference to a FutureTradableInstrument object used as template for this generation rule when the target is the generation of futures.
10	templateOption	required	OptionTradableInstrument	A reference to a OptionTradableInstrument object used as template for this generation rule when the target is the generation of futures.
13	templateInstrument	required	Instrument	A reference to an Instrument object used as template for this generation rule when creating the parent instrument of generated derivative tradable instruments.
15	expirationList	required	String	A list of whitespace separated expirations to generate. An expiration consists of an expiration offset (=a positive integer) directly followed by an expiration symbol. The expiration symbol must exist in the referred ExpirationRule. N.B. OffsetIntervalSymbol.WEEK is disallowed here as the lowest resolution is month. 
E.g. "1m 3m 2q 1y" means that the first monthly, third monthly, second quarterly and the first yearly expiration from the start date shall be generated.
Relative expirations are possible to be specified, in which case the expiration consists of '+' (including possible whitespace) separated ordinary expirations. A relative expiration is calculated by calculating the expiration one by one from the left, where the first expiration use the ordinary start date but the following expirations use the first day of the month after the previous calculated expiration as start date. 
E.g. "1m+1q+1y" means that a yearly expiration shall be generated using the first day of month after the "1m+1q" expiration as start date, where "1m+1q" means the quarterly expiration using the first day of month after the first monthly expiration as start date.

16	generationDayOffsetFromExpiration	required	int	Offset in days from expiration when the next set of options expirations are to be generated. If set to 1, the generation of next set of options with respect to expiration starts at the day before expiration in this month.
18	resolveInstrumentReference	required	boolean	If instrumentReference points to a TradableInstrumentReference that is a alias the underlyingReference on the generated derivate tradable instrument will be set to point to the true underlying, not the alias.
Message: CombinationRuleData

Message ID: 592

Type: Market and Instrument Messages

Description: Class holding combination instrument rules settings.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	instrumentReferences		String[]	Array of instrument internal ids referring to instruments that represent underlyings and subjects to generation of various instruments and tradable instruments (like futures, options and combinations)
3	templateInstrument	required	Instrument	A reference to an Instrument object used as template for this generation rule when creating the parent instrument of generated derivative tradable instruments.
4	templateCombination	required	TradableInstrument	A reference to a TradableInstrument object used as template when generating combination tradable instruments.
7	strategyType	required	String	String defining the strategy to set up
Allowed values: see constant group CombinationStrategyType

9	combinationNameDelimiter	required	String	Delimiter used in the combination template tradable instrument's short name to indicate where information regarding the different combination legs is located.
Example: The delimiter is "/" in the templates short name ERICB_%T_%s_%lM%y/%lM%y. I.e. the "%lM%y" before "/" relates to the first leg and the "%lM%y" after "/" relates to the second leg. (N.B. %lM and %y will be replaced by the leg's derivative's expiration month respectively year.)

See also the field delimiterIsHidden.

12	generationDayOffsetFromExpiration	required	int	Offset in days from expiration when the next set of options expirations are to be generated. If set to 1, the generation of next set of options with respect to expiration starts at the day before expiration in this month.
13	delimiterIsHidden		Boolean	If set to true, the combinationNameDelimiter will not be present in the generated tradable instrument's short name.
15	resolveInstrumentReference	required	boolean	If instrumentReference points to a TradableInstrumentReference that is a alias the underlyingReference on the generated derivate tradable instrument will be set to point to the true underlying, not the alias.
16	strategyLegGroups	required	StrategyLegGroup[]	Array of items defining the legs in the combinations to be generated
Message: StrikePriceTable

Message ID: 556

Type: Market and Instrument Messages

Description: A strike price table defines the increments between strike prices and is used when generating option instruments. It resembles somewhat to a tick size table.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
8	strikePriceTableId		Long	A unique strike price table identifier.
9	name	required	String (255)	The display name for this strike price table.
10	strikePriceIntervals		StrikePriceIntervals	Volatile blob
Message: StrikePriceIntervals

Message ID: 557

Type: Market and Instrument Messages

Description: Class holding strike price intervals that apply when generating derivate instruments. This table resembles somewhat to a tick size table, but the rows herein are store as an array. In the database, this object is stored as a blob.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	rows		StrikePriceIntervalRow[]	Array of intervals specifying offset from the start date when the interval between dates applies, the increment that applies in the interval and the unit used for specifying the offset and the increment for the specific row/interval.
Message: StrikePriceIntervalRow

Message ID: 558

Type: Market and Instrument Messages

Description: Object holding a specific strike price interval starting from a particular price offset.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	startOffset	required	long	Offset where this new strike price interval is to take effect.
2	increment	required	long	Price increment in this interval.
Message: GenerationResult

Message ID: 564

Type: Market and Instrument Messages

Description: The result of a series generation request. The returned instrument array contains the generated instruments.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	instruments		InstrumentGenerationResult[]	Array of instruments. Depending on the rule used, each instrument may contain a set of tradable instruments.
3	options		OptionGenerationResult[]	Array of option instruments. Depending on the rule used, each instrument may contain a set of option tradable instruments (with various type, expirations and strikes).
4	generationRuleUsed		long	The identity of the Generation Rule that was used for this series generation.
5	futures		FutureGenerationResult[]	Array of future instruments. Depending on the rule used, each instrument may contain a set of future tradable instruments (with various expirations).
Message: InstrumentGenerationResult

Message ID: 579

Type: Market and Instrument Messages

Description: The result of a series generation request. The returned instrument array contains the generated instruments and generated tradable instruments (if any) for each instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
43	instrument		Instrument	The instrument generated. N.B. the Set of tradableInstruments is empty.
44	tradableInstruments		TradableInstrument[]	Array of tradable instruments that make up the result of the generation.
Message: OptionGenerationResult

Message ID: 580

Type: Market and Instrument Messages

Description: The result of a series generation request. The returned instrument array contains the generated option instruments.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
46	optionTradableInstruments		OptionTradableInstrument[]	Array of option tradable instruments (i.e. strikes) that make up the result of the generation.
48	parentInstrument		Instrument	The instrument generated. N.B. the Set of tradableInstruments is empty.
Message: FutureGenerationResult

Message ID: 586

Type: Market and Instrument Messages

Description: The result of a series generation request. The returned instrument array contains the generated future instruments.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	parentInstrument		Instrument	The instrument generated. N.B. the Set of tradableInstruments is empty.
2	futureTradableInstruments		FutureTradableInstrument[]	Array of future tradable instruments (i.e. strikes) that make up the result of the generation.
Message: AtTheMoneyData

Message ID: 581

Type: Market and Instrument Messages

Description: Holds a pair of tradable instrument id and an ATM (at-the-money value)

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
2	atmValue		long	ATM value retrieved by the central server. The value return is implementation and exchange specific.
3	underyingId		String	Reference to the underlying's instrument (I, FI, OI, TI, FTI, OTI) in the currency depicted by the GenerationRuleData rule. (Traded currency is defined in the template tradable instrument.)
Message: Country

Message ID: 316

Type: Market and Instrument Messages

Description: Holds basic information on a country, such as currency, time zone and holidays.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	countryId	required	String (16)	The id (country code) of the Country. Use ISO 3166 ISO 2-alpha codes.
8	name	required	String (128)	The name of the Country
9	currency	required	String (3)	The currency code according to ISO 4217.
10	timezoneOffset	required	Integer (32)	Timezone offset from UTC/GMT in minutes (positive value for countries east of Greenwich)
11	holidaySchedules		HolidaySchedule[]	A set of HolidaySchedule child objects. Note that this set may be null or empty, since child objects may be distributed in separate broadcasts.
14	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: GenericInstrumentData

Message ID: 317

Type: Market and Instrument Messages

Description: This object holds unspecified (generic) instrument data that may be referenced from an Instrument. A reverse reference to the Instrument is stored in the internalInstrumentId attribute. The interpretation, type and contents of the data is customer specific. The actual data is stored in a customer specific extension to this object (GenericInstrumentDataExt).

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	internalInstrumentId		String (128)	The internal id of the Instrument for which this data applies. The id is the same internal id as identifies the Instrument.
8	instrumentId	required	String (64)	The global identity of the instrument. The type of identifier (ISIN, CUSIP etc) is defined by the instrumentIdType attribute.
9	instrumentIdType	required	String (32)	The type of the InstrumentId (ISIN, CUSIP etc)
Allowed values: see constant group InstrumentIdType

10	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: IndustrySector

Message ID: 318

Type: Market and Instrument Messages

Description: The IndustrySector contains mapping between an "Industry Sector" code (GICS, ICB or NAICS or whatever) and the textual description.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	sectorCode	required	String (16)	Sector code, for example 12
8	sector		String (12)	Sector short name, for example FOOD
9	industryGroup		String (12)	The Industry Group part of the sector code (2010 (Capital Goods), for example)
10	industry		String (12)	Industry short name, for example AGRO
11	subIndustry		String (12)	The Sub Industry part of the sector code (20101010 (Aerospace and Defense again...), for example)
12	description		String (255)	A description of the business the code identifies
13	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
501	industryCode	required	String (16)	The industry code.
502	industryFullName	required	String (256)	The name of the industry.
503	sectorFullName	required	String (256)	The name of the sector.
506	sectorIndex		Long	Reference to the sector index (IndexComposition).
507	industryIndex		Long	Reference to the industry index (IndexComposition).
Message: InstrumentType1Data

Message ID: 319

Type: Market and Instrument Messages

Description: This object holds InstrumentType1Data instrument data that may be referenced from an Instrument. A reverse reference to the Instrument is stored in the internalInstrumentId attribute. The interpretation, type and contents of the data is customer specific. The actual data is stored in a customer specific extension to this object (InstrumentType1DataExt).

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	instrumentType1DataId		String (128)	The internal id of the Instrument for which this data applies. The id is the same internal id as identifies the Instrument.
8	instrumentType1DataName		String (255)	Name of the instrument type1 data.
9	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: InstrumentType2Data

Message ID: 320

Type: Market and Instrument Messages

Description: This object holds InstrumentType2Data instrument data that may be referenced from an Instrument. A reverse reference to the Instrument is stored in the internalInstrumentId attribute. The interpretation, type and contents of the data is customer specific. The actual data is stored in a customer specific extension to this object (InstrumentType2DataExt).

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	instrumentType2DataId		String (128)	The internal id of the Instrument for which this data applies. The id is the same internal id as identifies the Instrument.
8	instrumentType2DataName		String (255)	Name of the instrument type1 data.
9	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: InstrumentType3Data

Message ID: 321

Type: Market and Instrument Messages

Description: This object holds InstrumentType3Data instrument data that may be referenced from an Instrument. A reverse reference to the Instrument is stored in the internalInstrumentId attribute. The interpretation, type and contents of the data is customer specific. The actual data is stored in a customer specific extension to this object (InstrumentType3DataExt).

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	instrumentType3DataId		String (128)	The internal id of the Instrument for which this data applies. The id is the same internal id as identifies the Instrument.
8	instrumentType3DataName		String (255)	Name of the instrument type1 data.
9	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: InstrumentType4Data

Message ID: 322

Type: Market and Instrument Messages

Description: This object holds InstrumentType4Data instrument data that may be referenced from an Instrument. A reverse reference to the Instrument is stored in the internalInstrumentId attribute. The interpretation, type and contents of the data is customer specific. The actual data is stored in a customer specific extension to this object (InstrumentType4DataExt).

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	instrumentType4DataId		String (128)	The internal id of the Instrument for which this data applies. The id is the same internal id as identifies the Instrument.
8	instrumentType4DataName		String (255)	Name of the instrument type1 data.
9	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: InstrumentType5Data

Message ID: 323

Type: Market and Instrument Messages

Description: This object holds InstrumentType5Data instrument data that may be referenced from an Instrument. A reverse reference to the Instrument is stored in the internalInstrumentId attribute. The interpretation, type and contents of the data is customer specific. The actual data is stored in a customer specific extension to this object (InstrumentType5DataExt).

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	instrumentType5DataId		String (128)	The internal id of the Instrument for which this data applies. The id is the same internal id as identifies the Instrument.
8	instrumentType5DataName		String (255)	Name of the instrument type1 data.
9	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: InstrumentType6Data

Message ID: 324

Type: Market and Instrument Messages

Description: This object holds InstrumentType6Data instrument data that may be referenced from an Instrument. A reverse reference to the Instrument is stored in the internalInstrumentId attribute. The interpretation, type and contents of the data is customer specific. The actual data is stored in a customer specific extension to this object (InstrumentType6DataExt).

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	instrumentType6DataId		String (128)	The internal id of the Instrument for which this data applies. The id is the same internal id as identifies the Instrument.
8	instrumentType6DataName		String (255)	Name of the instrument type1 data.
9	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: InstrumentType7Data

Message ID: 325

Type: Market and Instrument Messages

Description: This object holds InstrumentType7Data instrument data that may be referenced from an Instrument. A reverse reference to the Instrument is stored in the internalInstrumentId attribute. The interpretation, type and contents of the data is customer specific. The actual data is stored in a customer specific extension to this object (InstrumentType7DataExt).

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	instrumentType7DataId		String (128)	The internal id of the Instrument for which this data applies. The id is the same internal id as identifies the Instrument.
8	instrumentTypeDataName		String (255)	Name of the instrument type1 data.
9	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: InstrumentType8Data

Message ID: 326

Type: Market and Instrument Messages

Description: This object holds InstrumentType8Data instrument data that may be referenced from an Instrument. A reverse reference to the Instrument is stored in the internalInstrumentId attribute. The interpretation, type and contents of the data is customer specific. The actual data is stored in a customer specific extension to this object (InstrumentType8DataExt).

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	instrumentType8DataId		String (128)	The internal id of the Instrument for which this data applies. The id is the same internal id as identifies the Instrument.
8	instrumentTypeDataName		String (255)	Name of the instrumenTypeData.
9	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: TradableInstrumentData

Message ID: 327

Type: Market and Instrument Messages

Description: This object holds unspecified tradable instrument data that may be referenced from a TradableInstrument. A reverse reference to the tradableInstrument is stored in the internalInstrumentId attribute. The interpretation, type and contents of the data is customer specific. The actual data is stored in a customer specific extension to this object (TradableInstrumentDataExt).

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	internalTradableInstrumentId	required	String (192)	The internal id of the TradableInstrument for which this data applies. The id is the same internal id as identifies the TradableInstrument.
8	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: TradableInstrumentType1Data

Message ID: 328

Type: Market and Instrument Messages

Description: This object holds TradableInstrumentType1Data instrument data that may be referenced from a TradableInstrument. A reverse reference to the tradableInstrument is stored in the internalInstrumentId attribute. The interpretation, type and contents of the data is customer specific. The actual data is stored in a customer specific extension to this object (TradableInstrumentType1DataExt).

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	tradableInstrumentType1DataId		String (128)	The internal id of the TradableInstrument for which this data applies. The id is the same internal id as identifies the TradableInstrument.
8	tradableInstrumentType1DataName		String (255)	Name of the instrument type1 data.
9	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: TradableInstrumentType2Data

Message ID: 329

Type: Market and Instrument Messages

Description: This object holds TradableInstrumentType2Data instrument data that may be referenced from a TradableInstrument. A reverse reference to the tradableInstrument is stored in the internalInstrumentId attribute. The interpretation, type and contents of the data is customer specific. The actual data is stored in a customer specific extension to this object (TradableInstrumentType2DataExt).

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	tradableInstrumentType2DataId		String (128)	The internal id of the TradableInstrument for which this data applies. The id is the same internal id as identifies the TradableInstrument.
8	tradableInstrumentType2DataName		String (255)	Name of the instrument type2 data.
9	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: TradableInstrumentType3Data

Message ID: 330

Type: Market and Instrument Messages

Description: This object holds TradableInstrumentType3Data instrument data that may be referenced from a TradableInstrument. A reverse reference to the tradableInstrument is stored in the internalInstrumentId attribute. The interpretation, type and contents of the data is customer specific. The actual data is stored in a customer specific extension to this object (TradableInstrumentType3DataExt).

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	tradableInstrumentType3DataId		String (128)	The internal id of the TradableInstrument for which this data applies. The id is the same internal id as identifies the TradableInstrument.
8	tradableInstrumentType3DataName		String (255)	Name of the instrument type3 data.
9	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: TradableInstrumentType4Data

Message ID: 331

Type: Market and Instrument Messages

Description: This object holds TradableInstrumentType4Data instrument data that may be referenced from a TradableInstrument. A reverse reference to the tradableInstrument is stored in the internalInstrumentId attribute. The interpretation, type and contents of the data is customer specific. The actual data is stored in a customer specific extension to this object (TradableInstrumentType4DataExt).

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	tradableInstrumentType4DataId		String (128)	The internal id of the TradableInstrument for which this data applies. The id is the same internal id as identifies the TradableInstrument.
8	tradableInstrumentType4DataName		String (255)	Name of the instrument type4 data.
9	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: TradableInstrumentType5Data

Message ID: 332

Type: Market and Instrument Messages

Description: This object holds TradableInstrumentType5Data instrument data that may be referenced from a TradableInstrument. A reverse reference to the tradableInstrument is stored in the internalInstrumentId attribute. The interpretation, type and contents of the data is customer specific. The actual data is stored in a customer specific extension to this object (TradableInstrumentType5DataExt).

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	tradableInstrumentType5DataId		String (128)	The internal id of the TradableInstrument for which this data applies. The id is the same internal id as identifies the TradableInstrument.
8	tradableInstrumentType5DataName		String (255)	Name of the instrument type5 data.
9	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: TradableInstrumentType6Data

Message ID: 333

Type: Market and Instrument Messages

Description: This object holds TradableInstrumentType6Data instrument data that may be referenced from a TradableInstrument. A reverse reference to the tradableInstrument is stored in the internalInstrumentId attribute. The interpretation, type and contents of the data is customer specific. The actual data is stored in a customer specific extension to this object (TradableInstrumentType6DataExt).

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	tradableInstrumentType6DataId		String (128)	The internal id of the TradableInstrument for which this data applies. The id is the same internal id as identifies the TradableInstrument.
8	tradableInstrumentType6DataName		String (255)	Name of the instrument type6 data.
9	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: TradableInstrumentType7Data

Message ID: 334

Type: Market and Instrument Messages

Description: This object holds TradableInstrumentType7Data instrument data that may be referenced from a TradableInstrument. A reverse reference to the tradableInstrument is stored in the internalInstrumentId attribute. The interpretation, type and contents of the data is customer specific. The actual data is stored in a customer specific extension to this object (TradableInstrumentType7DataExt).

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	tradableInstrumentType7DataId		String (128)	The internal id of the TradableInstrument for which this data applies. The id is the same internal id as identifies the TradableInstrument.
8	tradableInstrumentTypeDataName		String (255)	Name of the instrument type7 data.
9	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: TradableInstrumentType8Data

Message ID: 335

Type: Market and Instrument Messages

Description: This object holds TradableInstrumentType8Data instrument data that may be referenced from a TradableInstrument. A reverse reference to the tradableInstrument is stored in the internalInstrumentId attribute. The interpretation, type and contents of the data is customer specific. The actual data is stored in a customer specific extension to this object (TradableInstrumentType8DataExt).

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	tradableInstrumentType8DataId		String (128)	The internal id of the TradableInstrument for which this data applies. The id is the same internal id as identifies the TradableInstrument.
8	tradableInstrumentTypeDataName		String (255)	Name of the instrument type8 data.
9	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: InstrumentTypeData

Message ID: 1509

Type: Market and Instrument Messages

Description: Extended information for the instrument depending on instrument type.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	bondData		InstrumentDataBond	Extended information for Bond
Message: InstrumentDataBond

Message ID: 1510

Type: Market and Instrument Messages

Description: Extended information for Bond Instrument

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subSector		String	The sub sector of the security.
2	bexSectorId		String	Number of the BEX sector group.
Message: TradableInstrumentTypeData

Message ID: 1513

Type: Market and Instrument Messages

Description: Extended information for the instrument depending on instrument type.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
2	bondData		TradableInstrumentDataBond	Extended information for Bond
Message: TradableInstrumentDataBond

Message ID: 1579

Type: Market and Instrument Messages

Description: Extended information for Bond TradableInstrument

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	yieldAtPriorClosePrice		Long	Yield at Prior Close Price.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

2	accruedInterest		Long	Accrued interest.
Values representing percentage are stored as integers with the following interpretation: 
- 12.5% is stored as 0.125 in all TRADExpress' fields that represent a percentage. 
- Since TRADEpress uses a long where the value is always multiplied by the literal DIVISOR.INTEREST, the internal representation of 12.5% is 125000 as a long (64-bit) integer value.

3	correspondingPrice		Long	Yield at Last Sale Price.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

4	isHalted		Boolean	True if tradable instrument is halted.
5	isSuspended		Boolean	True if tradable instrument is suspended.
6	currentPar		Long	Current par value.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

Message: CaPluginReq

Message ID: 1587

Type: Market and Instrument Messages

Description: Contains data to be updated from index eod plugin.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	invokeMethod	required	int	Method in plugin.
13	currentDate		String	today.
14	nextBusinessDate		String	nextBusinessDate.
15	isTradeToday		boolean	isTradeToday.
This request will normally return a response of type CaPluginRsp.

Message: CaPluginRsp

Message ID: 1588

Type: Market and Instrument Messages

Description: Contains data to be updated from index eod plugin.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
6	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
7	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
8	result	required	String[]	Method in plugin.
Message: GetIndexCalculationMethodsReq

Message ID: 1575

Type: Market and Instrument Messages

Description: Contains data to be updated from index eod plugin.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type GetIndexCalculationMethodsRsp.

Message: GetIndexCalculationMethodsRsp

Message ID: 1576

Type: Market and Instrument Messages

Description: Contains data to be updated from index eod plugin.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
6	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
7	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
8	methods	required	String[]	Method in plugin.
Message: StartDerivativesCaReq

Message ID: 1645

Type: Market and Instrument Messages

Description: Request to manual start the CA for derivatives.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type StartDerivativesCaRsp.

Message: StartDerivativesCaRsp

Message ID: 1646

Type: Market and Instrument Messages

Description: Response to StartDerivativesCaReq.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
6	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
7	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
Message: StartDerivativesCaRollbackReq

Message ID: 1651

Type: Market and Instrument Messages

Description: Request to roll back the backup from CA for derivatives.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	proceedWithBatchedRestore		boolean	True only if CD should proceed with an ongoing batched restore.
This request will normally return a response of type StartDerivativesCaRollbackRsp.

Message: StartDerivativesCaRollbackRsp

Message ID: 1652

Type: Market and Instrument Messages

Description: Response to StartDerivativesCaRollbackReq.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
6	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
7	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
Message: TraderId

Message ID: 1540

Type: Market and Instrument Messages

Description: Extended traderIds information for Member

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	traderId		String	Trader identification.
2	traderName		String	Trader name.
6.4.1 Market and Instrument Messages (Internal)

Message: Holiday

Message ID: 304

Type: Market and Instrument Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: The Holiday object defines the "properties" (name, full/half-day etc) for one specific holiday.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	holidayId		String (64)	The cache id for this holiday, just pass through.
8	date	required	String (64)	The date (yyyy-MM-dd) for this holiday entry.
9	dayType	required	String (255)	Identifies the type of Holiday. May be calendar Holidays, Half Days, closed etc.
Allowed values: see constant group HolidayDayType

10	holidayScheduleId	required	String (255)	The id of the parent HolidaySchedule (EMAPI)
13	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
14	name	required	String (128)	The name of the holiday, i.e. Whitsun, Ascension, Martin Luther King Day, etc.
Message: HolidaySchedule

Message ID: 305

Type: Market and Instrument Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: The HolidaSchedule and child objects Holiday, hold information on holidays for a specific country.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
6	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
7	holidayScheduleId	required	String (64)	The id of the holiday schedule, normally the ISO 3166 ISO 2-alpha code for the country.
8	name	required	String (128)	The name of the holiday schedule, "Dutch Holidays" for example.
9	holidays		Holiday[]	A set of Holiday child objects. Note that this set may be null or empty, since child objects may be distributed in separate broadcasts.
10	countryId	required	String (255)	Parent country id (EMAPI)
13	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
Message: BaseRuleData

Message ID: 610

Type: Market and Instrument Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: Class holding data being common to various generation rules.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	instrumentReferences		String[]	Array of instrument internal ids referring to instruments that represent underlyings and subjects to generation of various instruments and tradable instruments (like futures, options and combinations)
3	generationDayOffsetFromExpiration	required	int	Offset in days from expiration when the next set of options expirations are to be generated. If set to 1, the generation of next set of options with respect to expiration starts at the day before expiration in this month.
4	templateInstrument	required	Instrument	A reference to an Instrument object used as template for this generation rule when creating the parent instrument of generated derivative tradable instruments.
6	resolveInstrumentReference	required	boolean	If instrumentReference points to a TradableInstrumentReference that is a alias the underlyingReference on the generated derivate tradable instrument will be set to point to the true underlying, not the alias.
6.4.2 Market and Instrument Management Messages

Message: AddMarketReq

Message ID: 336

Type: Market and Instrument Management Messages

Description: A request to add a new market.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	market	required	Market	Complete information about the market to be added.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateMarketReq

Message ID: 337

Type: Market and Instrument Management Messages

Description: This request will update an existing Market.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	market	required	Market	New and complete market data.
13	overrideDisable		Boolean	If set to true, all subordinate objects are enabled, too, disregarding their previous enable/disable states.
14	overrideOrderBookRuleGroupParameters		Boolean	If set to true, all subordinate objects are forced to use the supplied OrderBookRuleGroupParameters, disregarding their previous OrderBookRuleGroupParameters blocks, if any.
15	overrideOrderBookParameters		Boolean	If set to true, all subordinate objects are forced to use the supplied OrderBookParameters, disregarding their previous OrderBookParameters blocks, if any.
16	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
17	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveMarketReq

Message ID: 338

Type: Market and Instrument Management Messages

Description: A request to remove a market and all its subsequent children (market lists and segments).

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	market	required	Market	Information to identify the market object to be removed.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddMarketListReq

Message ID: 339

Type: Market and Instrument Management Messages

Description: A request to add a market list.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	marketList	required	MarketList	Complete information about the market list to be added.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateMarketListReq

Message ID: 340

Type: Market and Instrument Management Messages

Description: A request to update an existing market list.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	marketList	required	MarketList	New and complete market list data.
13	overrideDisable		Boolean	If set to true, all subordinate objects are enabled, too, disregarding their previous enable/disable states.
14	overrideOrderBookRuleGroupParameters		Boolean	If set to true, all subordinate objects are forced to use the supplied OrderBookRuleGroupParameters, disregarding their previous OrderBookRuleGroupParameters blocks, if any.
15	overrideOrderBookParameters		Boolean	If set to true, all subordinate objects will be forced to use the supplied OrderBookParameters, disregarding their previous OrderBookParameters blocks, if any.
16	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
17	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveMarketListReq

Message ID: 341

Type: Market and Instrument Management Messages

Description: A request to remove a market list and all its child segments.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	marketList	required	MarketList	Information to identify the market list to be deleted.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddSegmentReq

Message ID: 342

Type: Market and Instrument Management Messages

Description: A request to add a segment.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	segment	required	Segment	Complete information about the segment to be added.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateSegmentReq

Message ID: 343

Type: Market and Instrument Management Messages

Description: A request to update an existing segment.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	segment	required	Segment	New and complete segment data
13	overrideDisable		Boolean	If set to true, all subordinate objects are enabled, too, disregarding their previous enable/disable states.
14	overrideOrderBookRuleGroupParameters		Boolean	This field is deprecated and is no longer used.
15	overrideOrderBookParameters		Boolean	If set to true, all subordinate objects will be forced to use the supplied OrderBookParameters, disregarding their previous OrderBookParameters blocks, if any.
16	overrideTickSizeTable		Boolean	If set to true, all subordinate objects will be forced to use the supplied TickSizeTable, disregarding their previous TickSizeTable references, if any.
17	overrideAdaptiveMicroAuctionSettings		Boolean	If set to true, all subordinate objects will be forced to use the supplied AdaptiveMicroAuctionSettings, disregarding their previous AdaptiveMicroAuctionSettings references, if any.
18	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
19	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveSegmentReq

Message ID: 344

Type: Market and Instrument Management Messages

Description: A request to remove a segment.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	segment	required	Segment	Information to identify the segment object to be deleted.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddInstrumentReq

Message ID: 346

Type: Market and Instrument Management Messages

Description: A request to add an instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	instrument	required	Instrument	Complete information about the instrument to be added.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type InstrumentRsp.

Message: UpdateInstrumentReq

Message ID: 347

Type: Market and Instrument Management Messages

Description: A request to update an existing instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	instrument	required	Instrument	Instrument data.
13	overrideDisable		Boolean	If set to true, all subordinate tradable instruments are enabled, too, disregarding their previous enable/disable states.
14	overrideOrderBookParameters		Boolean	If set to true, all subordinate tradable instruments will be forced to use the supplied OrderBookParameters, disregarding their previous OrderBookParameters block, if any.
15	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
16	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type InstrumentRsp.

Message: RemoveInstrumentReq

Message ID: 348

Type: Market and Instrument Management Messages

Description: A request to remove an instument and all its subordinate tradable instruments.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	instrument	required	Instrument	Instrument data.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddTradableInstrumentReq

Message ID: 349

Type: Market and Instrument Management Messages

Description: A request to add a tradable instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	tradableInstrument	required	TradableInstrument	Complete information about the tradable instrument to be added.
13	instrumentPartition		Integer	The matching engine partition handling this tradable instrument. If null, the default partition for the tradable instrument's segment is used.
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type InstrumentRsp.

Message: UpdateTradableInstrumentReq

Message ID: 350

Type: Market and Instrument Management Messages

Description: Updates an existing TradableInstrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	tradableInstrument	required	TradableInstrument	New and complete tradable instrument data.
13	instrumentPartition		Integer	The matching engine partition handling this tradable instrument. If null, the default partition for the tradable instrument's segment is used.
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type InstrumentRsp.

Message: RemoveTradableInstrumentReq

Message ID: 351

Type: Market and Instrument Management Messages

Description: A request to remove a tradable instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	tradableInstrument	required	TradableInstrument	Information to identify the tradable instrument to be removed.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddOptionTradableInstrumentReq

Message ID: 532

Type: Market and Instrument Management Messages

Description: A request to add a Option tradable instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	tradableInstrument	required	OptionTradableInstrument	Complete information about the Option tradable instrument to be added.
13	instrumentPartition		Integer	The matching engine partition handling this Option tradable instrument. If null, the default partition for the Option tradable instrument's segment is used.
This request will normally return a response of type InstrumentRsp.

Message: UpdateOptionTradableInstrumentReq

Message ID: 533

Type: Market and Instrument Management Messages

Description: Updates an existing OptionTradableInstrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	tradableInstrument	required	OptionTradableInstrument	New and complete Option tradable instrument data.
13	instrumentPartition		Integer	The matching engine partition handling this Option tradable instrument. If null, the default partition for the Option tradable instrument's segment is used.
This request will normally return a response of type InstrumentRsp.

Message: RemoveOptionTradableInstrumentReq

Message ID: 534

Type: Market and Instrument Management Messages

Description: A request to remove a Option tradable instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	tradableInstrument	required	OptionTradableInstrument	Information to identify the Option tradable instrument to be removed.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
This request will normally return a response of type CdResponse.

Message: AddFutureTradableInstrumentReq

Message ID: 587

Type: Market and Instrument Management Messages

Description: A request to add a Future tradable instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	tradableInstrument	required	FutureTradableInstrument	Complete information about the Future tradable instrument to be added.
13	instrumentPartition		Integer	The matching engine partition handling this Future tradable instrument. If null, the default partition for the Future tradable instrument's segment is used.
This request will normally return a response of type InstrumentRsp.

Message: UpdateFutureTradableInstrumentReq

Message ID: 588

Type: Market and Instrument Management Messages

Description: Updates an existing FutureTradableInstrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	tradableInstrument	required	FutureTradableInstrument	New and complete Future tradable instrument data.
13	instrumentPartition		Integer	The matching engine partition handling this Future tradable instrument. If null, the default partition for the Future tradable instrument's segment is used.
This request will normally return a response of type InstrumentRsp.

Message: RemoveFutureTradableInstrumentReq

Message ID: 589

Type: Market and Instrument Management Messages

Description: A request to remove a Future tradable instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	tradableInstrument	required	FutureTradableInstrument	Information to identify the Future tradable instrument to be removed.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
This request will normally return a response of type CdResponse.

Message: AddTradableInstrumentReferenceReq

Message ID: 621

Type: Market and Instrument Management Messages

Description: A request to add a TradableInstrumentReference.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	tradableInstrumentReference	required	TradableInstrumentReference	Complete information about the TradableInstrumentReference to be added.
This request will normally return a response of type InstrumentRsp.

Message: UpdateTradableInstrumentReferenceReq

Message ID: 622

Type: Market and Instrument Management Messages

Description: Updates an existing TradableInstrumentReference.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	tradableInstrumentReference	required	TradableInstrumentReference	New and complete TradableInstrumentReference data.
This request will normally return a response of type InstrumentRsp.

Message: RemoveTradableInstrumentReferenceReq

Message ID: 623

Type: Market and Instrument Management Messages

Description: A request to remove a TradableInstrumentReference.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	tradableInstrumentReference	required	TradableInstrumentReference	Information to identify the TradableInstrumentReference to be removed.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
This request will normally return a response of type CdResponse.

Message: AddViewReq

Message ID: 352

Type: Market and Instrument Management Messages

Description: A request to add a view.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	view	required	View	Complete information about the view to be added.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateViewReq

Message ID: 353

Type: Market and Instrument Management Messages

Description: Updates an existing View.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	view	required	View	New and complete view data.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveViewReq

Message ID: 354

Type: Market and Instrument Management Messages

Description: A request to remove a view and all subordinate view elements.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	view	required	View	Information to identify the view to be deleted.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddTradableInstrumentToViewReq

Message ID: 356

Type: Market and Instrument Management Messages

Description: A request to add a tradable instrument to an existing view.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	viewId	required	String	The identification of the view where this tradable instrument is to be added.
13	tradableInstrumentId	required	String	The internal id of the tradable instrument.
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveTradableInstrumentFromViewReq

Message ID: 358

Type: Market and Instrument Management Messages

Description: A request to remove a tradable instrument from a view.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	viewId	required	String	The identification of the view where this tradable instrument is to be removed.
13	tradableInstrumentId	required	String	The internal id of the tradable instrument to be removed.
14	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
15	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
16	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddCountryReq

Message ID: 364

Type: Market and Instrument Management Messages

Description: A request to add a new country.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	country	required	Country	Complete information about the country to be added.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateCountryReq

Message ID: 365

Type: Market and Instrument Management Messages

Description: This request updates an existing country.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	country	required	Country	New and complete country data.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveCountryReq

Message ID: 366

Type: Market and Instrument Management Messages

Description: A request to remove an existing country.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	country	required	Country	Information to identify the country to be removed.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddIndustrySectorReq

Message ID: 367

Type: Market and Instrument Management Messages

Description: A request to add an industry sector.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	industrySector	required	IndustrySector	Complete information about an industry sector to be added.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateIndustrySectorReq

Message ID: 368

Type: Market and Instrument Management Messages

Description: A request to update an existing industry sector.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	industrySector	required	IndustrySector	New and complete industry sector data.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveIndustrySectorReq

Message ID: 369

Type: Market and Instrument Management Messages

Description: A request to remove an industry sector.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	industrySector	required	IndustrySector	Information to identify the industry sector object to be deleted.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddTradableInstrumentDataReq

Message ID: 370

Type: Market and Instrument Management Messages

Description: A request to add a tradable instrument data object. A tradable instrument data object is a detached object outside the instrument tree and may be referenced from a tradable instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	tradableInstrumentData	required	TradableInstrumentData	Complete information about the tradable instrument data object to be added.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateTradableInstrumentDataReq

Message ID: 371

Type: Market and Instrument Management Messages

Description: A request to update an existing tradable instrument data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	tradableInstrumentData	required	TradableInstrumentData	New and complete tradable instrument data object data.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveTradableInstrumentDataReq

Message ID: 372

Type: Market and Instrument Management Messages

Description: A request to remove a tradable instrument data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	tradableInstrumentData	required	TradableInstrumentData	Information to identify the tradable instrument data object to be removed.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddGenericInstrumentDataReq

Message ID: 373

Type: Market and Instrument Management Messages

Description: A request to add a generic instrument data object. A generic instrument data object may be referenced from an instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	genericInstrumentData	required	GenericInstrumentData	Generic instrument data object data.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateGenericInstrumentDataReq

Message ID: 374

Type: Market and Instrument Management Messages

Description: A request to update an existing generic instrument data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	genericInstrumentData	required	GenericInstrumentData	New and complete generic instrument data.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveGenericInstrumentDataReq

Message ID: 375

Type: Market and Instrument Management Messages

Description: A request to remove a generic instrument data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	genericInstrumentData	required	GenericInstrumentData	GenericInstrumentData object data.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddInstrumentType1DataReq

Message ID: 376

Type: Market and Instrument Management Messages

Description: A request to add an instrument type 1 data object. An instrument type 1 data object may be referenced from an instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	instrumentTypeData	required	InstrumentType1Data	Complete instrument type 1 data to be added.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateInstrumentType1DataReq

Message ID: 377

Type: Market and Instrument Management Messages

Description: A request to update an existing instrument type 1 data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	instrumentTypeData	required	InstrumentType1Data	New and complete instrument 1 type data to update the existing object.
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveInstrumentType1DataReq

Message ID: 378

Type: Market and Instrument Management Messages

Description: A request to remove an instrument type 1 data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	instrumentTypeData	required	InstrumentType1Data	Instrument type 1 data to identify the object to be deleted.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddInstrumentType2DataReq

Message ID: 379

Type: Market and Instrument Management Messages

Description: A request to add an instrument type 2 data object. An instrument type 2 data object may be referenced from an instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	instrumentTypeData	required	InstrumentType2Data	Complete instrumentt ype2 data to be added.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateInstrumentType2DataReq

Message ID: 380

Type: Market and Instrument Management Messages

Description: A request to update an exiting instrument type 2 data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	instrumentTypeData	required	InstrumentType2Data	New and complete instrument type 2 data to update the existing object.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveInstrumentType2DataReq

Message ID: 381

Type: Market and Instrument Management Messages

Description: A request to remove an instrument type 2 data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	instrumentTypeData	required	InstrumentType2Data	Instrument type 2 data to identify the object to be deleted.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddInstrumentType3DataReq

Message ID: 382

Type: Market and Instrument Management Messages

Description: A request to add an instrument type 3 data object. An instrument type 3 data object may be referenced from an instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	instrumentTypeData	required	InstrumentType3Data	Complete instrumentt ype3 data to be added.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateInstrumentType3DataReq

Message ID: 383

Type: Market and Instrument Management Messages

Description: A request to update an existing instrument type 3 data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	instrumentTypeData	required	InstrumentType3Data	New and complete instrument type 3 data to update the existing object.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveInstrumentType3DataReq

Message ID: 384

Type: Market and Instrument Management Messages

Description: A request to remove an instrument type 3 data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	instrumentTypeData	required	InstrumentType3Data	Instrument type 3 data to identify the object to be deleted.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddInstrumentType4DataReq

Message ID: 385

Type: Market and Instrument Management Messages

Description: A request to add an instrument type 4 data object. An instrument type 4 data object may be referenced from an instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	instrumentTypeData	required	InstrumentType4Data	Complete instrumentt ype4 data to be added
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateInstrumentType4DataReq

Message ID: 386

Type: Market and Instrument Management Messages

Description: A request to update an existing instrument type 4 data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	instrumentTypeData	required	InstrumentType4Data	New and complete instrument type 4 data to update the existing object.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveInstrumentType4DataReq

Message ID: 387

Type: Market and Instrument Management Messages

Description: A request to remove an instrument type 4 data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	instrumentTypeData	required	InstrumentType4Data	Instrument type 4 data to identify the object to be deleted.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddInstrumentType5DataReq

Message ID: 388

Type: Market and Instrument Management Messages

Description: A request to add an instrument type 5 data object. An instrument type 5 data object may be referenced from an instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	instrumentTypeData	required	InstrumentType5Data	Complete instrumentt ype5 data to be added.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateInstrumentType5DataReq

Message ID: 389

Type: Market and Instrument Management Messages

Description: A request to update an exiting instrument type 5 data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	instrumentTypeData	required	InstrumentType5Data	New and complete instrument type 5 data to update the existing object.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveInstrumentType5DataReq

Message ID: 390

Type: Market and Instrument Management Messages

Description: A request to remove an instrument type 5 data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	instrumentTypeData	required	InstrumentType5Data	Instrument type 5 data to identify the object to be deleted.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddInstrumentType6DataReq

Message ID: 391

Type: Market and Instrument Management Messages

Description: A request to add an instrument type 6 data object. An instrument type 6 data object may be referenced from an instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	instrumentTypeData	required	InstrumentType6Data	Complete instrumentt ype6 data to be added.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateInstrumentType6DataReq

Message ID: 392

Type: Market and Instrument Management Messages

Description: A request to update a InstrumentType6Da ta o b ject.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	instrumentTypeData	required	InstrumentType6Data	New and complete instrument type 6 data to update the existing object.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveInstrumentType6DataReq

Message ID: 393

Type: Market and Instrument Management Messages

Description: A request to remove an instrument type 6 data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	instrumentTypeData	required	InstrumentType6Data	Instrument type 6 data to identify the object to be deleted.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddInstrumentType7DataReq

Message ID: 394

Type: Market and Instrument Management Messages

Description: A request to add an instrument type 7 data object. An instrument type 7 data object may be referenced from an instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	instrumentTypeData	required	InstrumentType7Data	Complete instrumentt ype7 data to be added.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateInstrumentType7DataReq

Message ID: 395

Type: Market and Instrument Management Messages

Description: A request to update an existing instrument type 7 data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	instrumentTypeData	required	InstrumentType7Data	New and complete instrument type 7 data to update the existing object.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveInstrumentType7DataReq

Message ID: 396

Type: Market and Instrument Management Messages

Description: A request to remove an instrument type 7 data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	instrumentTypeData	required	InstrumentType7Data	Instrument type 7 data to identify the object to be deleted.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddInstrumentType8DataReq

Message ID: 397

Type: Market and Instrument Management Messages

Description: A request to add an instrument type 8 data object. An instrument type 8 data object may be referenced from an instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	instrumentTypeData	required	InstrumentType8Data	Complete instrumentt ype8 data to be added.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateInstrumentType8DataReq

Message ID: 398

Type: Market and Instrument Management Messages

Description: A request to update an existing instrument type 8 data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	instrumentTypeData	required	InstrumentType8Data	New and complete instrument type 8 data to update the existing object.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveInstrumentType8DataReq

Message ID: 399

Type: Market and Instrument Management Messages

Description: A request to remove an instrument type 8 data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	instrumentTypeData	required	InstrumentType8Data	Instrument type 8 data to identify the object to be deleted.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddTradableInstrumentType1DataReq

Message ID: 400

Type: Market and Instrument Management Messages

Description: A request to add a tradable instrument type 1 data object. A tradable instrument type 1 data object may be referenced from a tradable instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	trInstrumentTypeData	required	TradableInstrumentType1Data	A complete tradable instrument type 1 data object.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateTradableInstrumentType1DataReq

Message ID: 401

Type: Market and Instrument Management Messages

Description: A request to update an existing tradable instrument type 1 data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	trInstrumentTypeData	required	TradableInstrumentType1Data	New and complete tradable instrument type 1 data to update the existing object.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveTradableInstrumentType1DataReq

Message ID: 402

Type: Market and Instrument Management Messages

Description: A request to remove a tradable instrument type 1 data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	trInstrumentTypeData	required	TradableInstrumentType1Data	Tradable instrument type 1 data to identify the object to be deleted.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddTradableInstrumentType2DataReq

Message ID: 403

Type: Market and Instrument Management Messages

Description: A request to add a tradable instrument type 2 data object. A tradable instrument type 2 data object may be referenced from a tradable instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	trInstrumentTypeData	required	TradableInstrumentType2Data	A complete tradable instrument type 2 data object.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateTradableInstrumentType2DataReq

Message ID: 404

Type: Market and Instrument Management Messages

Description: A request to update an existing tradable instrument type 2 data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	trInstrumentTypeData	required	TradableInstrumentType2Data	New and complete tradable instrument type 2 data to update the existing object.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveTradableInstrumentType2DataReq

Message ID: 405

Type: Market and Instrument Management Messages

Description: A request to remove a tradable instrument type 2 data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	trInstrumentTypeData	required	TradableInstrumentType2Data	Tradable instrument type 2 data to identify the object to be deleted.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddTradableInstrumentType3DataReq

Message ID: 406

Type: Market and Instrument Management Messages

Description: A request to add a tradable instrument type 3 data object. A tradable instrument type 3 data object may be referenced from a tradable instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	trInstrumentTypeData	required	TradableInstrumentType3Data	A complete tradable instrument type 3 data object.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateTradableInstrumentType3DataReq

Message ID: 407

Type: Market and Instrument Management Messages

Description: A request to update an existing tradable instrument type 3 data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	trInstrumentTypeData	required	TradableInstrumentType3Data	New and complete tradabl einstrumen ttyp e data to update the existing object
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveTradableInstrumentType3DataReq

Message ID: 408

Type: Market and Instrument Management Messages

Description: A request to remove a tradable instrument type 3 data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	trInstrumentTypeData	required	TradableInstrumentType3Data	Tradable instrument type 3 data to identify the object to be deleted.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddTradableInstrumentType4DataReq

Message ID: 409

Type: Market and Instrument Management Messages

Description: A request to add a tradable instrument type 4 data object. A tradable instrument type 4 data object may be referenced from a tradable instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	trInstrumentTypeData	required	TradableInstrumentType4Data	A complete tradable instrument type 4 data object.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateTradableInstrumentType4DataReq

Message ID: 410

Type: Market and Instrument Management Messages

Description: A request to update an existing tradable instrument type 4 data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	trInstrumentTypeData	required	TradableInstrumentType4Data	New and complete tradable instrument type 4 data to update the existing object.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveTradableInstrumentType4DataReq

Message ID: 411

Type: Market and Instrument Management Messages

Description: A request to remove a tradable instrument type 4 data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	trInstrumentTypeData	required	TradableInstrumentType4Data	Tradable instrument type 4 data to identify the object to be deleted.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddTradableInstrumentType5DataReq

Message ID: 412

Type: Market and Instrument Management Messages

Description: A request to add a tradable instrument type 5 data object. A tradable instrument type 5 data object may be referenced from a tradable instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	trInstrumentTypeData	required	TradableInstrumentType5Data	A complete tradable instrument type 5 data object.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateTradableInstrumentType5DataReq

Message ID: 413

Type: Market and Instrument Management Messages

Description: A request to update an existing tradable instrument type 5 data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	trInstrumentTypeData	required	TradableInstrumentType5Data	New and complete tradable instrument type 5 data to update the existing object.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveTradableInstrumentType5DataReq

Message ID: 414

Type: Market and Instrument Management Messages

Description: A request to remove a tradable instrument type 5 data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	trInstrumentTypeData	required	TradableInstrumentType5Data	Tradable instrument type 5 data to identify the object to be deleted.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddTradableInstrumentType6DataReq

Message ID: 415

Type: Market and Instrument Management Messages

Description: A request to add a tradable instrument type 6 data object. A tradable instrument type 6 data object may be referenced from a tradable instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	trInstrumentTypeData	required	TradableInstrumentType6Data	A complete tradable instrument type 6 data object.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateTradableInstrumentType6DataReq

Message ID: 416

Type: Market and Instrument Management Messages

Description: A request to update an existing tradable instrument type 6 data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	trInstrumentTypeData	required	TradableInstrumentType6Data	New and complete tradable instrument type 6 data to update the existing object.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveTradableInstrumentType6DataReq

Message ID: 417

Type: Market and Instrument Management Messages

Description: A request to remove a tradable instrument type 6 data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	trInstrumentTypeData	required	TradableInstrumentType6Data	Tradable instrument type 6 data to identify the object to be deleted.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddTradableInstrumentType7DataReq

Message ID: 418

Type: Market and Instrument Management Messages

Description: A request to add a tradable instrument type 7 data object. A tradable instrument type 7 data object may be referenced from a tradable instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	trInstrumentTypeData	required	TradableInstrumentType7Data	A complete tradable instrument type 7 data object.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateTradableInstrumentType7DataReq

Message ID: 419

Type: Market and Instrument Management Messages

Description: A request to update an exiting tradable instrument type 7 data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	trInstrumentTypeData	required	TradableInstrumentType7Data	New and complete tradable instrument type 7 data to update the existing object.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveTradableInstrumentType7DataReq

Message ID: 420

Type: Market and Instrument Management Messages

Description: A request to remove a tradable instrument type 7 data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	trInstrumentTypeData	required	TradableInstrumentType7Data	Tradable instrument type 7 data to identify the object to be deleted.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: AddTradableInstrumentType8DataReq

Message ID: 421

Type: Market and Instrument Management Messages

Description: A request to add a tradable instrument type 8 data object. A tradable instrument type 8 data object nay be referenced from a tradable instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	trInstrumentTypeData	required	TradableInstrumentType8Data	A complete tradable instrument type 8 data object.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateTradableInstrumentType8DataReq

Message ID: 422

Type: Market and Instrument Management Messages

Description: A request to update an existing tradable instrument type 8 data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	trInstrumentTypeData	required	TradableInstrumentType8Data	New and complete tradable instrument type 8 data to update the existing object.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: RemoveTradableInstrumentType8DataReq

Message ID: 423

Type: Market and Instrument Management Messages

Description: A request to remove a tradable instrument type 8 data object.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
21	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
22	trInstrumentTypeData	required	TradableInstrumentType8Data	Tradable instrument type 8 data to identify the object to be deleted.
23	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
24	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: GenerationRuleRsp

Message ID: 547

Type: Market and Instrument Management Messages

Description: A base response to an add/update/delete an Instrument/TradableInstrument generation rule.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
6	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
7	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
8	generationRule	required	GenerationRule	Complete information about the generation rule.
Message: AddGenerationRuleReq

Message ID: 548

Type: Market and Instrument Management Messages

Description: A request to add an istrument generation rule.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	generationRule	required	GenerationRule	Complete information about the generation rule.
This request will normally return a response of type GenerationRuleRsp.

Message: UpdateGenerationRuleReq

Message ID: 549

Type: Market and Instrument Management Messages

Description: A request to update an existing instrument generation rule.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	generationRule	required	GenerationRule	Complete information about the generation rule.
This request will normally return a response of type GenerationRuleRsp.

Message: RemoveGenerationRuleReq

Message ID: 550

Type: Market and Instrument Management Messages

Description: A request to remove an existing instrument generation rule.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	generationRule	required	GenerationRule	Complete information about the generation rule.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
This request will normally return a response of type CdResponse.

Message: CombinationRuleRsp

Message ID: 599

Type: Market and Instrument Management Messages

Description: A base response to an add/update/delete an Instrument/TradableInstrument combination rule.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
6	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
7	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
8	combinationRule	required	CombinationRule	Complete information about the combination rule.
Message: AddCombinationRuleReq

Message ID: 600

Type: Market and Instrument Management Messages

Description: A request to add an istrument combination rule.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	combinationRule	required	CombinationRule	Complete information about the generation rule.
This request will normally return a response of type CombinationRuleRsp.

Message: UpdateCombinationRuleReq

Message ID: 601

Type: Market and Instrument Management Messages

Description: A request to update an existing instrument combination rule.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	combinationRule	required	CombinationRule	Complete information about the generation rule.
This request will normally return a response of type CombinationRuleRsp.

Message: RemoveCombinationRuleReq

Message ID: 602

Type: Market and Instrument Management Messages

Description: A request to remove an existing instrument combination rule.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	combinationRule	required	CombinationRule	Complete information about the generation rule.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
This request will normally return a response of type CdResponse.

Message: StrikePriceTableRsp

Message ID: 560

Type: Market and Instrument Management Messages

Description: A base response to an add/update/delete a strike price table.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
6	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
7	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
8	strikePriceTable	required	StrikePriceTable	Complete information about the strike price table.
Message: AddStrikePriceTableReq

Message ID: 561

Type: Market and Instrument Management Messages

Description: A request to add a strike price table.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	strikePriceTable	required	StrikePriceTable	Complete information about the strike price table.
This request will normally return a response of type StrikePriceTableRsp.

Message: UpdateStrikePriceTableReq

Message ID: 562

Type: Market and Instrument Management Messages

Description: A request to update an existing strike price table.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	strikePriceTable	required	StrikePriceTable	Complete information about the strike price table.
This request will normally return a response of type StrikePriceTableRsp.

Message: RemoveStrikePriceTableReq

Message ID: 563

Type: Market and Instrument Management Messages

Description: A request to remove an existing strike price table.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	strikePriceTable	required	StrikePriceTable	Complete information about the strike price table.
13	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
This request will normally return a response of type CdResponse.

Message: ExpirationRuleRsp

Message ID: 606

Type: Market and Instrument Management Messages

Description: A base response to an add/update/delete an expiration rule.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
6	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
7	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
8	key		String	Populated by source cache, used to identify parent (null if root object).
9	cacheId		String	Populated by source cache, used to identify cache.
10	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

11	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
12	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
13	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
14	timeStampLong		Long	The date and time of modification for this reference data object. stored as a long (for easier selection on ge or gt conditions). May be null if the object never has been updated.
15	modSource		String (64)	The source of modification for this reference data object
16	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
17	expirationRuleId		Long	A unique expiration identifier.
18	name	required	String (255)	The display name for this expiration table.
19	rules	required	String (255)	Defines when expiration shall take place inside specified time periods.
Consists of several expiration rules separated by whitespaces.

Each expiration rule consists of an expiration symbol and an expiration definition, which are separated by the equal sign character (i.e. '=').

The expiration symbol defines the time period for which the expiration definition applies for:

The first expiration rule must have an expiration symbol that is either OffsetIntervalSymbol.WEEK or OffsetIntervalSymbol.MONTH.
The remaining expiration rules must have expiration symbols that comes in a certain order with regards to the previous expiration rule's expiration symbol:
OffsetIntervalSymbol.MONTH must be preceed by OffsetIntervalSymbol.WEEK
OffsetIntervalSymbol.ODD_MONTH, OffsetIntervalSymbol.EVEN_MONTH or OffsetIntervalSymbol.QUARTER must be preceed by OffsetIntervalSymbol.MONTH
OffsetIntervalSymbol.HALF_YEAR must be preceed by either OffsetIntervalSymbol.MONTH, OffsetIntervalSymbol.ODD_MONTH, OffsetIntervalSymbol.EVEN_MONTH or OffsetIntervalSymbol.QUARTER
OffsetIntervalSymbol.YEAR must be preceed by either OffsetIntervalSymbol.MONTH, OffsetIntervalSymbol.ODD_MONTH, OffsetIntervalSymbol.EVEN_MONTH, OffsetIntervalSymbol.QUARTER
The last expiration rule must have an expiration symbol that is OffsetIntervalSymbol.YEAR.
The expiration definition specifies when in the expiration symbol's time period the expiration shall take place:
The OffsetIntervalSymbol.WEEK expiration symbol must have an expiration definition that is an English weekday (e.g. Friday).
Example: An expiration rule equal to "w=Monday" means that inside a week the expiration will take place on a Monday.

The OffsetIntervalSymbol.MONTH expiration symbol must have an expiration definition that consists of:
OffsetIntervalSymbol.DAY followed by an integer between (and including) -15 and 15 but excluding 0 if part of the first expiration rule.
A positive integer counts non-closed days from the start of the month (i.e. d1 means the first non-closed day in the month). A negative integer counts non-closed days from the end of the month (i.e. d-1 means the last non-closed day in the month).

Examples:

An expiration rule equal to "m=d-3" means that inside a month the expiration will take place on the third non-closed day counting from the end of the month.
An expiration rule equal to "m=d2" means that inside a month the expiration will take place on the second non-closed day counting from the start of the month.
OffsetIntervalSymbol.WEEK followed by an integer between (and including) -2 and 4 but excluding 0 otherwise.
A positive integer counts weeks from the start of the month (i.e. w1 means the first week in the month). A negative integer counts weeks from the end of the month (i.e. w-1 means the last week in the month).

Examples:

An expiration rule equal to "m=w-2" means that inside a month the expiration will take place in the second week counting from the end of the month.
An expiration rule equal to "m=w1" means that inside a month the expiration will take place in the first week counting from the start of the month.
The other expiration symbols must must have an expiration definition consisting of a positive integer followed by the expiration symbol of the previous expiration rule, which in its turned is followed by a positive integer that is equal to or less than the first integer.
The first integer specifies the number of the previous expiration symbol's time periods that the expiration rules' expiration symbol's time period consists of.
The second integer counts previous expiration symbol's time periods from the start of the expiration rules' expiration symbol's time period.
Examples:
An expiration rule equal to "o=2m1" means that OffsetIntervalSymbol.ODD_MONTH consists of 2 months and the expiration will take place in the first month of these 2 months.
An expiration rule equal to "y=6o4" means that OffsetIntervalSymbol.YEAR consists of 6 OffsetIntervalSymbol.ODD_MONTH:s and the expiration will take place in the fourth OffsetIntervalSymbol.ODD_MONTH of the year.
Examples of expiration rules:
"w=friday m=w-1 q=3m3 y=4q4"
"m=d1 o=2m1 h=3o1 y=2h1"
Special symbols: In addition to the symbols described above there are symbols with special meaning. The symbol OffsetIntervalSymbol.TODAY represents the current date (the date that the calculation of expiration date is based on) and the preceeding numeric (positive) value is added to that date to get the expiration date. This symbol cannot exist in any expiration rule but is predefined.
20	adjustForwardAtHolidays		Boolean	Shall be specified if (and only if) the first expiration rule has an expiration symbol that is OffsetIntervalSymbol.WEEK.
Specifies if an expiration date, if not a non closed date, shall be adjusted forward (alternative backward) in the calendar to the closest non closed date.

21	holidayCalendars	required	String (255)	A comma-separated list of references to DateCollection objects holding holidays, normally country names.
502	adjustNotationDate		Integer	Offset in days from validForm. If set to 0, trade date is the same as validForm.
Message: AddExpirationRuleReq

Message ID: 607

Type: Market and Instrument Management Messages

Description: A request to add an expiration rule.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
26	expirationRule	required	ExpirationRule	Complete information about the expiration rule.
This request will normally return a response of type ExpirationRuleRsp.

Message: UpdateExpirationRuleReq

Message ID: 608

Type: Market and Instrument Management Messages

Description: A request to update an existing expiration rule.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
26	expirationRule	required	ExpirationRule	Complete information about the expiration rule.
This request will normally return a response of type ExpirationRuleRsp.

Message: RemoveExpirationRuleReq

Message ID: 609

Type: Market and Instrument Management Messages

Description: A request to remove an existing expiration rule.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
26	removeType	required	Integer	The type of remove to be performed. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
27	expirationRule	required	ExpirationRule	Complete information about the expiration rule.
This request will normally return a response of type CdResponse.

Message: GenerationRsp

Message ID: 565

Type: Market and Instrument Management Messages

Description: A response to a series generation request. The returned instrument array contains the generated instruments and generated tradable instrument (if any) for each instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
6	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
7	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
8	generationResult		GenerationResult[]	The outcome of the requested generation.
9	remark		String	A possible comment on the generation by the server.
Message: GenerateSeriesReq

Message ID: 567

Type: Market and Instrument Management Messages

Description: A request start a series generation. If only the geneationRuleId attribute is specified, series are generated for all underlying instruments that are connected to the rule specified. If only the underlying instrumentInternalId attribute is specified, the system will try to find all rules connected to the underlying instrument and generate series using all rules found. If both a geneationRuleId and a instrumentInternalId are specified, the system will use the provided rule and generate series only for the underlying instrument specified.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
15	generationRuleId		Long	The identity of the GenerationRule to be used for this request.
16	startingDate		String	Starting date of the series to be generated. By using this date, it is possible to generate instruments to be used in the future. Example: In October, it is possible to generate the options that apply from Jan 1. Must be equal to or later than current date. If not specified, current date is used as starting date.
18	customUnderlyingInfo		String	Possible customer-specific information used to determine the underlying instrument.
19	underlyingAtms		AtTheMoneyData[]	Array of at-the-money pairs, that is, pairs of Identifications of the underlying equity (a tradable instrument) and its current at-the-money value. If the ATM value is to be determined by the system, a null is specified. If provided, the elements in this array have to match the elements in GenerationRuleData.instrumentReferences.
This request will normally return a response of type GenerationRsp.

Message: ScheduledGenerateSeriesReq

Message ID: 590

Type: Market and Instrument Management Messages

Description: A request to add a scheduled series generation. In addition to the standard schedule time (see the executeWhen attribute), a repeat interval may be specified.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	generationRuleId		Long	The identity of the GenerationRule to be used for this request.
13	underlyingAtms		AtTheMoneyData[]	Array of at-the-money pairs, that is, pairs of Identifications of the underlying equity (a tradable instrument) and its current at-the-money value. If the ATM value is to be determined by the system, a null is specified. If provided, the elements in this array have to match the elements in GenerationRuleData.instrumentReferences.
14	startingDate		String	Starting date of the series to be generated. By using this date, it is possible to generate instruments to be used in the future. Example: In October, it is possible to generate the options that apply from Jan 1. Must be equal to or later than current date. If not specified, current date is used as starting date.
15	customUnderlyingInfo		String	Possible customer-specific information used to determine the underlying instrument.
17	synchronizeWithAtm		boolean	If this attribute is set to true, the request will wait for at-the-money prices to be available before the scheule is executed.
18	repeatDaily		boolean	If this attribute is set to true, the request will be automatically rescheduled to run the next day (at the same time as specified).
This request will normally return a response of type CdResponse.

Message: AddGeneratedInstrumentsReq

Message ID: 570

Type: Market and Instrument Management Messages

Description: A request to add prevously generated serie(s)/strike(s).

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	generationResult	required	GenerationResult[]	The generated instruments/tradable instruments of different instrument types from a recent GenerationRsp to be added to the reference data.
This request will normally return a response of type CdResponse.

Message: QueryAtmsFromGenerationRuleReq

Message ID: 582

Type: Market and Instrument Management Messages

Description: Request for at-the-money prices (adjusted closing prices or current prices) for the underlyings enumerated in a generation rule. Underlyings generally are instruments, but using the rules template tradable instrument, the currency can be depicted and hence the tradable instrument to be looked up.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	generationRuleId	required	Long	The identity of the GenerationRule to be used for this request.
13	customUnderlyingInfo		String	Possible customer-specific information used to determine the underlying.
This request will normally return a response of type QueryAtmsFromGenerationRuleRsp.

Message: QueryAtmsFromGenerationRuleRsp

Message ID: 583

Type: Market and Instrument Management Messages

Description: Returns pairs of tradable instrument ids and ATMs (at-the-money values)

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
6	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
7	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
8	atms		AtTheMoneyData[]	Pairs of underlying instrument ids and their current ATM values
Message: GenerateCombinationsReq

Message ID: 596

Type: Market and Instrument Management Messages

Description: A request start a generation of combinations. If only the combinationRuleId attribute is specified, combinations are generated for all underlying instruments that are connected to the rule specified. If only the underlying instrumentInternalId attribute is specified, the system will try to find all rules connected to the underlying instrument and generate combinations using all rules found. If both a combinationRuleId and a instrumentInternalId are specified, the system will use the provided rule and generate combinations only for the underlying instrument specified.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
13	underlyingAtms		AtTheMoneyData[]	Array of at-the-money pairs, that is, pairs of Identifications of the underlying equity (a tradable instrument) and its current at-the-money value. If the ATM value is to be determined by the system, a null is specified. If provided, the elements in this array have to match the elements in GenerationRuleData.instrumentReferences.
14	startingDate	required	String	Starting date of the series to be generated. By using this date, it is possible to generate instruments to be used in the future. Example: In October, it is possible to generate the options that apply from Jan 1.
15	customUnderlyingInfo		String	Possible customer-specific information used to determine the underlying instrument.
16	combinationRuleId		Long	The identity of the CombinationRule to be used for this request.
This request will normally return a response of type GenerationRsp.

Message: ScheduledGenerateCombinationsReq

Message ID: 613

Type: Market and Instrument Management Messages

Description: A request to add a scheduled series generation. In addition to the standard schedule time (see the executeWhen attribute), a repeat interval may be specified.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	combinationRuleId		Long	The identity of the CombinationRule to be used for this request.
13	underlyingAtms		AtTheMoneyData[]	Array of at-the-money pairs, that is, pairs of Identifications of the underlying equity (a tradable instrument) and its current at-the-money value. If the ATM value is to be determined by the system, a null is specified. If provided, the elements in this array have to match the elements in GenerationRuleData.instrumentReferences.
14	startingDate	required	String	Starting date of the series to be generated. By using this date, it is possible to generate instruments to be used in the future. Example: In October, it is possible to generate the options that apply from Jan 1.
15	customUnderlyingInfo		String	Possible customer-specific information used to determine the underlying instrument.
16	repeatDaily		boolean	If this attribute is set to true, the request will be automatically rescheduled to run the next day (at the same time as specified).
17	synchronizeWithAtm		boolean	If this attribute is set to true, the request will wait for at-the-money prices to be available before the scheule is executed.
This request will normally return a response of type CdResponse.

Message: SetTradableInstrumentReferenceReq

Message ID: 624

Type: Market and Instrument Management Messages

Description: A request to set the referenced TradableInstrument for an TradableInstrumentReference. If the reference is set it will set accordingly, thus overriding the expiration rules set for TradableInstrumentReference. If reference is null the expiration rules for TradableInstrumentReference will apply.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	tradableInstrumentReferenceId	required	String	The alias tradable instrument to act on.
13	tradableInstrumentId		String	The tradable instrument id for the alias to reference.
This request will normally return a response of type CdResponse.

Message: ScheduledSetTradableInstrumentReferenceReq

Message ID: 625

Type: Market and Instrument Management Messages

Description: A request to add a scheduled set alias. In addition to the standard schedule time (see the executeWhen attribute), a repeat interval may be specified.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	tradableInstrumentReferenceId	required	String	The alias tradable instrument to act on.
13	tradableInstrumentId		String	The tradable instrument id for the alias to reference.
14	repeatDaily		boolean	If this attribute is set to true, the request will be automatically rescheduled to run the next day (at the same time as specified).
This request will normally return a response of type CdResponse.

6.4.2.1 Market and Instrument Management Messages (Internal)

Message: GenerationRuleReq

Message ID: 546

Type: Market and Instrument Management Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: A base request to add/update/delete an Instrument/TradableInstrument generation rule.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	generationRule	required	GenerationRule	Complete information about the generation rule.
Message: CombinationRuleReq

Message ID: 598

Type: Market and Instrument Management Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: A base request to add/update/delete an Instrument/TradableInstrument combination rule.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	combinationRule	required	CombinationRule	Complete information about the generation rule.
Message: StrikePriceTableReq

Message ID: 559

Type: Market and Instrument Management Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: A base request to add/update/delete a strike price table.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	strikePriceTable	required	StrikePriceTable	Complete information about the strike price table.
Message: ExpirationRuleReq

Message ID: 605

Type: Market and Instrument Management Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: A base request to add/update/delete an expiration rule.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
26	expirationRule	required	ExpirationRule	Complete information about the expiration rule.
6.5 News Messages

6.5.1 News Management Messages

Message: News

Message ID: 1597

Type: News Management Messages

Description: Contains data for news to be inserted.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	key		String	Populated by source cache, used to identify parent (null if root object).
2	cacheId		String	Populated by source cache, used to identify cache.
3	action		Integer	Populated by source cache, used to identify cache action (CACHE_ACTION).
Allowed values: see constant group CACHE_ACTION

4	stateSequenceNumber		long	This sequence number series is common for all caches. This means that for a specific cache instance, the sequence number is not necessarily consecutive (but constantly increasing).
5	uniqueObjectId		String	This field contains a string-id. The id is unique among all objects and may be used to retrieve a specific instance. Do not however, try to interpret the contents.
8	isDeleted		Boolean	Internal RefDataCache use only. If set to true, this object has been removed and is not visible to external users.
9	reportType	required	String (12)	The type of News.
10	marketId	required	String (1)	The market the news applies to.
Allowed values: see constant group NewsMarkets

11	language	required	String	The language the news is presented in.
Allowed values: see constant group ReportLanguageTypes

12	symbolLevel		String (1)	The symbol level the news refers to.
13	symbolName	required	String (20)	The symbol name the news refers to.
14	newsType		String (4)	The type of news.
15	reportFileName		String (80)	The report file name.
16	pdfFileName		String (80)	The PDF file name.
17	xmlFileName		String (80)	The XML file name.
18	publishDate	required	String (23)	The date published. Format yyyy-MM-dd'T'HH:mm:ss.SSS.
19	headLine		String (250)	The headline for the news.
20	senderName	required	String (20)	The sender name.
21	period		String (4)	The period.
22	dateAsOf		String (11)	The sender type. Format yyyy-MM-dd
23	dateAsOfBalanceSheet		String (11)	The as of date for the balance sheet. Format yyyy-MM-dd
24	dateAsOfCashFlow		String (11)	The as of date for the cash flow. Format yyyy-MM-dd
25	quarter		Integer	The quarter the news represents.
Allowed values: see constant group ReportQuarterTypes

26	finStmtType		Integer	The financial statement type.
Allowed values: see constant group ReportFinStmtType

27	finStmtStatus		Integer	The financial statement status.
Allowed values: see constant group ReportFinStmtStatus

28	adjustedFinStmtStatus		Integer	The adjusted financial statement status.
Allowed values: see constant group ReportAdjFinStmtStatus

29	noticeFlag		String (1)	Notice flag.
Allowed values: see constant group ReportNoticeFlag

30	confirmFlag		String (20)	Confirm flag
Allowed values: see constant group ConfirmFlag

31	status	required	Integer	The financial statement.
Allowed values: see constant group ReportStatus

32	templateCode		String[]	Template codes. An array of template codes.
33	newsID	required	String (20)	The id of this news.
34	newsGroup	required	String (20)	
35	newsUniqueID		String (32)	Unique id generated by TRADExpress.
36	timeStamp		String (23)	The date and time of modification for this reference data object. Format: yyyy-mm-ddTHH.MM.SS.sss. May be null if the object never has been updated.
Message: NewsEvent

Message ID: 1614

Type: News Management Messages

Description: New Message.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
2	sequenceNumber		long	Synchronization sequence number.
3	news	required	News	The news message
Message: AddNewsReportTypesReq

Message ID: 1591

Type: News Management Messages

Description: Add one or many AddNewsReportTypesReq.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	newsReportTypes	required	NewsReportTypes[]	Array of NewsReportTypes to add.
This request will normally return a response of type CdResponse.

Message: UpdateNewsReportTypesReq

Message ID: 1592

Type: News Management Messages

Description: Update an existing NewsReportTypes.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	newsReportTypes	required	NewsReportTypes	NewsReportTypes to update.
This request will normally return a response of type CdResponse.

Message: RemoveNewsReportTypesReq

Message ID: 1593

Type: News Management Messages

Description: Remove an existing NewsReportTypes.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	newsReportTypes	required	NewsReportTypes	NewsReportTypes to update.
13	removeType	required	Integer	The type of remove operation to be conducted. Allowed values are defined in the class CACHE_ACTION and should be one of CACHE_ACTION.REMOVE_CACHE, CACHE_ACTION.REMOVE_CACHE_DB, CACHE_ACTION.REMOVE_CACHE_DB_FORCED or CACHE_ACTION.REMOVE_CACHE_FORCED
This request will normally return a response of type CdResponse.

Message: AddNewsReq

Message ID: 1596

Type: News Management Messages

Description: New Message.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	news	required	News	The news information to be inserted.
This request will normally return a response of type CdResponse.

Message: QueryNewsReq

Message ID: 1598

Type: News Management Messages

Description: New Message.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	newsTimeFrom		String	A string in format yyyy-MM-ddTHH:mm:ss.SSS.
13	newsTimeTo		String	A string in format yyyy-MM-ddTHH:mm:ss.SSS.
This request will normally return a response of type QueryNewsRsp.

Message: QueryNewsRsp

Message ID: 1599

Type: News Management Messages

Description: Contains data to be updated from index eod plugin.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
6	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
7	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
8	news	required	News[]	Contains news as request in query.
6.6 Clearing

Message: UpdateOpenInterestReq

Message ID: 1631

Type: Clearing

Description: Contains an array of open inteterst data (OpenInterestData) that should be updated for specified orderbooks.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
9	openInterests	required	OpenInterestData[]	Indicatives price updates.
10	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
11	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
12	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
13	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type UpdateOpenInterestRsp.

Message: UpdateOpenInterestRsp

Message ID: 1632

Type: Clearing

Description: Response to UpdateOpenInterestReq.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
6	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
7	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
Message: OpenInterestData

Message ID: 1633

Type: Clearing

Description: Contains open interest and orderbook.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	orderBook	required	Long	The order book the data is bound for.
2	openInterest		Integer	The open interest of the orderbook.
Message: UpdateSettlementPriceReq

Message ID: 1634

Type: Clearing

Description: Contains an array of open inteterst data (OpenInterestData) that should be updated for specified orderbooks.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
9	settlementPriceDatas	required	SettlementPriceData[]	Indicatives price updates.
10	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
11	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
12	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
13	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type UpdateSettlementPriceRsp.

Message: UpdateSettlementPriceRsp

Message ID: 1635

Type: Clearing

Description: Response to UpdateSettlementPriceReq.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
6	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
7	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
Message: SettlementPriceData

Message ID: 1636

Type: Clearing

Description: Contains open settlementPrice and orderbook.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	orderBook	required	Long	The order book the data is bound for.
2	settlementPrice	required	Long	The value that should be set as settlementprice (not as referenceprice), this will also set the settlementDate.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

Message: UpdateSettlementAndReferencePriceReq

Message ID: 1639

Type: Clearing

Description: Contains an array of settlement and reference price data (SettlementAndReferencePriceData) that should be updated for specified orderbooks.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
12	settlementPriceDatas	required	SettlementAndReferencePriceData[]	Price updates.
This request will normally return a response of type UpdateSettlementAndReferencePriceRsp.

Message: UpdateSettlementAndReferencePriceRsp

Message ID: 1640

Type: Clearing

Description: Response to UpdateSettlementAndReferencePriceReq.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
6	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
7	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
Message: SettlementAndReferencePriceData

Message ID: 1641

Type: Clearing

Description: Contains settlementPrice, referencePrice and orderbook.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	orderBook	required	Long	The order book id.
2	settlementPrice		Long	The value that should be set as settlement price, this will also set the settlementDate.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

3	referencePrice		Long	The value that should be set as reference price.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

Message: CopySetPricesToRefPricesReq

Message ID: 1642

Type: Clearing

Description: Requests the copying of the settlement price to the reference price for all futures and options.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
7	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
8	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
9	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
10	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
11	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CopySetPricesToRefPricesRsp.

Message: CopySetPricesToRefPricesRsp

Message ID: 1643

Type: Clearing

Description: Response to CopySetPricesToRefPricesReq.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
6	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
7	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
7 Text Information from Operation Staff

Message: MarketMessage

Message ID: 160

Type: Text Information from Operation Staff

Description: Holds one market message.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	message		String (255)	The message text.
2	timestamp		String (24)	The date and time of the message. The format is yyyy-MM-ddTHH:mm:ss.SSS.
3	sequenceNumber		long	Synchronization sequence number.
4	recipient		String (255)	The target recipient of the message, used only if it is not directed to all users.
5	messageId		Long	Unique identification of the message intraday.
8 Market Operations Messages

Message: TradeHaltReq

Message ID: 10

Type: Market Operations Messages

Description: Request to trade halt a group of order books. Note that all order books must belong to the same order book rule group and same subscription group.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
5	clearingMember		String (64)	Only applicable for Order and Trade related messages. The Member responsible for clearing the order or trade.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
7	account		String (64)	Only applicable for Order and Trade related messages. A free text field passed through for internal member use.
8	tradeHaltEventType	required	Integer	Type of trade halt event.
Allowed values: see constant group TRADE_HALT_EVENT_TYPE

9	tradeHaltReason	required	Integer	Trade halt reason.
Allowed values: see constant group TRADE_HALT_REASON

10	tradeHaltInfo	required	String	Message giving additional information about the trade halt event.
11	orderBook	required	Long[]	The order book(s) that have had their trade halt status event changed. All specified order book must belong to the same orderbook rule group and same subscription group.
12	tradeHaltType		Integer	Type of trade halt.
Allowed values: see constant group TRADE_HALT_TYPE

13	resumeAt		String	It is possible to specify an absolute time when the trade halt lift is to be executed without using the standard schedule based trade halt lift procedure. The format is HH:mm:ss.
14	resumeImmediately		Boolean	It is possible to specify that the trade halt lift is to be executed immediately without using the standard schedule based trade halt lift procedure.
15	tradeHaltId	required	String	Identifier for this particular trade halt. The format is yyyy-MM-ddTHH:mm:ss.SSS
16	resumeDelay		Long	When using the standard schedule based trade halt lift procedure (i.e. resumeAt and resumeImmediatly is set to null) it is possible to specify a delay before the trade halt lift procedure is executed. The delay is specified in milli seconds. The default value if this field is not defined is 0.
17	rejectLiftIfDoNoFit		Boolean	When using the standard schedule based trade halt lift procedure (i.e. resumeAt and resumeImmediatly is set to null) it is possible to specify that in the case that a trade halt lift procedure do not fit prior to the next state change the request should be rejected instead of generating a PENDING_TRADE_HALT_LIFT event. The default behaviour if this field is not defined is to generate a PENDING_TRADE_HALT_LIFT.
18	resumeTime		String	When using the standard schedule based trade halt lift procedure (i.e. resumeAt and resumeImmediatly is set to null) it is possible to specify an absolute time when the trade halt lift procedure is to be executed. The format is HH:mm:ss. If set then whatever value is set in the resumeDelay field is ignored.
501	traderId		String (64)	Only applicable for Order and Trade related messages. The TraderID for the order/trade.
This request will normally return a response of type TradeHaltRsp.

Message: TradeHaltRsp

Message ID: 11

Type: Market Operations Messages

Description: Response to an enter order request.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
Message: StateFreezeReq

Message ID: 15

Type: Market Operations Messages

Description: Request to freeze the system state scheduler

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
5	clearingMember		String (64)	Only applicable for Order and Trade related messages. The Member responsible for clearing the order or trade.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
7	account		String (64)	Only applicable for Order and Trade related messages. A free text field passed through for internal member use.
8	stateFreezeEventType	required	Integer	Type of state freeze event.
Allowed values: see constant group STATE_FREEZE_EVENT_TYPE

9	freezeType		Integer	Type of freeze.
Allowed values: see constant group STATE_FREEZE_TYPE

10	freezePartition	required	Integer	The Matching Engine partition to freeze.
501	traderId		String (64)	Only applicable for Order and Trade related messages. The TraderID for the order/trade.
This request will normally return a response of type StateFreezeRsp.

Message: StateFreezeRsp

Message ID: 16

Type: Market Operations Messages

Description: Response to a StateFreezeReq

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
Message: SwitchScheduleReq

Message ID: 17

Type: Market Operations Messages

Description: Request to switch schedule

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
5	clearingMember		String (64)	Only applicable for Order and Trade related messages. The Member responsible for clearing the order or trade.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
7	account		String (64)	Only applicable for Order and Trade related messages. A free text field passed through for internal member use.
8	orderBookRuleGroupId	required	String	The id of the order book rule group on which the switch is being performed.
9	switchScheduleEventType	required	Integer	Type of state freeze event.
Allowed values: see constant group SWITCH_SCHEDULE_EVENT_TYPE

501	traderId		String (64)	Only applicable for Order and Trade related messages. The TraderID for the order/trade.
This request will normally return a response of type SwitchScheduleRsp.

Message: SwitchScheduleRsp

Message ID: 18

Type: Market Operations Messages

Description: Response to a SwitchScheduleReq

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
Message: GetActiveScheduleReq

Message ID: 19

Type: Market Operations Messages

Description: Get the active schedule.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
5	clearingMember		String (64)	Only applicable for Order and Trade related messages. The Member responsible for clearing the order or trade.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
7	account		String (64)	Only applicable for Order and Trade related messages. A free text field passed through for internal member use.
8	orderBookRuleGroupId	required	String	The id of the order book rule group for which the query is relevant
501	traderId		String (64)	Only applicable for Order and Trade related messages. The TraderID for the order/trade.
This request will normally return a response of type GetActiveScheduleRsp.

Message: GetActiveScheduleRsp

Message ID: 20

Type: Market Operations Messages

Description: Response to a GetActiveScheduleReq-

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	scheduleType		Integer	A NOTDEF schedule is to be interpreted as an error situation.
Allowed values: see constant group SCHEDULE_TYPE

6	messageReference		String	The message reference from the corresponding RequestMessage.
Message: StoreUserPropertiesReq

Message ID: 118

Type: Market Operations Messages

Description: A request to store user-defined properties in the system. Typically used by some clients to store user/client-specific data.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	propertiesByCategory		UserPropertiesCategory[]	An array of UserPropertiesCategory objects.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: QueryUserPropertiesReq

Message ID: 119

Type: Market Operations Messages

Description: A query for the stored properties for a specific user, or the global user properties.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	userId		String	The identification of the user. A userId with value null retrieves the global (for all users) properties only.
13	categoryId		String	Optional parameter. If specified, only parameters with this category id will be returned.
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type QueryUserPropertiesRsp.

Message: QueryUserPropertiesRsp

Message ID: 120

Type: Market Operations Messages

Description: A response to a QueryUserPropertiesReq request.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
6	userId		String	The identification of the user. The response returns the user-specific properties as well as the system global properties. The global properties data have userIds set to null.
7	propertiesCategory		UserPropertiesCategory[]	Array of property categoryd data requested.
8	messageReference		String	The message reference from the corresponding RequestMessage.
9	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
Message: ChangePasswordAdminReq

Message ID: 127

Type: Market Operations Messages

Description: Request to change a user account's password. This message is used by market operations to change a another user's password. The user of this request has to be logged in as a market operator in order to change the password.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	memberId		String	The id of the user's member (firm). Required because usernames are only unique within a member firm.
13	userId		String	The identification of the user (username).
14	newPassword		String	The new password for the user.
15	allowLogin		Boolean	If allowLogin is set to true, the user will be allowed to login, otherwise login attempts from this user will be rejected.
16	initial		Boolean	If initial is set to true, the user must change password on next login.
17	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
18	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: LoggedInUserData

Message ID: 137

Type: Market Operations Messages

Description: User data for logged in users.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	user		String	The user's identification.
2	member		String	The member that the user belongs to.
3	taxInstance		String	The TAX instance used for the session.
4	loginTime		String	Login time, formatted as HH:mm:ss.
5	clientHost		String	Client host information.
6	clientType		int	Type of client.
7	cdSessionId		Long	Unique session id for this session. Created by CD during logon.
8	isLoggedIn		boolean	Indicates whether user is logged in or not. Can only be false when user signs off and in the corresponding update i.e. in the broadcast, never in query responses.
9	logoutType		int	The type of logout.
Allowed values: see constant group LOGOUT_TYPE

10	loadFactor		int	The user's load factor.
Message: SendMarketMessageReq

Message ID: 159

Type: Market Operations Messages

Description: A request to send a market message.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	message		String (255)	The message text.
13	timestamp		String (24)	The date and time of the message. The format is yyyy-MM-ddTHH:mm:ss.SSS.
14	recipient		String (255)	The target recipient of the message, used only if it is not directed to all users.
15	messageId		Long	Unique identification of the message intraday.
16	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
17	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: OrderBookRsp

Message ID: 163

Type: Market Operations Messages

Description: A response to an add, update or remove orderbook request.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
6	orderBookId		long	The resulting orderbook id.
7	messageReference		String	The message reference from the corresponding RequestMessage.
8	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
Message: KickUserSessionReq

Message ID: 196

Type: Market Operations Messages

Description: A request to immediately terminate a single user session.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	cdSessionId		Long	Session id for the session to terminate (available in the LoggedInUserData object).
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: ForceUserLogoutReq

Message ID: 197

Type: Market Operations Messages

Description: A request to force a logout of a logged-in user. All sessions incorporating multiple TAXes are terminated.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	cdUserId		String	User Identifier.
13	logoutType		int	A code defining the type of forced logout. Default valus should be LOGOUT_TYPE.FORCED
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: UpdateAlertReq

Message ID: 215

Type: Market Operations Messages

Description:

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	alertIds	required	String[]	Array of IDs of the alert The id is assigned when the message is published on the 'AM'
3	alertStatus		byte	The status the alert. If no value is set, the old status value is kept for the alert.
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert If no value is set, the old value is kept.
This request will normally return a response of type SimpleRsp.

Message: AlertData

Message ID: 216

Type: Market Operations Messages

Description:

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

2	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
3	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
Message: AlertMessage

Message ID: 217

Type: Market Operations Messages

Description: This is the base class for all project-specific alerts. It should be considered to be abstract. The reporting component should only set the 'alertSubject' and 'alertMessage' fields. Any other field is used by the alert service and may be overridden. The 'alertSubject' and 'alertMessage' fields may have any value. It is recommended to use an extension of the AlertMessage class when reporting alerts, the extension may hold imported project-specific information, for example, the instrument or user/member structures.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
Message: FixAlertMessage

Message ID: 436

Type: Market Operations Messages

Description: Extends the basic ProteusAlertMessage

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
13	sessionId		String	FIX session identifier
14	msgSeqNum		int	FIX message sequence number (tag 35 MsgSeqNum)
Message: FixDontKnowTradeAlert

Message ID: 424

Type: Market Operations Messages

Description: Alert raised when a FIX Don't Know Trade (DK) message received.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
13	sessionId		String	FIX session identifier
14	msgSeqNum		int	FIX message sequence number (tag 35 MsgSeqNum)
15	orderId		String	order identifier
16	execId		String	Execution ID of problem execution
17	side		boolean	Volume of child order.
18	tradePrice		Long	Execution price.
19	tradeVolume		Long	Execution volume.
Message: MdcDeviationAlertMessage

Message ID: 437

Type: Market Operations Messages

Description: This alert is used to indicate a state change for an order book

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
13	orderbookId		Long	Order book Id
14	market		String	Market
15	newState		String	Market state
Message: MdcPriceDeviationAlertMessage

Message ID: 438

Type: Market Operations Messages

Description: This alert is used to indicate a price deviation for a market.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
13	orderbookId		Long	Order book Id
14	market		String	Market
15	newState		String	Market state
Message: MdcPriceNormalAlertMessage

Message ID: 439

Type: Market Operations Messages

Description: This alert is used to indicate a normal price for a market. This message should only be sent if a deviation message has been sent before.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
13	orderbookId		Long	Order book Id
14	market		String	Market
15	newState		String	Market state
Message: MdcMarketStateChangeAlertMessage

Message ID: 440

Type: Market Operations Messages

Description: This alert is used to indicate that a market has flagged a state change

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
13	market		String	Market
14	newState		String	New state of market
Message: MdcMdgsAvailableAlertMessage

Message ID: 441

Type: Market Operations Messages

Description: This alert is used to indicate that there are connections to some MDGs in the MDC

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
Message: MdcMdgsMissingAlertMessage

Message ID: 442

Type: Market Operations Messages

Description: This alert is used to indicate that there are no connections to any MDGs in the MDC

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
Message: MdcOrderbookStateChangeAlertMessage

Message ID: 443

Type: Market Operations Messages

Description: This alert is used to indicate a state change for an order book

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
13	orderbookId		Long	Order book Id
14	market		String	Market
15	newState		String	New state of order book
Message: CdAlertMessage

Message ID: 219

Type: Market Operations Messages

Description: Basic alert message sent from the Common Data server

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
13	alertedUserId		String	Only a test
Message: MeAlertMessage

Message ID: 218

Type: Market Operations Messages

Description: Basic alert message sent from the Matching engine

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
13	orderbookId		long	Orderbook id.
Message: MeActiveOrdersCountAlert

Message ID: 222

Type: Market Operations Messages

Description: Alert sent when the number of active orders for one orderbook exceeds a threshold.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
13	orderbookId		long	Orderbook id.
Message: MeLateStateChangeAlert

Message ID: 224

Type: Market Operations Messages

Description: Alert sent when an orderbook has not changed to the expected trading state within a certain time.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
13	orderbookId		long	Orderbook id.
Message: MeMemberOrderThresholdAlert

Message ID: 433

Type: Market Operations Messages

Description: Alert sent when an order insertion is rejected because the member has too many orders in an order book.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
13	orderbookId		long	Orderbook id.
14	member		String	Entering member for the rejected order.
Message: MeOrderbookInconsistencyAlert

Message ID: 223

Type: Market Operations Messages

Description: Alert sent when an orderbook is suspected to be in an inconsistent state.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
13	orderbookId		long	Orderbook id.
Message: MeOrderBookOrderThresholdAlert

Message ID: 435

Type: Market Operations Messages

Description: Alert sent when an order insertion is rejected because there are too many orders in an order book.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
13	orderbookId		long	Orderbook id.
14	member		String	Entering member for the rejected order.
Message: MePegRecalculationAlert

Message ID: 221

Type: Market Operations Messages

Description: Alert sent when the number of peg recalculations exceeds a threshold. This count is partition wide, not orderbook specific.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
13	orderbookId		long	Orderbook id.
Message: MePriceBandAlert

Message ID: 225

Type: Market Operations Messages

Description: Alert sent when a trade is to be executed at a price outside the static price band.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
13	orderbookId		long	Orderbook id.
Message: MeTradingProtectionLimitAlert

Message ID: 475

Type: Market Operations Messages

Description: Alert sent when a trading protection limit has been exceeded.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
13	orderbookId		long	Orderbook id.
14	member		String	Entering member.
Message: MeRestoreLongOrderAlert

Message ID: 220

Type: Market Operations Messages

Description: Alert sent when validation of restored long order fails.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
13	orderbookId		long	Orderbook id.
Message: MeSubscriptionGroupOrderThresholdAlert

Message ID: 434

Type: Market Operations Messages

Description: Alert sent when an order insertion is rejected because there are too many orders in a subscription group (sequence stream).

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
13	orderbookId		long	Orderbook id.
14	subscriptionGroupId		Integer	The numeric id of the subscription group (sequence stream).
15	subscriptionGroupName		String	The name of the subscription group (sequence stream).
Message: IeAlertMessage

Message ID: 499

Type: Market Operations Messages

Description: Basic alert message sent from the Index Engine.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
13	indexId		long	The index' id.
14	orderBookId		Long	A specific order book of the index.
Message: CdResponse

Message ID: 227

Type: Market Operations Messages

Description: A response to be used as super class for all responses from CD.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
6	messageReference		String	The message reference from the corresponding RequestMessage.
7	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
Message: ScopeReductionData

Message ID: 228

Type: Market Operations Messages

Description: This object describes records returned in a scope reduction response.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	memberId		String	Member id of an affected member.
2	userIds		String[]	User ids of an affected member.
3	orderbookId		Long[]	Orderbook ids that the member no longer has access to.
Message: ScopeReductionRsp

Message ID: 229

Type: Market Operations Messages

Description: This is a response from requests that affect a service profile and reduces one or some of members, users and orderbooks. Known service methods so far are updateMember, updateUser, updateServiceProfile and deleteServiceProfile.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
6	removedMemberIds		ScopeReductionData[]	An array of member ids that reference members that were reduced from the new service profile scope.
7	messageReference		String	The message reference from the corresponding RequestMessage.
8	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
Message: FieldConstraint

Message ID: 243

Type: Market Operations Messages

Description: Defines a search constraint for the value of a single field.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	field		String	Field name.
2	type		int	Type of constraint. Values defined by interface FieldConstraintType.
Allowed values: see constant group FieldConstraintType

3	value		String	Field value.
Message: QueryMeAllowedRequestsReq

Message ID: 246

Type: Market Operations Messages

Description:

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
This request will normally return a response of type QueryMeAllowedRequestsRsp.

Message: QueryMeAllowedRequestsRsp

Message ID: 247

Type: Market Operations Messages

Description:

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	reply		String	Generic single string reply
6	requests		String[]	All requests available in MeServices.
7	messageReference		String	The message reference from the corresponding RequestMessage.
Message: TapStatus

Message ID: 253

Type: Market Operations Messages

Description: The status codes are defined by com.cinnober.framework.generated.bi.tap.misc.TapStatusCode and project-specific classes.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
Message: CacheObjectReference

Message ID: 254

Type: Market Operations Messages

Description:

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	cacheObjectType		String	The object type.
2	cacheObjectId		String	Unique id of the cache object.
Message: SetStatusReq

Message ID: 255

Type: Market Operations Messages

Description:

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	refDataType		String	The reference data type to set status on. Null not allowed. Combined with refDataObjectId gives an actual instance.
3	refDataObjectId		String	The unique id of the reference data object to set status on.
4	isDisabled	required	Boolean	If set to true, enableCounter will be disregarded and the market will be enabled.
5	overrideDisable		Boolean	If set to true, enableCounter will be disregarded and the market will be enabled.
6	recurseEnabledState	required	Boolean	If set to true, all elements below will be enabled, disregarding their previous enabled state.
This request will normally return a response of type SetStatusRsp.

Message: SetStatusRsp

Message ID: 256

Type: Market Operations Messages

Description:

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	reply		String	Generic single string reply
6	numberOfOrderbooksHaltOk		int	Number of orderbooks that were halted successfully.
7	numberOfOrderbooksHaltFailed		int	Number of orderbooks that failed halt.
8	numberOfOrderbooksClearOk		int	Number of orderbooks that were cleared successfully.
9	numberOfOrderbooksClearFailed		int	Number of orderbooks that failed clear.
10	numberOfHaltErrors		int	Number of errors that occured during halt.
11	subResults		TapStatus[]	Complementary status information from internal requests called from gateway. This does not replace the status field. That still contains the overall status information.
12	messageReference		String	The message reference from the corresponding RequestMessage.
Message: WideTradeHaltReq

Message ID: 257

Type: Market Operations Messages

Description: Request used to halt all orderbooks under a Market, MarketList, Segment, Instrument or a single orderbook.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	dataObject		CacheObjectReference[]	The object that should be halted. Null not allowed. Must be one of: Market, MarketList, Segment, Instrument or TradableInstrument.
3	tradeHaltReason		Integer	The reason for this trade halt defined by TRADE_HALT_REASON.
Allowed values: see constant group TRADE_HALT_REASON

4	tradeHaltEventType		Integer	Trade halt event type defined by TRADE_HALT_EVENT_TYPE.
Allowed values: see constant group TRADE_HALT_EVENT_TYPE

5	tradeHaltType		Integer	Trade halt type defined by TRADE_HALT_TYPE.
Allowed values: see constant group TRADE_HALT_TYPE

6	message		String	Message giving additional information about the trade halt event.
7	resumeAt		String	When to resume if not immediately - null means immediately.
8	tradeHaltTimestamp		String	Part of the key that identifies a specific trade halt.
9	resumeImmediately		boolean	Resume immediately or based on either schema or time.
10	resumeDelay		Long	Delay in ms before lifting.
11	rejectLiftIfDoNoFit		Boolean	Reject if not possible within specified time frame.
12	resumeTime		String	Absolute time for scheduled based lift.
This request will normally return a response of type WideTradeHaltRsp.

Message: WideTradeHaltRsp

Message ID: 258

Type: Market Operations Messages

Description: Result of a WideTradeHaltReq

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	reply		String	Generic single string reply
6	numberOfOrderbooksOk		int	Number of orderbooks that were halted/lifted successfully.
7	numberOfOrderbooksFailed		int	Number of orderbooks that failed halt/lift.
8	subResults		TapStatus[]	Complementary status information from internal requests called from gateway. This does not replace the status field. That still contains the overall status information.
9	messageReference		String	The message reference from the corresponding RequestMessage.
Message: SwitchToSecondaryTradingScheduleReq

Message ID: 261

Type: Market Operations Messages

Description: Request used to change the trading schedule to secondary trading schedule. The response will be a SimpleRsp.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	cacheObject		CacheObjectReference[]	Switch trading schedules to secondary (temp).
This request will normally return a response of type SimpleRsp.

Message: BboStatistics

Message ID: 263

Type: Market Operations Messages

Description: Statistics for a bbo on a market

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	marketName		String	
2	status		String	
3	lastTrade		Long	
4	lastTradeTime		Long	
5	bidPrice		Long	
6	bidQty		Long	
7	askPrice		Long	
8	askQty		Long	
Message: BboStatisticsReq

Message ID: 264

Type: Market Operations Messages

Description: Request for bbo statistics

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	timestamp		long	The timestamp of the last message that the marketplace received.
9	fromSequenceNumber		int	
10	toSequenceNumber		int	
11	market		String	
12	orderbookId		Long	The id of the orderbook to get statistics on
13	sourcePartition		Integer	Optional partition of the originating source.
This request will normally return a response of type BboStatisticsRsp.

Message: BboStatisticsRsp

Message ID: 265

Type: Market Operations Messages

Description: Response to a bbo statistics request

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	orderbookId		long	
6	statistics		BboStatistics[]	The available markets and their corresponding statistics.
7	messageReference		String	The message reference from the corresponding RequestMessage.
Message: SetLastTradePriceReq

Message ID: 266

Type: Market Operations Messages

Description: Request to update last trade or last auction price or last reference price.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
5	clearingMember		String (64)	Only applicable for Order and Trade related messages. The Member responsible for clearing the order or trade.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
7	account		String (64)	Only applicable for Order and Trade related messages. A free text field passed through for internal member use.
8	orderBookId	required	Long	The order book id.
9	tradePrice		Long	Last trade price.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

10	auctionPrice		Long	Last auction price.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

11	referencePrice		Long	Last reference price.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

501	traderId		String (64)	Only applicable for Order and Trade related messages. The TraderID for the order/trade.
This request will normally return a response of type SetLastTradePriceRsp.

Message: SetLastTradePriceRsp

Message ID: 267

Type: Market Operations Messages

Description: Response to a last trade price update.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
Message: UserSessionData

Message ID: 268

Type: Market Operations Messages

Description: Information about a logged in user's session.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	member		String	The member that the user belongs to.
2	user		String	The user's identification.
4	clientHost		String	Client host information.
5	loginTime		String	Login time, formatted as HH:mm:ss.
6	clientType		int	Type of client.
7	taxInstance		String	The TAX instance used for the session.
8	loadFactor		int	The user's load factor.
Message: GetAllUserSessionsReq

Message ID: 269

Type: Market Operations Messages

Description: A request to retrieve information about all active user sessions.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	memberFilter		String	Member filter, if not null only users of this member will be returned.
13	taxInstance		String	TAX instance filter, if not null only users using this TAX will be returned.
14	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
15	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type GetAllUserSessionsRsp.

Message: GetAllUserSessionsRsp

Message ID: 270

Type: Market Operations Messages

Description: A response to a GetAllUserSessionsReq.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
6	userSessions		UserSessionData[]	UserSessionData data.
7	messageReference		String	The message reference from the corresponding RequestMessage.
8	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
Message: RetransmissionRequest

Message ID: 271

Type: Market Operations Messages

Description: Retransmission query for broadcast flows

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	publishingPartition		String	Name of the publishing partition
3	flowId		String	Type of broadcast flow. Usually defined by the class name.
4	market		String	The market search attribute
5	primary		String	The primary search attribute
6	second		String	The secondary search attribute
7	fromNumber		long	Start sequence number stating an explicit sequence
8	toNumber		long	End sequence number stating an explicit sequence
9	suggestedSegmentSize		int	The segment size suggested by the client
10	latestFirst		boolean	If false, normal retransmission starting at sequence number 0 and any following brodcasts arrive in ascending order. If true, retransmission starts with the latest seen broadcast and any following will come in descending order.
Message: QueryBdxRepositoryRsp

Message ID: 272

Type: Market Operations Messages

Description: Sent from the gateway to the client as a response to QueryBdxRepositoryReq.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	nextRequests		RetransmissionRequest[]	If the server returned fewer results than present (due to limitations in the server setup) this field will be set. Send them again to the server if you want to have more results
6	numberOfMatches		int	
7	messageReference		String	The message reference from the corresponding RequestMessage.
Message: QueryBdxRepositoryReq

Message ID: 273

Type: Market Operations Messages

Description: Request to search for orders/trades in the broadcast repository for a specific tradable instrument. The result is delivered in a GenericSearchRsp.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	orderbookId		Long	Orderbook of the tradable instrument. Null not allowed.
3	flow		int	Broadcast flow identifier.
4	member		String	Include events for this member only.
5	user		String	Include events for this user only.
6	orderId		String	Include events related to this orderId only.
7	tradeId		String	Include events related to this tradeId only.
8	fromTime		Long	Narrow the search scope to start from this time.
9	toTime		Long	Narrows the search scope to end at this time.
10	searchLimit		int	Max number of matching objects to return. If set to zero (default value), all matching objects will be returned.
11	typeOfTrade		Integer	Include only events of this type.
12	dealId		String	Include only events related to this dealId.
13	referenceTradeId		String	Include only events related to this referenceTradeID.
14	retransmissionRequests		RetransmissionRequest[]	If the server returned retransmission requests for the previous search, send them again to query for more results. If this field is set, the other ones are not required.
15	includeMemberUnits		Boolean	Search in descendant member units.
16	immediateResponse		boolean	If set to true, the resulting orders/trades will be returned in the response instead of in separate messages.
17	subTypeOfTrade		Integer	Include only events of this sub type
18	priceRangeFrom		Long	Include only events with price higher or equal to this price
19	priceRangeTo		Long	Include only events with price lower or equal to this price
503	shortSell		Boolean	Match short sell orders.
504	buySide		Boolean	Match buy side orders.
505	sellSide		Boolean	Match sell side orders.
506	nvdrFlag		Boolean	Match NVDR orders.
507	ttfFlag		Boolean	Match TTF orders.
508	stabilization		Boolean	Match stabilization orders.
509	traderId		String	Used to match the trader ID field.
510	clientAccount		String	Used to match the client account field.
511	ownerType		Integer	Used to match the client account field.
Allowed values: see constant group OWNER_TYPE

512	clearingMember		String	Used to match the clearing member field.
513	orgQtyFrom		Long	Used to match order original quantity.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

514	orgQtyTo		Long	Used to match order original quantity.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

515	timeOfInsertFrom		String	Used to match order time of entry (set when order inserted).
516	timeOfInsertTo		String	Used to match order time of entry (set when order inserted).
517	includeQuotes		Boolean	If set to true, both orders and quotes will be searched. If set to false, only orders will searched. Valid for flow PRIVATE_ORDERBOOK_EVENT_FLOW.
518	priceCondition		Integer	Used to match order types.
Allowed values: see constant group PRICE_CONDITION

519	hasQtyOpen		Boolean	Used to match order types.
520	validTill		Integer	Used to match order types.
Allowed values: see constant group VALID_TILL

521	minimumVolumeCondition		Integer	Used to match order types.
Allowed values: see constant group MINIMUM_VOLUME_CONDITION

525	stopOrder		Boolean	Match stop orders.
526	discretionaryOrder		Boolean	Match discretionary orders.
527	pegOrder		Boolean	Match peg orders.
This request will normally return a response of type QueryBdxRepositoryRsp.

Message: QueryMdcMarketStatisticsReq

Message ID: 274

Type: Market Operations Messages

Description: Query all MDC servers for market statistics information.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
This request will normally return a response of type QueryMdcMarketStatisticsRsp.

Message: MarketStatisticsData

Message ID: 275

Type: Market Operations Messages

Description:

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	market		String	The market.
2	status		String	The status of the market.
3	lastMessageTime		Long	The last time message received.
4	numberOfMessages		Long	The number of messages from marketplace.
5	incomingDataEnabled		Boolean	Is incoming data (manually) enabled/disabled for marketplace.
Message: QueryMdcMarketStatisticsRsp

Message ID: 276

Type: Market Operations Messages

Description: Returns market statistics from all MDC servers.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	marketStatistics		MarketStatisticsData[]	
6	messageReference		String	The message reference from the corresponding RequestMessage.
Message: QueryAllPrivateOrderEventsReq

Message ID: 278

Type: Market Operations Messages

Description:

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	orderBookId		Long	Orderbook id
This request will normally return a response of type SimpleRsp.

Message: UpdateExternalMarketReq

Message ID: 282

Type: Market Operations Messages

Description: A request to update an external market entry.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	externalMarket	required	ExternalMarket	New and complete external market data to replace the existing data.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type CdResponse.

Message: LogSearchCapabilitiesContribution

Message ID: 283

Type: Market Operations Messages

Description: Part of response to LogSearchCapabilitiesReq.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	rawData		byte[]	This is the Serializable raw data.
Message: LogSearchCapabilitiesReq

Message ID: 284

Type: Market Operations Messages

Description:

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
This request will normally return a response of type LogSearchCapabilitiesRsp.

Message: LogSearchCapabilitiesRsp

Message ID: 285

Type: Market Operations Messages

Description: Response to LogSearchCapabilitiesReq.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	contributions		LogSearchCapabilitiesContribution[]	It contains one element from each TxTracker server.
6	messageReference		String	The message reference from the corresponding RequestMessage.
Message: LogSearchResult

Message ID: 286

Type: Market Operations Messages

Description: Response to a search query is sent as broadcast events, BdxLogSearchResultEvent, carrying LogSearchResult.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	sessionKey	required	String	Session identifier for the TxTracker server
2	requestKey	required	String	Request identifier for the TxTracker server
3	serverKey		String	Identifier of the server that produced this result.
4	compressed		boolean	Indicates if the rawData is compressed or not.
5	rawData		byte[]	This is the Serializable raw data. Might be compressed if indicated by the compressed field.
6	last		boolean	Indicates if this was the last result event from a specific TxTracker server. There might be other results from other servers, which have their own last marker.
Message: LogSearchReq

Message ID: 287

Type: Market Operations Messages

Description: Response to this request is a LogSearchRsp. The result is sent as broadcast events LogSearchResult.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	sessionKey	required	String	Session identifier for the TxTracker server.
3	requestKey	required	String	Request identifier for the TxTracker server.
4	searchProfileName		String	
5	rawData		byte[]	This is the Serializable raw data.
This request will normally return a response of type LogSearchRsp.

Message: LogSearchRsp

Message ID: 288

Type: Market Operations Messages

Description: The response to the LogSearchRsp message.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	numberOfSubQueries	required	int	The search was divided into this number of queries and the client can expect the same number of LogSearchResult with the last flag assigned to true. In this way it is possible for the client to determine when the search is completed.
6	messageReference		String	The message reference from the corresponding RequestMessage.
Message: LogSearchDrillDownReq

Message ID: 289

Type: Market Operations Messages

Description:

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	sessionKey	required	String	Session identifier for the TxTracker server.
3	requestKey	required	String	Request identifier for the TxTracker server.
4	serverKey		String	Identifier of the server that produced the original result.
5	rawData		byte[]	This is the Serializable raw data.
This request will normally return a response of type LogSearchDrillDownRsp.

Message: LogSearchDrillDownRsp

Message ID: 290

Type: Market Operations Messages

Description: Response to LogSearchDrillDownReq.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	rawData		byte[]	This is the Serializable raw data.
6	messageReference		String	The message reference from the corresponding RequestMessage.
Message: LogSearchMultiDrillDownReq

Message ID: 291

Type: Market Operations Messages

Description: Response to this request is a LogSearchRsp. The result is sent as broadcast events LogSearchResult.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	sessionKey	required	String	Session identifier for the TxTracker server.
3	requestKey	required	String	Request identifier for the TxTracker server.
4	serverKey		String	Identifier of the server that produced the original result.
5	rawData		byte[]	This is the Serializable raw data.
This request will normally return a response of type LogSearchRsp.

Message: LogSearchCancelReq

Message ID: 292

Type: Market Operations Messages

Description: Response to this request is a SimpleRsp.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	sessionKey	required	String	Session identifier for the TxTracker server.
3	requestKey	required	String	Request identifier for the TxTracker server.
This request will normally return a response of type SimpleRsp.

Message: HaltPartitionsReq

Message ID: 432

Type: Market Operations Messages

Description: Halt all orderbooks with in one partition and give then all one halt identifier

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	partitionIds		Integer[]	The partitions for which to halt orderbooks
This request will normally return a response of type WideTradeHaltRsp.

Message: ResetValidityReq

Message ID: 514

Type: Market Operations Messages

Description:

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	refDataType		String	The reference data type to set validity on. Null not allowed. Combined with refDataObjectId gives an actual instance.
3	refDataObjectId		String	The unique id of the reference data object to set validity on.
4	validFromDate	required	String	The first date the tradable instrument is valid. The format is yyyy-MM-dd.
5	validToDate		String	The date to which the Tradable instrument is valid. The format is yyyy-MM-dd.
6	recurseSetValidToDate		boolean	If true, the validToDate should as well be propagated to all children.
This request will normally return a response of type SimpleRsp.

Message: MeBustTradeAlert

Message ID: 1562

Type: Market Operations Messages

Description: Alert sent when a trade bust is requested.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
13	orderbookId		long	Orderbook id.
14	tradeId		String	The id of the trade.
15	askMember		String	The id of the member on ask side.
16	bidMember		String	The id of the member on bid side.
17	askClearingMember		String	The id of the clearing member on ask side.
18	bidClearingMember		String	The id of the clearing member on bid side.
Message: MeMarketHaltAlert

Message ID: 1621

Type: Market Operations Messages

Description: Alert sent on market halt or lift halt.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
13	orderbookId		long	Orderbook id.
Message: MeOrderBookCircuitBreakerAlert

Message ID: 1622

Type: Market Operations Messages

Description: Alert sent when an orderbook circuit breakers triggers a halt.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
13	orderbookId		long	Orderbook id.
14	tradableInstrument		String	The id of the halted orderbook.
15	market		String	The market of the halted orderbook.
Message: MePriceBreakAlert

Message ID: 1658

Type: Market Operations Messages

Description: Alert sent when an price band triggers a halt.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
13	orderbookId		long	Orderbook id.
14	tradableInstrument		String	The shortname of the halted tradable instrument.
15	price		String	The price that triggered the halt.
16	time		String	The time when the halt was triggered.
Message: CdXmlLoadAlert

Message ID: 1624

Type: Market Operations Messages

Description: Alert sent when reference data is loaded from XML file.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
13	filename		String	Name of the loaded XML file.
14	numberOfEntries		Integer	Number of parsed entries.
15	numberOfErrors		Integer	Number of errors.
Message: CdCorporateActionExecutionEndedAlert

Message ID: 1625

Type: Market Operations Messages

Description: Alert sent when corporate action execution is finished.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
Message: CdCorporateActionConcurrentCancel

Message ID: 1647

Type: Market Operations Messages

Description: Alert sent when a corporate action was canceled by system due to concurrency.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
Message: CdCorporateActionExecutionAborted

Message ID: 1648

Type: Market Operations Messages

Description: Alert sent when the scheduled execution of corporate actions cannot be performed.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
Message: CdCorporateActionExecutionFailed

Message ID: 1649

Type: Market Operations Messages

Description: Alert sent when one specific corporate action cannot be executed.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
Message: CdCorporateActionOutOfTheMoneyCancel

Message ID: 1650

Type: Market Operations Messages

Description: Alert sent when a corporate action was canceled by system due being Out of the Money.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	type	required	byte	Not to be set directly by the reporting component.
Allowed values: see constant group AlertType

2	alertId	required	String	The unique id of the alert The id is assigned by the handling component when the message is published on the 'EXT' alert flow.
3	alertStatus	required	byte	
Allowed values: see constant group AlertStatus

4	alertOwner		String	The owner of the alert When the system creates an alert, no owner is assigned. In this case the status of the alert is set to 'Open'. If the status changes, it should have an owner assigned to it.
5	alertTimestamp		long	The time the alert was updated The time the alert was published or updated by a client user.
6	history		AlertData[]	This array holds all historical changes made to the alert. Should not be used by the reporting component.
7	alertSource		String	The source of the alert Usually this is the server/serverpair reporting the alert. However it can be set to be an user as well. If set, the value has to be set by the alert reporting component.
8	alertSubject		String	The subject of the alert. To be set by the reporting component.
9	alertMessage		String	The message of the alert. To be set by the reporting component.
10	logAlertToConsole		boolean	Log to the console? To be set by the reporting component. When set, the reporting and the handling components log the alert to console log.
11	alertBatchSize		int	This value is set by the throttler in the AlertReporter component. The throttler (if enabled) uses the {@link #getThrottleKey()} method to uniquely identify an alert and hold it back for a while. Any alert with the same key requested to be sent to the 'AlertHandler' is ignored. Instead the batch number is increased.
12	alertHoldbackTime		int	The time the alert has spent in the throttler before being sent to the 'AlertHandler' {@see #alertBatchSize}
8.1 Market Operations Messages (Internal)

Message: CdRequest

Message ID: 226

Type: Market Operations Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: A request to use as super class for all requests to CD.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
13	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
8.2 Market and Instrument Market Operations Messages

Message: InstrumentRsp

Message ID: 345

Type: Market and Instrument Market Operations Messages

Description: A response to an add or update request related to an instrument or a tradable instrument.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
6	internalId		String	The generated internal id of the instrument or tradable instrument.
7	messageReference		String	The message reference from the corresponding RequestMessage.
8	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
8.3 Market Operations: Server Messages

Message: GetTradingSchedulesReq

Message ID: 21

Type: Market Operations: Server Messages

Description: A request to retrieve the trading schedule for a specific orderbook rule group.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	orderBookRuleGroupId		String	The id of the orderbook rule group holding the trading schedule to be retrieved.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type GetTradingSchedulesRsp.

Message: GetTradingSchedulesRsp

Message ID: 22

Type: Market Operations: Server Messages

Description: A response to a GetTradingSchedulesReq.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
6	orderBookRuleGroupId		String	The id of the orderbook rule group holding the trading schedule retrieved.
7	tradingScheduleData		TradingSchedule[]	An array of all defined trading schedules defined for this orderbook rule group.
8	messageReference		String	The message reference from the corresponding RequestMessage.
9	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
Message: QueryAccProfileReq

Message ID: 80

Type: Market Operations: Server Messages

Description: A request for authorization (ACC) data for the user being logged-in.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	encodingType	required	int	States how the authorization data should be encoded.
Allowed values: see constant group ACC_ENCODING

13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type QueryAccProfileRsp.

Message: QueryAccProfileRsp

Message ID: 81

Type: Market Operations: Server Messages

Description: The authorization profile for the requesting user encoded in the requested encoding format.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
6	packedRights		String	The rights packed and hexified (ACC_ENCODING.PACKED_AND_HEXIFIED).
7	packedServices		String[]	The services possible to use.
8	plainServices		String[]	The services possible to use.
9	messageReference		String	The message reference from the corresponding RequestMessage.
10	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
Message: QueryAllAccDataReq

Message ID: 82

Type: Market Operations: Server Messages

Description: A request for all available authorization (ACC) data, for use by users logged-in with the market operator role. The encoding type of response data is always ACC_ENCODING.PACKED_AND_HEXIFIED.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	encodingType	required	int	The requested encoding format of the requested data. Currently only ACC_ENCODING.PACKED_AND_HEXIFIED supported.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type QueryAllAccDataRsp.

Message: QueryAllAccDataRsp

Message ID: 83

Type: Market Operations: Server Messages

Description: Provides all available authorization data.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
6	packedRights		String	The rights packed and hexified (ACC_ENCODING.PACKED_AND_HEXIFIED).
7	packedServices		String[]	The services possible to use.
8	messageReference		String	The message reference from the corresponding RequestMessage.
9	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
Message: QueryOrderBookRuleGroupParametersReq

Message ID: 204

Type: Market Operations: Server Messages

Description: A request to retrieve all orderbook rule groups that reference the orderbook rule group parameter object referenced by the parameterSetId parameter.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	parameterSetId	required	String	The identity of the orderbook rule group parameter set.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type QueryOrderBookRuleGroupParametersRsp.

Message: QueryOrderBookRuleGroupParametersRsp

Message ID: 205

Type: Market Operations: Server Messages

Description: A response to a query orderbook rule group parameters request.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
6	referencingOrderBookRuleGroupIds		String[]	An array of orderbook rule group ids that reference the queried orderbook rule group parameter set.
7	messageReference		String	The message reference from the corresponding RequestMessage.
8	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
Message: QueryOrderBookParametersReq

Message ID: 206

Type: Market Operations: Server Messages

Description: A request to retrieve all orderbooks that references the orderbook rule group parameter object with the given id.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	executeImmediate		Boolean	If set to false, servers expect that the executeWhen parameter is set to the time when the request is to be executed. This is a way to apply reference data changes at a future time.
9	executeWhen		String	If executeImmediate is set to false, this parameter is used to determine when "this" request is to be applied by the CD server. The format of the time string is yyyy-MM-dd'T'HH:mm:ss.
10	userDefinedString		String	Arbitrary, user-defined data, just passed back and forth by the scheduled event handler.
11	overrideModSchedule		Boolean	If set to true, the server is set to ignore the modification schedule for this request.
12	parameterSetId	required	String	The identity of the orderbook parameter set.
13	updateId		Long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate is set to false and executeWhen specifies a time. If the request is a update or delete request that affects a scheduled update, this attribute shall have the updateId received in the original add request. If the request is an add oeration, this attribute is ignored (set to null).
14	overrideWarning		Boolean	If the server validation of a request result in a "update warning", i.e. the operation may result in that another (eventually pending) operation may fail, or that the operation is potentially dangerous, the server may respond with a tap status code CdUpdateWarning. In this case, the transaction has not been executed. To force the transaction to be executed, the application may set this flag to true.
This request will normally return a response of type QueryOrderBookParametersRsp.

Message: QueryOrderBookParametersRsp

Message ID: 207

Type: Market Operations: Server Messages

Description: A response to a query orderbook parameters request.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	latestSSN		long	This is the latest and most likely the highest state sequence number, SSN, that has been assigned to the reference data.
6	referencingOrderBookIds		Long[]	An array of orderbook ids that reference the requested orderbook parameter set.
7	messageReference		String	The message reference from the corresponding RequestMessage.
8	updateId		long	This attribute only applies when managing scheduled updates, i.e. when attributes executeImmediate was set to false and executeWhen specifies a time in the incoming request. This attribute uniquely identifies the scheduled update. A corresponding ScheduledUpdateContainer (with the same updateId) will be received on the normal reference data flow (as broadcast).
Message: TaxQueryCacheRequest

Message ID: 239

Type: Market Operations: Server Messages

Description: Base class for cache queries

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	objectClass		String	The class. Null not allowed.
Message: TaxQueryCacheAllInstancesReq

Message ID: 240

Type: Market Operations: Server Messages

Description:

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	objectClass		String	The class. Null not allowed.
This request will normally return a response of type SimpleRsp.

Message: TaxQueryCacheObjectReq

Message ID: 241

Type: Market Operations: Server Messages

Description: Query the data cache for one object

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	objectClass		String	The class. Null not allowed.
3	objectId		String	The Object id. If set to null, data for all Cache object of class will be returned.
This request will normally return a response of type SimpleRsp.

Message: TaxQueryCacheAllChildrenReq

Message ID: 242

Type: Market Operations: Server Messages

Description: Query the cache for all child objects of the specified class identified by the specified parentId.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	objectClass		String	The class. Null not allowed.
3	parentId		String	The id used to identify the common parent for all child objects.
4	optionalParentIdAttributeName		String	An optional attribute to use instead of the default parentId attribute when comparing against the parent object.
This request will normally return a response of type SimpleRsp.

Message: TaxGenericSearchReq

Message ID: 244

Type: Market Operations: Server Messages

Description:

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	objectClass		String	The class. Null not allowed.
3	notAssignedFromClass		String	Type of objects not to search for. Null allowed.
4	constraints		FieldConstraint[]	Search constraints.
5	searchLimit		int	Max number of matching object to return. If set to zero (default value), all matching objects will be returned.
This request will normally return a response of type SimpleRsp.

8.3.1 Market and Instrument Market Operations: Server Messages

Message: AggregatedOrderBookStateChangeEvent

Message ID: 301

Type: Market and Instrument Market Operations: Server Messages

Description: This object hold aggregated OrderBookStateChangeEvent data

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	numberOfAffectedOrderBooks		int	The total number of orderbooks that share "this" OrderBookStateChangeEvent
2	subscriptionGroup	required	Integer	Subscription group to which the object belongs
3	sequenceNumber	required	long	Sequence number.
7	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
8	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
9	typeOfStateEvent	required	Integer	The type of the event. Please see the description of STATE_EVENT for an explanation of how state changes on order book and order book rule group level are correlated.
Allowed values: see constant group STATE_EVENT

10	newState		String	The name of the new state (i.e. the displayName of the state transition). This field is only filled in if typeOfStateEvent is set to STATE_CHANGE_OB, STATE_CHANGE_OB_RULEGROUP or UNX. For all other values of typeOfStateEvent, this field should be ignored.
11	orderBook		Long[]	The order books that are affected by this state change. This field is filled in for all type of state events except for STATE_CHANGE_OB_RULEGROUP.
12	orderBookRuleGroup		String	The order book rule group that is affected by this state change. This field is always filled in even though its primary use is for STATE_CHANGE_OB_RULEGROUP.
13	tradeHaltEventType		Integer	This field is only filled in for the type of state event HALT_EVENT in which it indicates the type of trade halt event.
Allowed values: see constant group TRADE_HALT_EVENT_TYPE

14	tradeHaltReason		Integer	This field is only filled in for the type of state event HALT_EVENT in which case it indicates the halt reason.
Allowed values: see constant group TRADE_HALT_REASON

15	tradeHaltInfo		String	This field is only filled in for the type of state event HALT_EVENT in which case it provide additional information about the trade halt event.
16	tradeHaltType		Integer	This field is only filled in for the type of state event HALT_EVENT in which case it indicates the type of trade halt.
Allowed values: see constant group TRADE_HALT_TYPE

17	isAutomatch		Boolean	Indicates whether the order book is in auto match state. Note that if the type is STATE_CHANGE_OB_RULEGROUP an individual order book in the order book rule group may be in different auto match state, e.g. due to trade halt or delayed opening/closing.
18	isAuction		Boolean	Indicates whether the order book is in auction state. Note that if the type is STATE_CHANGE_OB_RULEGROUP an individual order book in the order book rule group may be in different auction state, e.g. due to trade halt or delayed opening/closing.
19	tradeHaltId		String	This field is only filled in for the type of state event HALT_EVENT in which case it provides an identifier for this particular trade halt. The format is yyyy-MM-ddTHH:mm:ss.SSS
20	resumeAt		String	This field is only filled in for the type of state event HALT_EVENT in which case it specifies the time at which the trade halt will be lifted. The format is HH:mm:ss.
21	uncrossPrice		Long	This field is only filled in for the type of state event is UNX in which case it indicates the equilibrium price in the uncross.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

22	uncrossQty		Long	This field is only filled in for the type of state event is UNX in which case it indicates the traded quantity during uncross.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

Message: QueryMarketsReq

Message ID: 306

Type: Market and Instrument Market Operations: Server Messages

Description: Request to retrieve the markets defined.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
This request will normally return a response of type QueryMarketsRsp.

Message: QueryMarketsRsp

Message ID: 307

Type: Market and Instrument Market Operations: Server Messages

Description: Response message sent back for a previously-submitted QueryMarketReq.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	markets		Market[]	An array of available markets.
6	messageReference		String	The message reference from the corresponding RequestMessage.
Message: QueryViewsReq

Message ID: 308

Type: Market and Instrument Market Operations: Server Messages

Description: Request to retrieve the views defined for a market.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	marketId		String	Market ID for the views to be retrieved.
This request will normally return a response of type QueryViewsRsp.

Message: QueryViewsRsp

Message ID: 309

Type: Market and Instrument Market Operations: Server Messages

Description: Response message sent back for a previously-submitted QueryViewReq.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	views		View[]	An array of views.
6	messageReference		String	The message reference from the corresponding RequestMessage.
Message: QueryInstrumentsReq

Message ID: 310

Type: Market and Instrument Market Operations: Server Messages

Description: Request to retrieve the instruments defined for a market and view.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	marketId		String	Market ID for the views to be retrieved.
3	viewId		String	Optional View ID for the instruments to be retrieved. If NULL or * all instruments of the market will be retrieved.
This request will normally return a response of type QueryInstrumentsRsp.

Message: QueryInstrumentsRsp

Message ID: 311

Type: Market and Instrument Market Operations: Server Messages

Description: Response message sent back for a previously-submitted QueryInstrumentsReq.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	instruments		Instrument[]	An array of instruments.
6	messageReference		String	The message reference from the corresponding RequestMessage.
Message: QueryAccessInfoReq

Message ID: 314

Type: Market and Instrument Market Operations: Server Messages

Description: Request to retrieve information about the access rights granted to the user.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
This request will normally return a response of type QueryAccessInfoRsp.

Message: QueryAccessInfoRsp

Message ID: 315

Type: Market and Instrument Market Operations: Server Messages

Description: Response message sent back for a previously-submitted QueryAccessInfoReq.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	subscriptionItems		SubscriptionAccessItem[]	Subscription access profile.
6	tradingItems		TradingAccessItem[]	Trading access profile.
7	isSuperTrader		boolean	If the logged in user is a super trader, this attribute has the value True.
8	messageReference		String	The message reference from the corresponding RequestMessage.
8.3.1.1 Market and Instrument Market Operations: Server Messages (Internal)

Message: SubscriptionAccessItem

Message ID: 312

Type: Market and Instrument Market Operations: Server Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: Subscription access item. The item defines granted access for a flow for a group of instruments, i.e. view.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	flow		int	The flow identifier for the subscription
Allowed values: see constant group BroadcastFlows

2	viewId		String	Group of instruments.
Message: TradingAccessItem

Message ID: 313

Type: Market and Instrument Market Operations: Server Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: Trading access item. The item defines granted trading access to a group of instruments, i.e. view.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	viewId		String	Group of instruments.
9 Surveillance Messages

Message: Heartbeat

Message ID: 74

Type: Surveillance Messages

Description: Partition heartbeat.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
5	timestamp		String	Current system time. The format is yyyy-MM-ddTHH:mm:ss.SSS
6	partition		Integer	Partition from which heartbeat is originating.
10 Data Warehouse Messages

Message: HsQueryOrdersReq

Message ID: 208

Type: Data Warehouse Messages

Description: Query for order events. A start and end time may be specified as well as various attributes in the trade data. Depending on the access right for the requesting user, some optional fields may be mandatory.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	startTime		String	Start time/date of search (inclusive). The format is yyyy-MM-ddTHH:mm:ss.SSS. The value null is treated as a wildcard.
9	endTime		String	End time/date of search (inclusive). The format is yyyy-MM-ddTHH:mm:ss.SSS. The value null is treated as a wildcard.
10	orderBook		Long	The orderbook id for the searched orders. Part of search criteria template, if null it is treated as a wildcard.
11	selectionMember		String	The member of the order. Must be specified unless it is a servicedesk user that is preforming the query. Several members can be specified if they are separated by the ';' character. If solely the '*' character is specified the logged-in user's member and the members it may receive orders on-behalf for is used in the search. Part of search criteria template, if null it is treated as a wildcard.
12	selectionUser		String	The user attribute in the order. Part of search criteria template, if null it is treated as a wildcard.
13	privateOrderId		String	The private order identity. Part of search criteria template, if null it is treated as a wildcard.
14	subscriptionGroup		Integer	Search for all orders within a subscription group. If both an orderbook and a subscriptiongroup is specified, it is required that the specified orderbook belong to the subscriptiongroup. Part of search criteria template, if null it is treated as a wildcard.
15	fromSeqNumber		Long	Return only orders with a sequence number greater or equal to "fromSeqNumber". Part of search criteria template, if null it is treated as a wildcard.
17	pageSize	required	int	The maximal number of orders to be returned as a result of this query. If the page size is zero or less than zero, the system-configured maximum number of records is returned. Page sizes greater than the system-configured maximum size are overridden. If the requested long orders do not fit in a single response, the query and its responses have to be segmented by pages, and subsequent queries with increasing pageNumber values are expected. Do not change the page size value between paged queries.
18	pageNumber	required	int	This field is intended for paged or segmented queries, requesting a particular page or segment. The first query should have page number 0, the second has page number 1 and so on. Page numbers greater than one and increasing are expected if the last query gave a response with the field resultMayBeTruncated set to true.
19	clientOrderId		String	The client order id reference. Part of search criteria template, if null it is treated as a wildcard.
This request will normally return a response of type SimpleRsp.

Message: HsQueryTradesReq

Message ID: 209

Type: Data Warehouse Messages

Description: Query for trade events. A start and end time may be specified as well as various attributes in the trade data. Depending on the access right for the requesting user, some optional fields may be mandatory.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	startTime		String	Start time/date of search (inclusive). The format is yyyy-MM-ddTHH:mm:ss.SSS. The value null is treated as a wildcard.
9	endTime		String	End time/date of search (inclusive). The format is yyyy-MM-ddTHH:mm:ss.SSS. The value null is treated as a wildcard.
10	orderBook		Long	Part of search criteria template, if null it is treated as a wildcard.
11	selectionMember		String	Either:
receiving member of the trade, if it is specified on the trade event and the type of trade is TRADE_REPORT_HALF (see trade report functionality) (i.e. this field shall not be used by a clearing member to get all trades it has received as drop copy - in this case the ownClearingMember field shall be used instead.)
own member of the trade otherwise
Either this field or/and ownClearingMember must be specified unless it is a service desk user that is performing the query. Several members can be specified if they are separated by the ';' character. If solely the '*' character is specified the logged-in user's member and the members it may receive trades on-behalf for is used in the search. Part of search criteria template, if null it is treated as a wildcard.
12	selectionUser		String	The ownUser attribute in the trade. Part of search criteria template, if null it is treated as a wildcard.
13	subscriptionGroup		Integer	Search for all orders within a subscription group. If both an order book and a subscription group is specified, it is required that the specified order book belong to the subscription group. Part of search criteria template, if null it is treated as a wildcard.
15	dealId		String	The deal id of the trade. Part of search criteria template, if null it is treated as a wildcard.
16	tradeId		String	The trade id for the trade. Part of search criteria template, if null it is treated as a wildcard.
17	typeOfTrade		Integer	The type of trade. Part of search criteria template, if null it is treated as a wildcard.
18	ownClearingMember		String	The own clearing member of the trade. Either this field or/and selectionMember must be specified unless it is a service desk user that is performing the query. Several members can be specified if they are separated by the ';' character. If solely the '*' character is specified the logged-in user's member and the members it may receive trades on-behalf for is used in the search. Part of search criteria template, if null it is treated as a wildcard.
19	pageSize	required	int	The maximal number of orders to be returned as a result of this query. If the page size is zero or less than zero, the system-configured maximum number of records is returned. The page size is set to the system-configured maximum page size by the system, if the page size is less than one or greater than that configured value. If the number of query result items is greater than the page size, several identical queries, where only the pageNumber is increased, are required to retrieve all items. Do not change the page size value between subsequent queries.
20	pageNumber	required	int	This field is intended for paged or segmented queries, requesting a particular page or segment. The first query should have page number 0, the second has page number 1 and so on. Page numbers greater than one and increasing are expected if the last query gave a response with the field resultMayBeTruncated set to true.
21	searchOnTimeOfEvent		boolean	Indicates if startTime and endTime represents timeOfTrade or timeOfEvent in TradeEvent. If set to true, timeOfEvent is used, otherwise timeOfTrade is used.
24	counterpartyTradingMember		String	Searches for trades with a specified counterparty trading member. Part of search criteria template, if null it is treated as a wildcard.
25	counterpartyClearingMember		String	Only applicable for Order and Trade related messages. The Counterparty Clearing Member responsible for clearing the order or trade. Part of search criteria template, if null it is treated as a wildcard.
501	referenceTradeId		String	The reference trade oi for the trade.
502	minimumPriceLimit		Long	Trades having an execution price greater or equal to the specified price will be included in the search criteria.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

503	maximumPriceLimit		Long	Trades having an execution price less or equal to the specified price will be included in the search criteria.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

504	subTypeOfTrade		Integer	The sub type of trade.
Allowed values: see constant group SUB_TYPE_OF_TRADE

505	tradeReportType		String	The type of trade report as specified in the TradeReportTypes table.
506	privateIdentification		String	Assumed to match either of askSideId and bidSideId, since these fields may contain eiter the private order id or the trade id (if it is a trade report).
507	unmatchedTradeHalves		Boolean	Return unmatched trade halves. If non-null, only searches trade halves from today.
508	matchedTradeHalves		Boolean	Return matched trade halves. If non-null, only searches trade halves from today.
509	bustedTradeHalves		Boolean	Return busted trade halves. If non-null, only searches trade halves from today.
510	traderId		String	The trader ID. May be both own- and counter party trader ID. This is part of the search critera and if null it's treated as a wildcard.
511	selectionActingUser		String	The acting user of the trade. May be both own- and counter party acting user. This is part of the search critera and if null it's treated as a wildcard.
512	account		String	The account of the trade. May be both accountAskSide and accountBidSide. This is part of the search critera and if null it's treated as a wildcard.
513	orderId		String	The id of the trade side. May be both bid- and askSideId. This is part of the search critera and if null it's treated as a wildcard.
514	sortByTimeOfEvent		Boolean	If true the search result is sorted by timeOfEvent. If false (or null) the result is sorted by sequenceNumber.
This request will normally return a response of type SimpleRsp.

Message: HsQueryRFQReq

Message ID: 210

Type: Data Warehouse Messages

Description: Query for request for quote events. A start and end time may be specified as well as various attributes in the trade data. Depending on the access right for the requesting user, some optional fields may be mandatory.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
8	startTime		String	Start time/date of search (inclusive). The format is yyyy-MM-ddTHH:mm:ss.SSS. The value null is treated as a wildcard.
9	endTime		String	End time/date of search (inclusive). The format is yyyy-MM-ddTHH:mm:ss.SSS. The value null is treated as a wildcard.
10	orderBook		Long	The orderbook id for the searched orders. Part of search criteria template, if null it is treated as a wildcard.
11	selectionMember		String	Either:
the receiving member of the request for quote if that is specified on the request for quote (see trade report functionality)
the member of the request for quote if the receiving member is not specified on the request for quote
Must be specified unless it is a servicedesk user that is preforming the query. Several members can be specified if they are separated by the ';' character. If solely the '*' character is specified the logged-in user's member and the members it may receive request for quotes on-behalf for is used in the search. Part of search criteria template, if null it is treated as a wildcard.
12	selectionUser		String	The user attribute in the request for quote. Part of search criteria template, if null it is treated as a wildcard.
13	publicRFQId		String	The public request for quotes id. Part of search criteria template, if null it is treated as a wildcard.
14	subscriptionGroup		Integer	Search for all orders within a subscription group. If both an orderbook and a subscriptiongroup is specified, it is required that the specified orderbook belong to the subscriptiongroup. Part of search criteria template, if null it is treated as a wildcard.
16	pageSize	required	int	The maximal number of orders to be returned as a result of this query. If the page size is zero or less than zero, the system-configured maximum number of records is returned. Page sizes greater than the system-configured maximum size are overridden. If the requested long orders do not fit in a single response, the query and its responses have to be segmented by pages, and subsequent queries with increasing pageNumber values are expected. Do not change the page size value between paged queries.
17	pageNumber	required	int	This field is intended for paged or segmented queries, requesting a particular page or segment. The first query should have page number 0, the second has page number 1 and so on. Page numbers greater than one and increasing are expected if the last query gave a response with the field resultMayBeTruncated set to true.
This request will normally return a response of type SimpleRsp.

Message: HsQueryTradeStatisticsReq

Message ID: 520

Type: Data Warehouse Messages

Description: Query for sampled trade statistic.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	pageSize	required	int	The maximal number of messages returned as a result of this query. If the page size is zero or less than zero, the system configured maximum number of records is returned. Page sizes greater than the system configured maximum size are overridden. If the number of messages returned as a result of this query is greater than the page size the query have to be segmented by pages, and subsequent queries with increasing pageNumber values are expected. Do not change the page size value between paged queries.
7	pageNumber	required	int	This field is intended for segmented queries, requesting a particular page. The first query should have page number 0, the second should have page number 1 and so on.
8	samplingIntervalTimeUnit	required	int	The time unit of the sampling interval.
Allowed values: see constant group TIME_UNIT

9	samplingInterval	required	int	The number of time units between samples.
10	samplingStartTime	required	String	Local start time/date of sampling (inclusive). The format depends on the time unit of the sampling:
DAYS - yyyy-MM-dd
HOURS - yyyy-MM-ddTHH
MINUTES - yyyy-MM-ddTHH:mm
SECONDS - yyyy-MM-ddTHH:mm:ss
11	samplingEndTime		String	Local end time/date of sampling (inclusive). The format is the same as specified for samplingStartTime. If not set sampling will be preformed up to current time.
12	orderBookId		Long	If set, only statistics related to the specified order book is returned.
13	subscriptionGroupId		Integer	If set, only statistics related to the specified subscription group is returned. N.B. If both an order book id and a subscription group id are specified, it is required that the referenced order book belongs to the referenced subscription group.
This request will normally return a response of type SimpleRsp.

Message: HsTradeStatistic

Message ID: 521

Type: Data Warehouse Messages

Description: Sampled trade statistic.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	samplingSeqNo	required	Long	Identifies a sample statistic in the response to a query for sampled statistics. Starts at 1 and is monotonically increased by one.
2	orderBookId		long	The order book where the trading is performed.
3	lastPrice		Long	The price of the last published trade (that updates last price) in the sampled interval.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

4	highPrice		Long	Highest trade price in the sampled interval.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

5	lowPrice		Long	Lowest trade price in the sampled interval.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

6	totalQuantity		Long	Total quantity traded in the sampled interval.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.QTY.

7	totalTurnover		Long	Total turnover (i.e. quantity * price) traded in the sampled interval.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

8	averagePrice		Long	Volume-weighted average price (VWAP) in the sampled interval.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

Message: HsQueryIndexStatisticsReq

Message ID: 522

Type: Data Warehouse Messages

Description: Query for sampled index statistic.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	pageSize	required	int	The maximal number of messages returned as a result of this query. If the page size is zero or less than zero, the system configured maximum number of records is returned. Page sizes greater than the system configured maximum size are overridden. If the number of messages returned as a result of this query is greater than the page size the query have to be segmented by pages, and subsequent queries with increasing pageNumber values are expected. Do not change the page size value between paged queries.
7	pageNumber	required	int	This field is intended for segmented queries, requesting a particular page. The first query should have page number 0, the second should have page number 1 and so on.
8	samplingIntervalTimeUnit	required	int	The time unit of the sampling interval.
Allowed values: see constant group TIME_UNIT

9	samplingInterval	required	int	The number of time units between samples.
10	samplingStartTime	required	String	Local start time/date of sampling (inclusive). The format depends on the time unit of the sampling:
DAYS - yyyy-MM-dd
HOURS - yyyy-MM-ddTHH
MINUTES - yyyy-MM-ddTHH:mm
SECONDS - yyyy-MM-ddTHH:mm:ss
11	samplingEndTime		String	Local end time/date of sampling (inclusive). The format is the same as specified for samplingStartTime. If not set sampling will be preformed up to current time.
12	orderBookId		Long	If set, only statistics related to the specified order book is returned.
13	subscriptionGroupId		Integer	If set, only statistics related to the specified subscription group is returned. N.B. If both an order book id and a subscription group id are specified, it is required that the referenced order book belongs to the referenced subscription group.
This request will normally return a response of type SimpleRsp.

Message: HsIndexStatistic

Message ID: 523

Type: Data Warehouse Messages

Description: Sampled index statistic.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	samplingSeqNo	required	Long	Identifies a sample statistic in the response to a query for sampled statistics. Starts at 1 and is monotonically increased by one.
2	orderBookId		long	The order book where the trading is performed.
3	value	required	long	The last calculated index value in the sampled interval.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

4	highValue	required	long	Highest calculated index value in the sampled interval.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

5	lowValue	required	long	Lowest calculated index value in the sampled interval.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

6	totalTurnover		BigInteger	Total turnover for the trades that were used to calculate index values in the sampled interval.
This field is a fixed point number with a scaling factor equal to 1/DIVISOR.PRICE.

Message: TaxQueryIndexClosingPriceReq

Message ID: 1613

Type: Data Warehouse Messages

Description: Query for index closing price. A start and end time may be specified as well as various attributes in the index closing price data. Depending on the access right for the requesting user, some optional fields may be mandatory.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	pageSize	required	int	The maximal number of orders to be returned as a result of this query. If the page size is zero or less than zero, the system-configured maximum number of records is returned. The page size is set to the system-configured maximum page size by the system, if the page size is less than one or greater than that configured value. If the number of query result items is greater than the page size, several identical queries, where only the pageNumber is increased, are required to retrieve all items. Do not change the page size value between subsequent queries.
7	pageNumber	required	int	This field is intended for paged or segmented queries, requesting a particular page or segment. The first query should have page number 0, the second has page number 1 and so on. Page numbers greater than one and increasing are expected if the last query gave a response with the field resultMayBeTruncated set to true.
8	startTime		String	Start time/date of search (inclusive). The format is yyyy-MM-ddTHH:mm:ss.SSS. The value null is treated as a wildcard.
9	endTime		String	End time/date of search (inclusive). The format is yyyy-MM-ddTHH:mm:ss.SSS. The value null is treated as a wildcard.
10	searchOnTimeOfEvent		boolean	Indicates if startTime and endTime represents timeOfTrade or timeOfEvent in TradeEvent. If set to true, timeOfEvent is used, otherwise timeOfTrade is used.
11	orderBook		Long	Part of search criteria template, if null it is treated as a wildcard.
12	subscriptionGroup		Integer	Search for all orders within a subscription group. If both an order book and a subscription group is specified, it is required that the specified order book belong to the subscription group. Part of search criteria template, if null it is treated as a wildcard.
This request will normally return a response of type SimpleRsp.

10.1 Data Warehouse Messages (Internal)

Message: HsQueryReq

Message ID: 515

Type: Data Warehouse Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: Abstract class for history queries.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	pageSize	required	int	The maximal number of messages returned as a result of this query. If the page size is zero or less than zero, the system configured maximum number of records is returned. Page sizes greater than the system configured maximum size are overridden. If the number of messages returned as a result of this query is greater than the page size the query have to be segmented by pages, and subsequent queries with increasing pageNumber values are expected. Do not change the page size value between paged queries.
7	pageNumber	required	int	This field is intended for segmented queries, requesting a particular page. The first query should have page number 0, the second should have page number 1 and so on.
Message: HsQueryStatisticsReq

Message ID: 516

Type: Data Warehouse Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: Abstract class for queries for sampled statistic.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	pageSize	required	int	The maximal number of messages returned as a result of this query. If the page size is zero or less than zero, the system configured maximum number of records is returned. Page sizes greater than the system configured maximum size are overridden. If the number of messages returned as a result of this query is greater than the page size the query have to be segmented by pages, and subsequent queries with increasing pageNumber values are expected. Do not change the page size value between paged queries.
7	pageNumber	required	int	This field is intended for segmented queries, requesting a particular page. The first query should have page number 0, the second should have page number 1 and so on.
8	samplingIntervalTimeUnit	required	int	The time unit of the sampling interval.
Allowed values: see constant group TIME_UNIT

9	samplingInterval	required	int	The number of time units between samples.
10	samplingStartTime	required	String	Local start time/date of sampling (inclusive). The format depends on the time unit of the sampling:
DAYS - yyyy-MM-dd
HOURS - yyyy-MM-ddTHH
MINUTES - yyyy-MM-ddTHH:mm
SECONDS - yyyy-MM-ddTHH:mm:ss
11	samplingEndTime		String	Local end time/date of sampling (inclusive). The format is the same as specified for samplingStartTime. If not set sampling will be preformed up to current time.
Message: HsStatistic

Message ID: 517

Type: Data Warehouse Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: Sampled statistic.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	samplingSeqNo	required	Long	Identifies a sample statistic in the response to a query for sampled statistics. Starts at 1 and is monotonically increased by one.
Message: HsQueryTradingStatisticsReq

Message ID: 518

Type: Data Warehouse Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: Abstract class for queries for sampled trading statistic.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	pageSize	required	int	The maximal number of messages returned as a result of this query. If the page size is zero or less than zero, the system configured maximum number of records is returned. Page sizes greater than the system configured maximum size are overridden. If the number of messages returned as a result of this query is greater than the page size the query have to be segmented by pages, and subsequent queries with increasing pageNumber values are expected. Do not change the page size value between paged queries.
7	pageNumber	required	int	This field is intended for segmented queries, requesting a particular page. The first query should have page number 0, the second should have page number 1 and so on.
8	samplingIntervalTimeUnit	required	int	The time unit of the sampling interval.
Allowed values: see constant group TIME_UNIT

9	samplingInterval	required	int	The number of time units between samples.
10	samplingStartTime	required	String	Local start time/date of sampling (inclusive). The format depends on the time unit of the sampling:
DAYS - yyyy-MM-dd
HOURS - yyyy-MM-ddTHH
MINUTES - yyyy-MM-ddTHH:mm
SECONDS - yyyy-MM-ddTHH:mm:ss
11	samplingEndTime		String	Local end time/date of sampling (inclusive). The format is the same as specified for samplingStartTime. If not set sampling will be preformed up to current time.
12	orderBookId		Long	If set, only statistics related to the specified order book is returned.
13	subscriptionGroupId		Integer	If set, only statistics related to the specified subscription group is returned. N.B. If both an order book id and a subscription group id are specified, it is required that the referenced order book belongs to the referenced subscription group.
Message: HsTradingStatistic

Message ID: 519

Type: Data Warehouse Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: Abstract class for sampled trading statistic.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	samplingSeqNo	required	Long	Identifies a sample statistic in the response to a query for sampled statistics. Starts at 1 and is monotonically increased by one.
2	orderBookId		long	The order book where the trading is performed.
11 Test Messages

Message: TestMessageReq

Message ID: 211

Type: Test Messages

Description: Request to enter an test message.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	member		String (64)	The member of the user.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
5	clearingMember		String (64)	Only applicable for Order and Trade related messages. The Member responsible for clearing the order or trade.
6	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
7	account		String (64)	Only applicable for Order and Trade related messages. A free text field passed through for internal member use.
8	memberList		String	A comma separated list of member ids, used to broadcast test events to.
9	testMessageType		Integer	Type of test message.
Allowed values: see constant group TEST_MESSAGE_TYPE

10	orderBook		Long	Order book which the message concerns
11	runId		String	Id of execution. This field is used do distinguish between replayed and live messages.
12	info		String	General information i.e. for example the test case that is being executed.
13	syncId		Long	Id of sync.
501	traderId		String (64)	Only applicable for Order and Trade related messages. The TraderID for the order/trade.
This request will normally return a response of type TestMessageRsp.

Message: TestMessageRsp

Message ID: 212

Type: Test Messages

Description: Response to an enter order request.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	syncKeys		TestSyncKey	The synchronization key for a specific subscription group and bdx flow.
6	messageReference		String	The message reference from the corresponding RequestMessage.
Message: TestEvent

Message ID: 214

Type: Test Messages

Description: A test event.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
5	testMessageType		Integer	Type of test message.
Allowed values: see constant group TEST_MESSAGE_TYPE

6	orderBook		Long	Order book which the message concerns
7	runId		String	Id of execution. This field is used do distinguish between replayed and live messages.
8	info		String	General information i.e. for example the test case that is being executed.
9	syncId		Long	Id of sync.
Message: MpgTestMessageReq

Message ID: 1535

Type: Test Messages

Description: Request to enter an test message. The test message generates a broadcast.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	clearingMember		String (64)	Only applicable for Order and Trade related messages. The Member responsible for clearing the order or trade.
7	account		String (64)	Only applicable for Order and Trade related messages. A free text field passed through for internal member use.
8	traderId		String (64)	Only applicable for Order and Trade related messages. The TraderID for the order/trade.
9	memberList		String	A comma separated list of member ids, used to broadcast test events to.
10	testMessageType		Integer	Type of test message.
Allowed values: see constant group TEST_MESSAGE_TYPE

11	orderBook		Long	Order book which the message concerns
12	runId		String	Id of execution. This field is used do distinguish between replayed and live messages.
13	info		String	General information i.e. for example the test case that is being executed.
14	syncId		Long	Id of sync.
15	stations		String	Each process that handles the test message appends its name here.
16	instrument		String	The instrument this message concerns. Used to route the message to the correct PE.
This request will normally return a response of type MpgTestMessageRsp.

Message: MpgTestMessageRsp

Message ID: 1536

Type: Test Messages

Description: Response to PeTestMessageReq.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
6	syncKeys		TestSyncKey	The synchronization key for a specific subscription group and bdx flow.
7	testMessageType		Integer	Type of test message.
Allowed values: see constant group MPG_TEST_MESSAGE_TYPE

8	info		String	General information i.e. for example the test case that is being executed.
9	stations		String	Each process that handles the test message appends its name here.
10	instrument		String	The instrument this message concerns. Used to route the message to the correct PE.
Message: MpgTestMessageEvent

Message ID: 1545

Type: Test Messages

Description: Broadcasted when MPG has received a MpgTestMessageReq.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timestamps		int[]	Contains timestamps that are offset against below timestampOffset. The timestamps have been created using the FwTimestamper component and the unit of time is given by this component.
4	timestampOffset		long	Every above timestamp is an offset from this value.
5	timestampOffsetMillis		long	This timestamp is taken at the same time as above timestampOffset. It is number of milliseconds, between the current time and midnight, January 1, 1970 UTC.
6	addedTimestamps		long[]	Contains timestamps that have been added to the message but are created with another mechanism than provided by the FwTimestamper component. The type of time (i.e. if absolute or duration) and the unit of time is implicitly given by the array position.
8	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
10	testMessageType		Integer	Type of test message.
Allowed values: see constant group MPG_TEST_MESSAGE_TYPE

11	info		String	General information i.e. for example the test case that is being executed.
12	stations		String	Each process that handles the test message appends its name here.
13	instrument		String	The instrument this message concerns. Used to route the message to the correct PE.
14	syncId		Long	Id of sync.
15	orderBookId		Long	Order book.
Message: DsTestMessageReq

Message ID: 1584

Type: Test Messages

Description: Request to enter an test message. The test message generates a broadcast, and is also forwarded to AM.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
7	testMessageType		int	Type of test message.
Allowed values: see constant group DS_TEST_MESSAGE_TYPE

8	info		String	General information i.e. for example the test case that is being executed.
This request will normally return a response of type DsTestMessageRsp.

Message: DsTestMessageRsp

Message ID: 1585

Type: Test Messages

Description: Response to TcTestMessageReq.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
6	testMessageType		int	Type of test message.
Allowed values: see constant group DS_TEST_MESSAGE_TYPE

Message: DsTestMessageEvent

Message ID: 1586

Type: Test Messages

Description: Test event for Delay Server

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
5	info		String	General information i.e. for example the test case that is being executed.
6	stations		String	Each process that handles the test message appends its name here.
7	syncId		Long	Id of sync.
8	orderBookId		Long	Order book.
Message: MsTestMessageReq

Message ID: 1626

Type: Test Messages

Description: Request to enter an test message. The test message generates a broadcast, and is also forwarded to AM.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	possDup		boolean	The possible duplicate flag
2	actingUser		String (64)	The user that initiated a request.
Shall only be set in requests if (and only if) it is a gateway user that sends the request.
Otherwise TRADExpress will set it to the user that established the session on which the request was received on.
See also the user field.
3	user		String (64)	The responsible user.
Shall only be set in requests if actingUser is acting on behalf of another user.
Otherwise TRADExpress will set it to the actingUser.
4	member		String (64)	The member of the user.
5	tradingMember		String (64)	If the member is part of a hierarchy then this field contains the parent member. If the member is not part of a hierarchy then this field is set to be identical to the member.
6	testMessageType		int	Type of test message.
Allowed values: see constant group MS_TEST_MESSAGE_TYPE

7	info		String	General information i.e. for example the test case that is being executed.
This request will normally return a response of type MsTestMessageRsp.

Message: MsTestMessageRsp

Message ID: 1627

Type: Test Messages

Description: Response to MsTestMessageReq.

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	code		int	The overall status
2	message		String	Complementary text for extra context-dependent info
3	subCode		int[]	Subcodes
4	requestId		String	A system-unique id set by the TAX. This id appears in each request/response/broadcast.
5	messageReference		String	The message reference from the corresponding RequestMessage.
6	testMessageType		int	Type of test message.
Allowed values: see constant group MS_TEST_MESSAGE_TYPE

Message: MsTestMessageEvent

Message ID: 1628

Type: Test Messages

Description: Test event for Market Statistics Server

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroup	required	Integer	Subscription group to which the object belongs
2	sequenceNumber	required	long	Sequence number.
3	timeOfEvent	required	String	Time of event. Set by the system when the event occurs. The format is YYYY-MM-DDThh:mm:ss.sss. N.B. If the event is part of a current value this field contains a non valid value.
4	sequenceIndicator		Boolean	Indicates if the event is part of a sequence of events that is sent out as a result of the same TRADExpress event (e.g. order insert, state change etc.). If set to true the event is the last event in a sequence of events that occurred at the same time. If set to false the event is part of an event sequence which last event will have this field set to true. N.B. If there is only one event that occurred at the same time the only event will have this field set to true. N.B. If any filtering is done (e.g. only subscribing to event relating to some order books) or if the event is part of a current value this field can not be trusted. N.B. This indicator is currently only supported to be configured on market by level flows (e.g. PUBLIC_PRICELEVEL_FLOW, MBL_L1_FLOW, MBL_L2_FLOW). It is configurable per TRADExpress installation if events on a certain public flow are visible as sequences. If events on a public flow aren't visible as sequences this field will not be set.
5	info		String	General information i.e. for example the test case that is being executed.
6	stations		String	Each process that handles the test message appends its name here.
7	syncId		Long	Id of sync.
8	orderBookId		Long	Order book.
11.1 Test Messages (Internal)

Message: TestSyncKey

Message ID: 213

Type: Test Messages

This message can only appear as a sub-object in other messages; it can never be used as a stand-alone message.

Description: The key for the synchronization. This key should be applied to your instanding subscription flows

Field no.	Field name (tag)	Mand.	Type (max length)	Comment
1	subscriptionGroups		Integer[]	Subscription group to which the syncId belongs.
2	syncIds		Long[]	Id of sync.
3	syncFlows		int[]	The flows where the sync transaction will be broadcasted.
Allowed values: see constant group BroadcastFlows